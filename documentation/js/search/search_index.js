var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ApiServiceService.html",[0,0.871,1,1.928]],["body/injectables/ApiServiceService.html",[0,1.402,1,3.104,2,2.004,3,0.532,4,0.465,5,0.465,6,3.285,7,0.84,8,1.541,9,4.442,10,1.496,11,3.97,12,3.152,13,1.402,14,4.934,15,1.24,16,0.037,17,0.677,18,1.044,19,1.128,20,4.934,21,1.025,22,0.929,23,1.025,24,1.022,25,0.677,26,3.97,27,3.97,28,2.834,29,2.228,30,2.004,31,0.532,32,0.756,33,3.285,34,0.029,35,0.029]],["title/components/AppComponent.html",[36,0.717,37,1.051]],["body/components/AppComponent.html",[3,0.367,4,0.321,5,0.321,7,0.579,8,1.205,10,1.453,13,1.377,15,0.855,16,0.037,17,0.826,18,0.944,19,0.778,21,0.707,22,1.045,23,0.996,24,0.734,25,0.467,30,1.948,31,0.367,32,0.522,34,0.023,35,0.023,36,1.045,37,1.662,38,1.761,39,1.383,40,1.956,41,1.383,42,1.383,43,2.267,44,2.165,45,4.464,46,1.135,47,2.58,48,2.486,49,2.754,50,4.464,51,1.948,52,3.857,53,3.857,54,3.694,55,1.205,56,4.846,57,2.739,58,2.72,59,4.464,60,4.846,61,3.857,62,2.739,63,0.778,64,1.453,65,2.267,66,1.948,67,3.192,68,3.857,69,3.857,70,2.739,71,2.267,72,2.739,73,1.598,74,2.739,75,2.739,76,2.267,77,2.739,78,1.956,79,2.739,80,2.739,81,2.739,82,2.739,83,2.739,84,2.739,85,2.739,86,1.723,87,2.739,88,2.739,89,2.739,90,2.739,91,2.739,92,1.956,93,2.739,94,2.739,95,2.739,96,2.739,97,2.739,98,2.739,99,2.739,100,2.739,101,2.739,102,2.739,103,2.267,104,2.739,105,2.739,106,2.739,107,1.135,108,1.948,109,1.948,110,0.94,111,2.447,112,1.383,113,1.383,114,0.855,115,1.383,116,0.94,117,1.383,118,0.855,119,1.383,120,0.94,121,1.383,122,0.855,123,1.251,124,1.383,125,1.251,126,0.855,127,1.251,128,1.383]],["title/modules/AppModule.html",[129,1.928,130,1.928]],["body/modules/AppModule.html",[3,0.334,4,0.292,5,0.292,16,0.037,24,1.133,25,0.425,31,0.334,32,0.474,34,0.021,35,0.021,37,1.97,48,1.137,66,1.258,86,1.567,107,1.032,114,1.603,116,1.761,118,1.603,120,1.761,122,1.603,126,1.603,129,1.567,130,3.85,131,1.398,132,1.567,133,3.504,134,3.504,135,3.504,136,1.778,137,2.061,138,2.061,139,2.061,140,2.061,141,2.061,142,2.881,143,2.881,144,2.881,145,2.982,146,2.061,147,1.778,148,2.491,149,2.982,150,2.982,151,3.604,152,3.604,153,2.982,154,2.491,155,2.491,156,2.491,157,2.061,158,2.061,159,2.491,160,1.778,161,1.778,162,2.491,163,3.604,164,3.604,165,1.778,166,2.491,167,2.491,168,2.061,169,2.491,170,2.491,171,2.491,172,2.491,173,3.604,174,2.061,175,3.604,176,2.491,177,2.491,178,2.061,179,1.567,180,2.982,181,2.061,182,1.567,183,2.491,184,2.491,185,2.491,186,2.491,187,2.491,188,2.491,189,2.061,190,2.491,191,2.061,192,2.491,193,2.491,194,2.491,195,2.061,196,2.491,197,2.491,198,2.491,199,2.491,200,2.491]],["title/modules/AppRoutingModule.html",[129,1.928,143,1.72]],["body/modules/AppRoutingModule.html",[3,0.509,4,0.445,5,0.445,16,0.037,24,1.085,25,0.648,31,0.509,32,0.723,34,0.028,35,0.028,114,1.186,118,1.186,122,1.186,123,1.734,131,2.132,136,2.712,143,2.694,149,3.143,150,3.971,168,3.143,178,3.143,179,2.389,180,3.971,181,3.143,182,2.389,201,3.798,202,3.798,203,4.799,204,3.31,205,3.143,206,1.734,207,5.527,208,3.798,209,4.799,210,4.799,211,3.798,212,3.798]],["title/interfaces/Array.html",[213,1.399,214,1.928]],["body/interfaces/Array.html",[3,0.179,4,0.156,5,0.156,7,0.601,13,1.49,15,1.593,16,0.037,17,0.87,18,1.079,19,1.449,21,1.546,23,1.397,31,0.179,34,0.013,35,0.013,55,0.692,63,1.49,64,1.07,66,1.119,206,2.199,213,1.012,214,1.394,215,0.84,216,0.953,217,2.215,218,2.736,219,2.215,220,2.215,221,2.215,222,2.35,223,2.215,224,2.215,225,2.215,226,2.215,227,2.215,228,2.215,229,2.215,230,2.215,231,2.736,232,2.215,233,1.833,234,3.695,235,1.335,236,3.274,237,1.335,238,4.936,239,1.833,240,1.335,241,3.896,242,1.833,243,1.335,244,2.992,245,1.833,246,1.335,247,1.335,248,2.736,249,1.335,250,1.833,251,4.551,252,1.335,253,3.274,254,3.404,255,3.274,256,1.833,257,1.335,258,1.833,259,1.335,260,1.833,261,1.335,262,1.833,263,1.335,264,1.833,265,1.335,266,1.833,267,1.335,268,1.833,269,1.335,270,1.335,271,1.833,272,1.335,273,1.104,274,1.104,275,1.104,276,1.104,277,2.125,278,1.104,279,1.104,280,1.104,281,2.736,282,1.833,283,2.736,284,1.833,285,2.736,286,1.104,287,1.104,288,1.104,289,1.104,290,1.177,291,1.833,292,1.104,293,1.833,294,1.833,295,2.35,296,1.833,297,3.035,298,1.833,299,1.833,300,1.582,301,1.104,302,1.833,303,1.833,304,2.736,305,1.104,306,2.736,307,1.104,308,1.244,309,2.059,310,1.104,311,1.104,312,1.104,313,1.104,314,1.104,315,1.104,316,1.104,317,1.104,318,1.104,319,1.104,320,1.104,321,1.104,322,1.104,323,1.104,324,1.104,325,1.104,326,1.104,327,1.104,328,1.104,329,1.833,330,1.104,331,2.35,332,1.104]],["title/injectables/CacheStorageService.html",[0,0.871,333,1.928]],["body/injectables/CacheStorageService.html",[0,1.034,2,1.274,3,0.338,4,0.296,5,0.296,7,0.534,8,1.136,10,1.608,13,1.546,15,1.136,16,0.037,17,0.621,18,0.902,19,1.034,21,1.372,22,0.852,23,0.939,24,0.693,25,0.43,29,1.417,30,1.274,31,0.338,32,0.481,34,0.021,35,0.021,55,1.136,63,1.407,64,0.951,73,2.386,78,3.534,206,2.531,241,2.598,277,1.371,290,1.768,333,2.289,334,4.586,335,2.089,336,5.157,337,4.267,338,4.267,339,4.11,340,3.639,341,4.67,342,4.67,343,3.639,344,4.67,345,3.639,346,3.639,347,2.524,348,2.524,349,2.524,350,3.639,351,2.524,352,2.089,353,2.524,354,3.639,355,3.864,356,2.524,357,3.639,358,3.639,359,1.417,360,1.802,361,2.524,362,4.398,363,3.639,364,3.864,365,2.524,366,2.524,367,2.524,368,2.524,369,2.524,370,2.089,371,3.639,372,4.267,373,3.639,374,2.524,375,2.524,376,3.639,377,2.524,378,3.639,379,2.524,380,2.524,381,2.524,382,2.524]],["title/directives/ChangeBgColorOnClickDirective.html",[110,1.051,126,0.957]],["body/directives/ChangeBgColorOnClickDirective.html",[3,0.408,4,0.356,5,0.356,7,0.644,10,1.147,13,1.592,15,1.296,16,0.037,17,0.708,18,0.998,19,1.179,21,1.309,22,0.712,23,0.786,24,0.579,25,0.519,31,0.408,32,0.579,33,2.518,34,0.024,35,0.024,46,1.261,47,1.894,55,1.296,63,1.341,64,1.779,73,2.101,110,1.423,125,1.39,126,1.296,127,2.422,160,4.071,161,4.175,383,4.719,384,2.518,385,4.149,386,5.07,387,5.07,388,4.149,389,4.149,390,4.149,391,4.149,392,3.043,393,5.07,394,4.72,395,5.07,396,4.149,397,4.149,398,4.149,399,4.149,400,4.149,401,3.043,402,4.149,403,4.149,404,4.149,405,3.043,406,4.149,407,3.043,408,3.043,409,3.043,410,3.043,411,3.043]],["title/injectables/ConfigService.html",[0,0.871,12,1.72]],["body/injectables/ConfigService.html",[0,0.616,2,0.657,3,0.174,4,0.152,5,0.152,7,0.275,8,0.677,9,2.307,10,0.817,12,1.217,13,1.529,15,1.582,16,0.037,17,0.864,18,1.138,19,1.439,21,1.562,22,0.653,23,0.72,24,0.789,25,0.222,28,0.928,29,0.73,30,0.657,31,0.174,32,0.248,34,0.013,35,0.013,55,0.677,63,1.439,64,0.49,73,2.159,92,0.928,165,0.928,206,0.594,254,0.818,277,1.908,290,1.155,309,0.73,339,3.67,352,2.992,359,0.73,360,0.928,364,2.307,412,1.076,413,2.788,414,3.905,415,2.611,416,2.788,417,2.168,418,2.168,419,2.168,420,2.168,421,2.692,422,2.168,423,2.168,424,2.168,425,2.168,426,2.168,427,2.168,428,2.788,429,2.168,430,2.168,431,1.3,432,3.254,433,1.3,434,2.168,435,2.168,436,5.583,437,4.527,438,1.3,439,4.884,440,3.592,441,2.168,442,3.849,443,1.3,444,3.409,445,2.168,446,1.3,447,1.3,448,2.168,449,1.3,450,1.3,451,2.168,452,1.3,453,2.168,454,3.254,455,1.3,456,2.992,457,2.168,458,5.272,459,5.21,460,1.3,461,2.168,462,1.3,463,2.168,464,1.3,465,2.168,466,1.3,467,1.3,468,1.3,469,2.168,470,1.3,471,2.168,472,1.3,473,2.168,474,1.3,475,1.3,476,1.3,477,1.794,478,2.307,479,2.168,480,2.168,481,1.3,482,1.076,483,2.168,484,0.818,485,1.3,486,1.3,487,0.928,488,1.3,489,2.788,490,1.3,491,1.3,492,1.3,493,1.3,494,1.3,495,1.3,496,1.3,497,1.3,498,1.3,499,2.168,500,1.076,501,1.3,502,1.3,503,1.076,504,1.3,505,1.3,506,1.3,507,1.3,508,1.3,509,1.076,510,3.254,511,1.3,512,2.788,513,3.254,514,3.254,515,1.3,516,1.3,517,0.928,518,1.3,519,1.3,520,1.076,521,2.168,522,2.168,523,1.3,524,1.076,525,1.3,526,1.3,527,1.3,528,1.3,529,1.3,530,1.076,531,2.168,532,1.3,533,3.254,534,1.3,535,1.3,536,1.3,537,1.3,538,1.3,539,1.3,540,2.168,541,1.3,542,1.3,543,1.076,544,1.076,545,1.3,546,1.3,547,1.3,548,1.3,549,0.928]],["title/injectables/ConfigSettings.html",[0,0.871,415,1.72]],["body/injectables/ConfigSettings.html",[0,1.219,2,1.615,3,0.429,4,0.375,5,0.375,7,0.677,8,1.34,10,1.824,13,1.579,15,0.999,16,0.037,17,0.545,18,1.024,19,0.909,21,1.524,22,0.749,23,0.826,24,0.609,25,0.545,29,1.795,30,1.615,31,0.429,32,0.609,34,0.025,35,0.025,55,1.34,63,1.376,64,1.205,73,2.302,206,1.959,277,1.617,370,4.007,415,2.409,421,4.282,440,2.647,517,3.966,549,3.063,550,2.647,551,4.842,552,4.842,553,5.174,554,4.291,555,4.291,556,3.198,557,3.198,558,4.291,559,3.198,560,3.198,561,4.291,562,4.291,563,3.198,564,5.556,565,3.198]],["title/components/DefaultLayoutComponent.html",[36,0.717,114,0.957]],["body/components/DefaultLayoutComponent.html",[3,0.476,4,0.416,5,0.416,16,0.036,17,0.869,22,1.396,24,0.676,25,0.606,31,0.476,32,0.676,34,0.027,35,0.027,36,1.193,37,1.218,38,2.099,39,1.794,41,1.794,42,1.794,46,1.472,47,2.723,48,2.658,51,2.322,107,1.472,108,2.322,109,2.322,110,1.218,111,2.722,112,1.794,113,1.794,114,1.684,115,1.794,116,1.218,117,1.794,118,1.109,119,1.794,120,1.218,121,1.794,122,1.109,123,1.622,124,2.574,125,1.622,126,1.109,127,1.622,128,1.794,182,2.235,566,2.94,567,2.536,568,3.805,569,3.283,570,3.805,571,3.283,572,3.805]],["title/components/ErrorComponent.html",[36,0.717,116,1.051]],["body/components/ErrorComponent.html",[3,0.484,4,0.423,5,0.423,16,0.036,17,0.876,22,0.845,24,0.687,25,0.616,31,0.484,32,0.687,34,0.027,35,0.027,36,1.202,37,1.238,38,2.122,39,1.823,40,2.578,41,1.823,42,1.823,46,1.496,47,2.731,48,2.669,49,3.317,51,2.346,107,1.496,108,2.346,109,2.346,110,1.238,111,2.739,112,1.823,113,1.823,114,1.128,115,1.823,116,1.861,117,1.823,118,1.128,119,1.823,120,1.238,121,1.823,122,1.128,123,1.649,124,1.823,125,1.649,126,1.128,127,1.649,128,1.823,456,4.755,503,3.845,573,2.988,574,5.138,575,4.647]],["title/components/HomeComponent.html",[36,0.717,118,0.957]],["body/components/HomeComponent.html",[1,3.17,3,0.286,4,0.25,5,0.25,7,0.452,8,1.004,10,1.212,12,2.726,13,1.38,15,0.667,16,0.037,17,0.978,18,0.911,19,0.607,21,0.83,22,0.906,23,0.83,24,0.737,25,0.364,31,0.286,32,0.407,34,0.019,35,0.019,36,0.906,37,0.732,38,1.469,39,1.078,40,1.524,41,1.078,42,1.078,44,1.806,46,0.885,47,2.423,48,2.301,49,2.296,51,1.624,54,3.202,55,1.004,63,0.914,64,1.212,73,1.333,78,2.296,107,0.885,108,1.624,109,1.624,110,0.732,111,2.175,112,1.078,113,1.078,114,0.667,115,1.078,116,0.732,117,1.078,118,1.345,119,1.078,120,0.732,121,1.078,122,0.667,123,0.975,124,1.078,125,0.975,126,0.667,127,0.975,128,1.078,191,3.564,308,1.806,339,2.763,362,1.767,543,2.662,571,3.075,576,1.767,577,3.87,578,3.87,579,3.217,580,4.62,581,3.87,582,4.307,583,4.307,584,2.135,585,2.135,586,2.135,587,2.135,588,2.135,589,4.545,590,3.217,591,5.492,592,3.217,593,2.662,594,3.217,595,2.662,596,5.039,597,2.662,598,5.186,599,3.202,600,2.135,601,2.135,602,2.135,603,2.135,604,2.135,605,2.135,606,2.135,607,3.87,608,2.135,609,2.135,610,2.135,611,2.135,612,2.135,613,2.135,614,2.135,615,2.135,616,2.135,617,2.135,618,2.135,619,2.135,620,2.135,621,2.135,622,2.135,623,2.135,624,2.135,625,2.135,626,3.217,627,3.217,628,3.217]],["title/components/LoaderComponent.html",[36,0.717,120,1.051]],["body/components/LoaderComponent.html",[3,0.496,4,0.434,5,0.434,16,0.036,17,0.887,22,0.866,24,0.705,25,0.631,31,0.496,32,0.705,34,0.028,35,0.028,36,1.217,37,1.27,38,2.156,39,1.869,41,1.869,42,1.869,46,1.534,47,2.744,48,2.583,51,2.384,107,1.534,108,2.384,109,2.384,110,1.27,111,2.765,112,1.869,113,1.869,114,1.156,115,1.869,116,1.27,117,1.869,118,1.156,119,1.869,120,1.878,121,1.869,122,1.156,123,1.69,124,1.869,125,1.69,126,1.156,127,1.69,128,1.869,569,3.371,629,3.063,630,3.907,631,4.721,632,4.721]],["title/injectables/LoaderService.html",[0,0.871,58,1.72]],["body/injectables/LoaderService.html",[0,1.271,2,1.719,3,0.456,4,0.399,5,0.399,7,0.72,8,1.397,10,1.882,13,1.607,16,0.037,18,0.946,22,1.047,23,1.155,24,0.852,25,0.581,29,1.911,30,1.719,31,0.456,32,0.648,34,0.026,35,0.026,55,1.397,58,2.511,63,1.419,64,1.999,65,2.818,66,1.719,73,2.07,277,1.283,290,1.853,300,3.566,444,3.566,484,2.142,630,3.701,633,2.818,634,4.995,635,5.305,636,5.305,637,5.305,638,4.473,639,3.405,640,3.405,641,3.405,642,4.133,643,4.473,644,3.405,645,3.405,646,4.473,647,3.405,648,3.405,649,3.405]],["title/components/MainLayoutComponent.html",[36,0.717,122,0.957]],["body/components/MainLayoutComponent.html",[3,0.476,4,0.416,5,0.416,16,0.036,17,0.869,22,0.831,24,0.676,25,0.606,31,0.476,32,0.676,34,0.027,35,0.027,36,1.193,37,1.218,38,2.099,39,1.794,41,1.794,42,1.794,46,1.472,47,2.723,48,2.658,51,2.322,107,1.472,108,2.322,109,2.322,110,1.218,111,2.722,112,1.794,113,1.794,114,1.109,115,1.794,116,1.218,117,1.794,118,1.109,119,1.794,120,1.218,121,1.794,122,1.684,123,2.723,124,2.574,125,1.622,126,1.109,127,1.622,128,1.794,179,2.235,567,2.536,568,3.805,569,3.283,570,3.805,571,3.283,572,3.805,650,2.94]],["title/interceptors/MyHttpInterceptorInterceptor.html",[144,1.72,651,2.536]],["body/interceptors/MyHttpInterceptorInterceptor.html",[0,0.896,3,0.279,4,0.244,5,0.244,7,0.44,8,0.985,10,1.189,13,1.462,15,0.985,16,0.038,17,0.538,18,0.806,19,0.896,22,0.892,23,0.984,24,0.98,25,0.355,28,1.486,31,0.279,32,0.396,34,0.019,35,0.019,44,1.168,55,0.985,58,2.804,63,1.208,64,1.189,71,1.722,73,2.414,76,2.611,144,1.771,165,1.486,206,0.95,277,1.882,290,1.579,308,1.771,309,2.139,333,3.143,359,1.168,360,1.486,415,2.699,444,2.72,477,2.611,478,2.611,482,3.153,484,1.309,500,1.722,509,1.722,517,3.035,520,1.722,524,1.722,530,3.153,549,2.252,642,1.722,652,2.081,653,4.36,654,1.722,655,3.81,656,3.81,657,4.251,658,3.81,659,4.251,660,4.251,661,2.081,662,3.155,663,2.081,664,2.081,665,4.251,666,4.251,667,2.081,668,3.155,669,2.081,670,2.081,671,4.251,672,3.155,673,4.251,674,3.155,675,3.155,676,2.081,677,2.081,678,3.155,679,2.081,680,3.155,681,3.155,682,2.081,683,2.081,684,2.081,685,2.081,686,2.081,687,3.155,688,2.081,689,3.155,690,2.081,691,2.081,692,2.081,693,2.081,694,3.155,695,3.155,696,2.081,697,2.081,698,2.081,699,2.081,700,2.081,701,2.081,702,2.081,703,2.081,704,2.081,705,2.081,706,2.081,707,2.081,708,2.081,709,2.081,710,2.081,711,2.081,712,2.081,713,2.081,714,2.081,715,2.081,716,2.081,717,2.081]],["title/interfaces/String.html",[21,0.791,213,1.399]],["body/interfaces/String.html",[3,0.241,4,0.211,5,0.211,7,0.736,13,0.512,16,0.038,21,1.528,23,1.359,31,0.241,34,0.017,35,0.017,55,0.882,63,0.512,66,1.426,206,2.404,213,1.289,214,1.134,215,1.134,216,1.287,218,1.491,222,1.491,231,1.491,233,1.491,234,3.687,236,3.54,238,4.932,239,1.491,241,3.758,242,1.491,244,3.054,245,1.491,248,2.336,250,1.491,251,4.673,253,2.881,254,3.523,255,3.26,256,1.491,258,1.491,260,1.491,262,1.491,264,1.491,266,1.491,268,1.491,271,1.491,273,1.491,274,1.491,275,3.26,276,1.491,277,2.223,278,1.491,279,1.491,280,1.491,281,3.26,282,2.336,283,3.26,284,2.336,285,3.26,286,1.491,287,1.491,288,1.491,289,1.491,290,1.442,291,2.336,292,1.491,293,2.336,294,2.336,295,2.881,296,2.336,297,3.54,298,2.336,299,2.336,300,2.016,301,1.491,302,2.336,303,2.336,304,3.26,305,1.491,306,3.26,307,1.491,308,1.585,309,2.401,310,1.491,311,1.491,312,1.491,313,1.491,314,1.491,315,1.491,316,1.491,317,1.491,318,1.491,319,1.491,320,1.491,321,1.491,322,1.491,323,1.491,324,1.491,325,1.491,326,1.491,327,1.491,328,1.491,329,2.336,330,1.491,331,2.881,332,1.491,718,1.802]],["title/pipes/UpperCasePipe.html",[142,1.72,719,1.928]],["body/pipes/UpperCasePipe.html",[3,0.55,4,0.481,5,0.481,13,1.167,15,1.282,16,0.036,17,0.929,18,0.868,19,1.167,21,1.407,23,1.06,24,0.782,25,0.7,31,0.55,32,0.782,34,0.03,35,0.03,44,2.305,46,1.701,55,1.282,63,1.167,142,2.828,277,1.547,719,3.169,720,4.106,721,4.169,722,3.398,723,5.038,724,4.106,725,5.038,726,5.45,727,4.106,728,5.038,729,4.106]],["title/interfaces/User.html",[213,1.399,730,2.188]],["body/interfaces/User.html",[3,0.529,4,0.462,5,0.462,7,0.835,8,1.535,16,0.036,17,0.956,18,1.219,19,1.67,21,1.596,31,0.529,34,0.029,35,0.029,213,1.802,215,2.482,234,3.822,589,4.637,730,3.509,731,3.265,732,5.604,733,5.604,734,5.604]],["title/coverage.html",[735,3.45]],["body/coverage.html",[0,1.531,1,2.002,5,0.373,6,2.634,12,1.787,16,0.037,18,0.673,21,0.822,34,0.025,35,0.025,36,1.298,37,1.092,43,2.634,58,1.787,110,1.092,114,0.994,116,1.092,118,0.994,120,1.092,122,0.994,126,0.994,142,1.787,144,1.787,160,2.272,161,2.272,179,2.002,182,2.002,213,2.205,214,2.002,216,3.053,254,2.002,290,1.319,309,3.484,333,2.002,334,2.634,335,2.634,359,2.401,383,2.634,384,2.634,412,2.634,415,1.787,487,2.272,550,2.634,566,2.634,567,3.053,573,2.634,576,2.634,629,2.634,633,2.634,650,2.634,651,2.634,653,2.634,654,2.634,719,2.002,721,2.634,722,2.634,730,2.272,731,2.634,735,2.634,736,3.183,737,3.183,738,3.183,739,3.183,740,5.837,741,3.183,742,4.83,743,2.634,744,3.183,745,2.634,746,4.83,747,2.634,748,4.277,749,3.183,750,3.183,751,3.183,752,3.183,753,2.634,754,2.634,755,3.183,756,3.183]],["title/dependencies.html",[132,2.316,757,1.832]],["body/dependencies.html",[16,0.037,25,0.711,34,0.03,35,0.03,86,3.2,132,2.624,153,4.209,157,3.452,158,3.452,174,3.452,205,3.452,484,2.624,758,4.171,759,6.133,760,4.171,761,4.171,762,4.171,763,4.171,764,4.171,765,4.171,766,4.171,767,4.171,768,4.171,769,4.171,770,4.171,771,4.171]],["title/miscellaneous/functions.html",[772,1.614,773,3.047]],["body/miscellaneous/functions.html",[7,0.965,15,1.424,16,0.035,17,0.778,18,0.965,19,1.296,34,0.032,35,0.032,63,1.296,244,3.256,437,4.441,487,3.831,743,3.774,772,2.869,773,3.774,774,4.561,775,4.561,776,4.561]],["title/index.html",[7,0.543,777,2.566,778,2.566]],["body/index.html",[4,0.416,16,0.027,17,0.606,34,0.027,35,0.027,36,1.193,44,1.994,67,4.219,92,2.536,103,2.94,147,2.536,189,2.94,195,2.94,290,1.472,544,3.805,757,2.536,779,3.552,780,4.598,781,3.552,782,5.098,783,2.94,784,3.552,785,3.552,786,5.584,787,5.822,788,3.552,789,3.552,790,3.552,791,3.552,792,3.552,793,3.552,794,3.552,795,3.552,796,3.552,797,5.098,798,5.098,799,3.552,800,5.391,801,3.552,802,3.552,803,3.552,804,3.552,805,4.598,806,4.598,807,5.391,808,3.552,809,4.598,810,4.598,811,3.552,812,5.721,813,3.552,814,3.552,815,3.552,816,4.598,817,3.552,818,3.552,819,3.552,820,3.552,821,3.552,822,5.098,823,3.552,824,3.552,825,2.536,826,3.552,827,3.552]],["title/modules.html",[131,2.34]],["body/modules.html",[16,0.032,34,0.032,35,0.032,86,2.972,130,2.972,131,2.652,143,2.652,828,4.725,829,4.725,830,5.478,831,4.725,832,4.725]],["title/overview.html",[825,2.976]],["body/overview.html",[2,1.808,16,0.036,34,0.027,35,0.027,37,2.001,38,1.635,107,1.484,110,1.228,114,1.598,116,1.755,118,1.598,120,1.755,122,1.598,126,1.598,129,2.253,130,3.958,131,2.01,132,2.253,133,2.964,134,2.964,135,2.964,136,2.557,137,2.964,138,2.964,139,2.964,140,2.964,141,2.964,142,2.873,143,2.873,144,2.873,145,3.825,146,2.964,147,2.557,204,2.253,215,2.253,308,2.594,593,2.964,595,2.964,597,2.964,599,2.964,719,2.253,825,2.557,833,3.581]],["title/properties.html",[8,1.15,757,1.832]],["body/properties.html",[8,1.486,16,0.035,34,0.032,35,0.032,783,3.938,834,4.759,835,4.759,836,4.759,837,4.759]],["title/routes.html",[204,2.622]],["body/routes.html",[16,0.033,34,0.033,35,0.033,204,3.071]],["title/miscellaneous/variables.html",[772,1.614,838,3.047]],["body/miscellaneous/variables.html",[7,0.842,16,0.037,18,1.137,22,1.258,23,1.388,34,0.029,35,0.029,66,2.01,277,1.5,355,4.09,359,3.156,442,4.09,745,3.295,747,4.09,753,3.295,754,3.295,772,2.505,838,3.295,839,3.982,840,3.982,841,3.982,842,3.982,843,3.982,844,3.982,845,4.943,846,4.943,847,4.943,848,4.943,849,4.943,850,4.943,851,4.943]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MainLayoutComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":309,"title":{},"body":{"interfaces/Array.html":{},"injectables/ConfigService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"interfaces/String.html":{},"coverage.html":{}}}],["0.0.0",{"_index":834,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":740,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":750,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":741,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":752,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":739,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":749,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":742,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":744,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":748,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":308,"title":{},"body":{"interfaces/Array.html":{},"components/HomeComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"interfaces/String.html":{},"overview.html":{}}}],["1.1.23",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":380,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["1000",{"_index":675,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["16.2.4",{"_index":784,"title":{},"body":{"index.html":{}}}],["17.0.8",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["17.4.0",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":593,"title":{},"body":{"components/HomeComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":533,"title":{},"body":{"injectables/ConfigService.html":{}}}],["22",{"_index":598,"title":{},"body":{"components/HomeComponent.html":{}}}],["25",{"_index":592,"title":{},"body":{"components/HomeComponent.html":{}}}],["3",{"_index":595,"title":{},"body":{"components/HomeComponent.html":{},"overview.html":{}}}],["30",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{}}}],["3600000",{"_index":358,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["4",{"_index":597,"title":{},"body":{"components/HomeComponent.html":{},"overview.html":{}}}],["5",{"_index":599,"title":{},"body":{"components/HomeComponent.html":{},"overview.html":{}}}],["6",{"_index":833,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["__",{"_index":320,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["_lang",{"_index":551,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["a[key",{"_index":311,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["ab17",{"_index":354,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["abhishek",{"_index":836,"title":{},"body":{"properties.html":{}}}],["acc",{"_index":285,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["acc[key",{"_index":283,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["acc[key].push(item",{"_index":284,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["actual_component",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["add",{"_index":818,"title":{},"body":{"index.html":{}}}],["addtocache",{"_index":340,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["addtocache(key",{"_index":346,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["afterviewinit",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["age",{"_index":591,"title":{},"body":{"components/HomeComponent.html":{}}}],["alice",{"_index":590,"title":{},"body":{"components/HomeComponent.html":{}}}],["allow",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["angular",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["angular/compiler",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":25,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MainLayoutComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"pipes/UpperCasePipe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":205,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/service",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angularboilerplatev16",{"_index":779,"title":{},"body":{"index.html":{}}}],["any)[key",{"_index":297,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["any)[retrievekey",{"_index":332,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["api",{"_index":543,"title":{},"body":{"injectables/ConfigService.html":{},"components/HomeComponent.html":{}}}],["api_url",{"_index":413,"title":{},"body":{"injectables/ConfigService.html":{}}}],["apicallmethod",{"_index":447,"title":{},"body":{"injectables/ConfigService.html":{}}}],["apicallmethod().subscribe",{"_index":529,"title":{},"body":{"injectables/ConfigService.html":{}}}],["apiserviceservice",{"_index":1,"title":{"injectables/ApiServiceService.html":{}},"body":{"injectables/ApiServiceService.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["apiurl",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["app.component",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["appchangebgcoloronclick",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["appcomponent",{"_index":37,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["application/json",{"_index":480,"title":{},"body":{"injectables/ConfigService.html":{}}}],["appmodule",{"_index":130,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":143,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":726,"title":{},"body":{"pipes/UpperCasePipe.html":{}}}],["array",{"_index":214,"title":{"interfaces/Array.html":{}},"body":{"interfaces/Array.html":{},"interfaces/String.html":{},"coverage.html":{}}}],["array.from",{"_index":317,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.from(new",{"_index":323,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.chunk",{"_index":316,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.distinct",{"_index":289,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.distinctbykey",{"_index":292,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.findindexbykeyvalue",{"_index":328,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.findvaluebykeyvalue",{"_index":330,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.groupby",{"_index":280,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.groupbykey",{"_index":286,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.remove",{"_index":325,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.removebykeyvalue",{"_index":327,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.sortby",{"_index":301,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.sortbykey",{"_index":310,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.sum",{"_index":313,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.sumbykey",{"_index":314,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.unique",{"_index":322,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.uniqueby",{"_index":324,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["artifacts",{"_index":801,"title":{},"body":{"index.html":{}}}],["async",{"_index":339,"title":{},"body":{"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{},"components/HomeComponent.html":{}}}],["attackers",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["authguard",{"_index":747,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":835,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":711,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["automatically",{"_index":792,"title":{},"body":{"index.html":{}}}],["available",{"_index":832,"title":{},"body":{"modules.html":{}}}],["await",{"_index":362,"title":{},"body":{"injectables/CacheStorageService.html":{},"components/HomeComponent.html":{}}}],["b",{"_index":303,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["b[key",{"_index":312,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["backend",{"_index":506,"title":{},"body":{"injectables/ConfigService.html":{}}}],["backgroundcolor",{"_index":411,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["baseroute",{"_index":9,"title":{},"body":{"injectables/ApiServiceService.html":{},"injectables/ConfigService.html":{}}}],["behaviorsubject",{"_index":642,"title":{},"body":{"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["behaviorsubject(0",{"_index":678,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["behaviorsubject(this.loader",{"_index":643,"title":{},"body":{"injectables/LoaderService.html":{}}}],["bg",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"coverage.html":{}}}],["bob",{"_index":594,"title":{},"body":{"components/HomeComponent.html":{}}}],["body",{"_index":509,"title":{},"body":{"injectables/ConfigService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["boilerplate",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["boolean",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoaderService.html":{}}}],["bootstrap",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["browse",{"_index":830,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["bug",{"_index":619,"title":{},"body":{"components/HomeComponent.html":{}}}],["build",{"_index":800,"title":{},"body":{"index.html":{}}}],["cache",{"_index":355,"title":{},"body":{"injectables/CacheStorageService.html":{},"miscellaneous/variables.html":{}}}],["cache.match(key",{"_index":368,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["cache.put(key",{"_index":366,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["cache_key",{"_index":337,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["cache_timeout",{"_index":338,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["cacheddata",{"_index":694,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["cachename",{"_index":690,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["caches.delete(this.cache_key",{"_index":371,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["caches.open(this.cache_key",{"_index":363,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["cachestorageservice",{"_index":333,"title":{"injectables/CacheStorageService.html":{}},"body":{"injectables/CacheStorageService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"coverage.html":{}}}],["callback",{"_index":253,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["callback(a",{"_index":305,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["callback(b",{"_index":307,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["callback(item",{"_index":282,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["canactivatefn",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capabilities",{"_index":820,"title":{},"body":{"index.html":{}}}],["capitalizefirstletter",{"_index":275,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["case.pipe",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["case.pipe.ts",{"_index":722,"title":{},"body":{"pipes/UpperCasePipe.html":{},"coverage.html":{}}}],["case.pipe.ts:8",{"_index":727,"title":{},"body":{"pipes/UpperCasePipe.html":{}}}],["catcherror",{"_index":485,"title":{},"body":{"injectables/ConfigService.html":{}}}],["cdr",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["change",{"_index":794,"title":{},"body":{"index.html":{}}}],["changebgcoloronclickdirective",{"_index":126,"title":{"directives/ChangeBgColorOnClickDirective.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"coverage.html":{},"overview.html":{}}}],["changedetectorref",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["charlie",{"_index":596,"title":{},"body":{"components/HomeComponent.html":{}}}],["check",{"_index":824,"title":{},"body":{"index.html":{}}}],["checkcacheexpiration",{"_index":341,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["children",{"_index":209,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["choice",{"_index":815,"title":{},"body":{"index.html":{}}}],["chunk",{"_index":217,"title":{},"body":{"interfaces/Array.html":{}}}],["chunk(size",{"_index":233,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["class",{"_index":32,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MainLayoutComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"pipes/UpperCasePipe.html":{}}}],["clearcache",{"_index":342,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["clearonpost:true",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cleartimeout(timeoutid",{"_index":672,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["cli",{"_index":782,"title":{},"body":{"index.html":{}}}],["click.directive",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["click.directive.ts",{"_index":384,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{},"coverage.html":{}}}],["click.directive.ts:11",{"_index":398,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["click.directive.ts:15",{"_index":399,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["click.directive.ts:19",{"_index":401,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["click.directive.ts:7",{"_index":396,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["cluster_appmodule",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"index.html":{}}}],["color",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"coverage.html":{}}}],["color:red;font",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["comes",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["command",{"_index":816,"title":{},"body":{"index.html":{}}}],["complete",{"_index":545,"title":{},"body":{"injectables/ConfigService.html":{}}}],["completion",{"_index":547,"title":{},"body":{"injectables/ConfigService.html":{}}}],["compodoc/compodoc",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":36,"title":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"coverage.html":{},"index.html":{}}}],["component:defaultlayoutcomponent",{"_index":208,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:homecomponent",{"_index":210,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:mainlayoutcomponent",{"_index":211,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["components",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"overview.html":{}}}],["components/loader/loader.component",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["config.settings",{"_index":486,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configs/config.services",{"_index":26,"title":{},"body":{"injectables/ApiServiceService.html":{}}}],["configs/config.settings",{"_index":684,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["configservice",{"_index":12,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ApiServiceService.html":{},"injectables/ConfigService.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["configservices",{"_index":20,"title":{},"body":{"injectables/ApiServiceService.html":{}}}],["configsettings",{"_index":415,"title":{"injectables/ConfigSettings.html":{}},"body":{"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"coverage.html":{}}}],["connect",{"_index":542,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.error",{"_index":505,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.error('an",{"_index":502,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.error('failed",{"_index":541,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(\"%cstop",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(\"%cthis",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(this.people.chunk(2",{"_index":615,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.distinct",{"_index":609,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.distinctbykey('age",{"_index":610,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.findbykeyvalue('age",{"_index":622,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.findindexbykeyvalue('age",{"_index":621,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.groupby((item",{"_index":606,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.groupbykey('age",{"_index":608,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.remove",{"_index":618,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.removebykeyvalue('age",{"_index":620,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.sortbykey('age",{"_index":612,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.sortbykey((item",{"_index":611,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.sum((item",{"_index":613,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.sumbykey('age",{"_index":614,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.unique",{"_index":616,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.uniqueby('age",{"_index":617,"title":{},"body":{"components/HomeComponent.html":{}}}],["const",{"_index":206,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"interfaces/String.html":{}}}],["constructor",{"_index":10,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["constructor(configservice",{"_index":584,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(configservices",{"_index":11,"title":{},"body":{"injectables/ApiServiceService.html":{}}}],["constructor(configsettings",{"_index":661,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["constructor(el",{"_index":392,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["constructor(http",{"_index":431,"title":{},"body":{"injectables/ConfigService.html":{}}}],["constructor(loaderservice",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(private",{"_index":33,"title":{},"body":{"injectables/ApiServiceService.html":{},"directives/ChangeBgColorOnClickDirective.html":{}}}],["contact",{"_index":572,"title":{},"body":{"components/DefaultLayoutComponent.html":{},"components/MainLayoutComponent.html":{}}}],["content",{"_index":479,"title":{},"body":{"injectables/ConfigService.html":{}}}],["coverage",{"_index":735,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["currenttime",{"_index":372,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["currenttime.tostring",{"_index":375,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["data",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheStorageService.html":{},"components/HomeComponent.html":{}}}],["date().gettime",{"_index":373,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["debouncehide",{"_index":655,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["declarations",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declare",{"_index":273,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["decorators",{"_index":402,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["default",{"_index":22,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MainLayoutComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"miscellaneous/variables.html":{}}}],["defaultlayoutcomponent",{"_index":114,"title":{"components/DefaultLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defined",{"_index":13,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{}}}],["delete(this.getcompleteurl(url",{"_index":526,"title":{},"body":{"injectables/ConfigService.html":{}}}],["deletepromise",{"_index":417,"title":{},"body":{"injectables/ConfigService.html":{}}}],["deletepromise(url",{"_index":435,"title":{},"body":{"injectables/ConfigService.html":{}}}],["deleterequest",{"_index":418,"title":{},"body":{"injectables/ConfigService.html":{}}}],["deleterequest(url",{"_index":441,"title":{},"body":{"injectables/ConfigService.html":{}}}],["dependencies",{"_index":132,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["details",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["dev",{"_index":789,"title":{},"body":{"index.html":{}}}],["developers",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["development",{"_index":785,"title":{},"body":{"index.html":{}}}],["directive",{"_index":110,"title":{"directives/ChangeBgColorOnClickDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["directives/change",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":799,"title":{},"body":{"index.html":{}}}],["directory",{"_index":804,"title":{},"body":{"index.html":{}}}],["displayloader",{"_index":634,"title":{},"body":{"injectables/LoaderService.html":{}}}],["dist",{"_index":803,"title":{},"body":{"index.html":{}}}],["distinct",{"_index":218,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["distinctbykey",{"_index":219,"title":{},"body":{"interfaces/Array.html":{}}}],["distinctbykey(key",{"_index":239,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["documentation",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["don't",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["dynamic",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":813,"title":{},"body":{"index.html":{}}}],["el",{"_index":397,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["element",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["elementref",{"_index":393,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["email",{"_index":732,"title":{},"body":{"interfaces/User.html":{}}}],["en",{"_index":549,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["enable:true",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enabled",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":812,"title":{},"body":{"index.html":{}}}],["enter",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["entries",{"_index":580,"title":{},"body":{"components/HomeComponent.html":{}}}],["environment",{"_index":359,"title":{},"body":{"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":473,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.cache.clearonpost",{"_index":703,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["environment.cache.enable",{"_index":695,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["environment.cache.timeout",{"_index":357,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["err",{"_index":540,"title":{},"body":{"injectables/ConfigService.html":{}}}],["error",{"_index":456,"title":{},"body":{"injectables/ConfigService.html":{},"components/ErrorComponent.html":{}}}],["error'},{'name",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["error.component.html",{"_index":575,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.scss",{"_index":574,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.error",{"_index":499,"title":{},"body":{"injectables/ConfigService.html":{}}}],["error.error.message",{"_index":504,"title":{},"body":{"injectables/ConfigService.html":{}}}],["error.status",{"_index":508,"title":{},"body":{"injectables/ConfigService.html":{}}}],["errorcomponent",{"_index":116,"title":{"components/ErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errorevent",{"_index":501,"title":{},"body":{"injectables/ConfigService.html":{}}}],["event",{"_index":699,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["event.body",{"_index":701,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["execute",{"_index":809,"title":{},"body":{"index.html":{}}}],["export",{"_index":31,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MainLayoutComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{},"interfaces/User.html":{}}}],["exports",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["fact.herokuapp.com",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":300,"title":{},"body":{"interfaces/Array.html":{},"injectables/LoaderService.html":{},"interfaces/String.html":{}}}],["feature",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["fetched",{"_index":627,"title":{},"body":{"components/HomeComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MainLayoutComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["files",{"_index":795,"title":{},"body":{"index.html":{}}}],["filter((key",{"_index":494,"title":{},"body":{"injectables/ConfigService.html":{}}}],["finalize",{"_index":681,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["findbykeyvalue",{"_index":220,"title":{},"body":{"interfaces/Array.html":{}}}],["findbykeyvalue(key",{"_index":242,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["findindexbykeyvalue",{"_index":221,"title":{},"body":{"interfaces/Array.html":{}}}],["findindexbykeyvalue(key",{"_index":245,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["findvaluebykeyvalue",{"_index":222,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["findvaluebykeyvalue(key",{"_index":247,"title":{},"body":{"interfaces/Array.html":{}}}],["first",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["font",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["formsmodule",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["founditem",{"_index":331,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["from(this.cachestorageservice.getfromcache(cachename)).pipe",{"_index":692,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["function",{"_index":254,"title":{},"body":{"interfaces/Array.html":{},"injectables/ConfigService.html":{},"interfaces/String.html":{},"coverage.html":{}}}],["functions",{"_index":773,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":821,"title":{},"body":{"index.html":{}}}],["generate",{"_index":797,"title":{},"body":{"index.html":{}}}],["generated",{"_index":781,"title":{},"body":{"index.html":{}}}],["get(this.getcompleteurl(url",{"_index":511,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getapipromise",{"_index":419,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getapipromise(apicallmethod",{"_index":445,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getcompleteurl",{"_index":420,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getcompleteurl(url",{"_index":448,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getdata",{"_index":635,"title":{},"body":{"injectables/LoaderService.html":{}}}],["getfromcache",{"_index":343,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["getfromcache(key",{"_index":350,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["getheader",{"_index":657,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["getlang",{"_index":421,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{}}}],["getparams",{"_index":458,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getparams.lang",{"_index":518,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getpromise",{"_index":422,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getpromise(url",{"_index":451,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getstoredlang",{"_index":553,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["gettestdata",{"_index":582,"title":{},"body":{"components/HomeComponent.html":{}}}],["getting",{"_index":777,"title":{"index.html":{}},"body":{}}],["getvalue",{"_index":487,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getvalue(obj",{"_index":775,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getvalue(res",{"_index":538,"title":{},"body":{"injectables/ConfigService.html":{}}}],["global",{"_index":274,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["go",{"_index":823,"title":{},"body":{"index.html":{}}}],["graph",{"_index":831,"title":{},"body":{"modules.html":{}}}],["groupby",{"_index":223,"title":{},"body":{"interfaces/Array.html":{}}}],["groupby(callback",{"_index":250,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["groupbykey",{"_index":224,"title":{},"body":{"interfaces/Array.html":{}}}],["groupbykey(key",{"_index":256,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["handle",{"_index":546,"title":{},"body":{"injectables/ConfigService.html":{}}}],["handleerror",{"_index":423,"title":{},"body":{"injectables/ConfigService.html":{}}}],["handleerror(error",{"_index":453,"title":{},"body":{"injectables/ConfigService.html":{}}}],["headers",{"_index":477,"title":{},"body":{"injectables/ConfigService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["help",{"_index":822,"title":{},"body":{"index.html":{}}}],["helper",{"_index":488,"title":{},"body":{"injectables/ConfigService.html":{}}}],["hide",{"_index":636,"title":{},"body":{"injectables/LoaderService.html":{}}}],["highlight",{"_index":385,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["highlight(color",{"_index":400,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["home",{"_index":571,"title":{},"body":{"components/DefaultLayoutComponent.html":{},"components/HomeComponent.html":{},"components/MainLayoutComponent.html":{}}}],["home'},{'name",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["home.component.html",{"_index":579,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":578,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":118,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hostlistener",{"_index":405,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["hostlistener('mouseenter",{"_index":403,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["hostlistener('mouseleave",{"_index":404,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["hostlisteners",{"_index":389,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["html",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["http",{"_index":434,"title":{},"body":{"injectables/ConfigService.html":{}}}],["http.interceptor",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["http.interceptor.ts",{"_index":654,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{},"coverage.html":{}}}],["http.interceptor.ts:19",{"_index":677,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["http.interceptor.ts:20",{"_index":662,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["http.interceptor.ts:30",{"_index":667,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["http.interceptor.ts:65",{"_index":663,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["http.interceptor.ts:72",{"_index":669,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["http.interceptor.ts:77",{"_index":670,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["http.interceptor.ts:86",{"_index":676,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["http://localhost:4200",{"_index":791,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":432,"title":{},"body":{"injectables/ConfigService.html":{}}}],["httpclientmodule",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":454,"title":{},"body":{"injectables/ConfigService.html":{}}}],["httpevent",{"_index":679,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["httphandler",{"_index":666,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["httpheaders",{"_index":478,"title":{},"body":{"injectables/ConfigService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["httpinterceptor",{"_index":680,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["httpoptions",{"_index":416,"title":{},"body":{"injectables/ConfigService.html":{}}}],["httprequest",{"_index":665,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["httpresponse",{"_index":482,"title":{},"body":{"injectables/ConfigService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["https://cat",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://en.wikipedia.org/wiki/self",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["id",{"_index":589,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/User.html":{}}}],["identifier",{"_index":737,"title":{},"body":{"coverage.html":{}}}],["if((request.method",{"_index":702,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["impersonate",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["implements",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"pipes/UpperCasePipe.html":{},"index.html":{}}}],["import",{"_index":24,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MainLayoutComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"pipes/UpperCasePipe.html":{}}}],["imports",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"interfaces/String.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MainLayoutComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{},"interfaces/User.html":{}}}],["information",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiServiceService.html":{},"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"injectables/LoaderService.html":{}},"body":{"injectables/ApiServiceService.html":{},"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiServiceService.html":{},"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"injectables/LoaderService.html":{},"overview.html":{}}}],["input",{"_index":406,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["inputs",{"_index":388,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["instanceof",{"_index":500,"title":{},"body":{"injectables/ConfigService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["intended",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["intercept",{"_index":658,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["intercept(request",{"_index":664,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["interceptor",{"_index":651,"title":{"interceptors/MyHttpInterceptorInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":652,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["interceptors/my",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["interface",{"_index":213,"title":{"interfaces/Array.html":{},"interfaces/String.html":{},"interfaces/User.html":{}},"body":{"interfaces/Array.html":{},"interfaces/String.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":215,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isdevmode",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["item",{"_index":251,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["item.age",{"_index":607,"title":{},"body":{"components/HomeComponent.html":{}}}],["item[key",{"_index":315,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["item[keyname",{"_index":288,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["itemkey",{"_index":296,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["join",{"_index":498,"title":{},"body":{"injectables/ConfigService.html":{}}}],["json",{"_index":628,"title":{},"body":{"components/HomeComponent.html":{}}}],["karma",{"_index":811,"title":{},"body":{"index.html":{}}}],["key",{"_index":241,"title":{},"body":{"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"interfaces/String.html":{}}}],["keya",{"_index":304,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["keyb",{"_index":306,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["keyname",{"_index":287,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["keys",{"_index":437,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/functions.html":{}}}],["keys.length",{"_index":537,"title":{},"body":{"injectables/ConfigService.html":{}}}],["key}=${encodeuricomponent(params[key",{"_index":497,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lang",{"_index":517,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["lang_key",{"_index":552,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["large;font",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["lastupdate",{"_index":376,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["layout",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["layout'},{'name",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["layout.component",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layout.component.html",{"_index":568,"title":{},"body":{"components/DefaultLayoutComponent.html":{},"components/MainLayoutComponent.html":{}}}],["layout.component.scss",{"_index":570,"title":{},"body":{"components/DefaultLayoutComponent.html":{},"components/MainLayoutComponent.html":{}}}],["layout.component.ts",{"_index":567,"title":{},"body":{"components/DefaultLayoutComponent.html":{},"components/MainLayoutComponent.html":{},"coverage.html":{}}}],["layout/default",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DefaultLayoutComponent.html":{},"coverage.html":{}}}],["layout/main",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MainLayoutComponent.html":{},"coverage.html":{}}}],["layouts/default",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layouts/main",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["legend",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"overview.html":{}}}],["length",{"_index":318,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["loader",{"_index":630,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["loader'},{'name",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["loader.component.html",{"_index":631,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":632,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader:boolean",{"_index":645,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loadercomponent",{"_index":120,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loaderservice",{"_index":58,"title":{"injectables/LoaderService.html":{}},"body":{"components/AppComponent.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"coverage.html":{}}}],["loaderservice:loaderservice",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["localstorage.getitem('cachetimestamp",{"_index":377,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["localstorage.getitem(this.lang_key",{"_index":565,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["localstorage.removeitem('cachetimestamp",{"_index":382,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["localstorage.setitem('cachetimestamp",{"_index":374,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["localstorage.setitem(this.lang_key",{"_index":563,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["main",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["mainlayoutcomponent",{"_index":122,"title":{"components/MainLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"coverage.html":{},"overview.html":{}}}],["map",{"_index":27,"title":{},"body":{"injectables/ApiServiceService.html":{}}}],["map((key",{"_index":496,"title":{},"body":{"injectables/ConfigService.html":{}}}],["matching",{"_index":35,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MainLayoutComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.length",{"_index":319,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["math.max(0",{"_index":716,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["mergemap",{"_index":682,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["mergemap((cacheddata",{"_index":693,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["metadata",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"pipes/UpperCasePipe.html":{}}}],["methods",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{}}}],["milliseconds",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":772,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modifiedrequest",{"_index":707,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["module",{"_index":129,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":131,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["mouseenter",{"_index":390,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["mouseleave",{"_index":391,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["multi",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["myhttpinterceptorinterceptor",{"_index":144,"title":{"interceptors/MyHttpInterceptorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["name",{"_index":17,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"pipes/UpperCasePipe.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":790,"title":{},"body":{"index.html":{}}}],["need",{"_index":817,"title":{},"body":{"index.html":{}}}],["needed",{"_index":548,"title":{},"body":{"injectables/ConfigService.html":{}}}],["new",{"_index":290,"title":{},"body":{"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"interfaces/String.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":530,"title":{},"body":{"injectables/ConfigService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["next.handle(modifiedrequest).pipe",{"_index":709,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":697,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["ng",{"_index":787,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["ngmodule",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":583,"title":{},"body":{"components/HomeComponent.html":{}}}],["null",{"_index":370,"title":{},"body":{"injectables/CacheStorageService.html":{},"injectables/ConfigSettings.html":{}}}],["number",{"_index":234,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{},"interfaces/User.html":{}}}],["obj",{"_index":776,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":442,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(params",{"_index":493,"title":{},"body":{"injectables/ConfigService.html":{}}}],["observable",{"_index":444,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["observe",{"_index":512,"title":{},"body":{"injectables/ConfigService.html":{}}}],["occurred",{"_index":503,"title":{},"body":{"injectables/ConfigService.html":{},"components/ErrorComponent.html":{}}}],["of(new",{"_index":696,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["ongoingrequestscount",{"_index":656,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["oninit",{"_index":577,"title":{},"body":{"components/HomeComponent.html":{}}}],["onmouseenter",{"_index":386,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["onmouseleave",{"_index":387,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["optional",{"_index":19,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/HomeComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"pipes/UpperCasePipe.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":825,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":757,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":827,"title":{},"body":{"index.html":{}}}],["pages/error/error.component",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/home/home.component",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["parameters",{"_index":15,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/HomeComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"pipes/UpperCasePipe.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":436,"title":{},"body":{"injectables/ConfigService.html":{}}}],["params.hasownproperty(key",{"_index":495,"title":{},"body":{"injectables/ConfigService.html":{}}}],["parseint(lastupdate",{"_index":379,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["password",{"_index":733,"title":{},"body":{"interfaces/User.html":{}}}],["paste",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["path",{"_index":207,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["people",{"_index":581,"title":{},"body":{"components/HomeComponent.html":{}}}],["phone",{"_index":734,"title":{},"body":{"interfaces/User.html":{}}}],["pipe",{"_index":719,"title":{"pipes/UpperCasePipe.html":{}},"body":{"pipes/UpperCasePipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(catcherror(this.handleerror",{"_index":513,"title":{},"body":{"injectables/ConfigService.html":{}}}],["pipes",{"_index":720,"title":{},"body":{"pipes/UpperCasePipe.html":{}}}],["pipes/upper",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":728,"title":{},"body":{"pipes/UpperCasePipe.html":{}}}],["platform",{"_index":814,"title":{},"body":{"index.html":{}}}],["post",{"_index":520,"title":{},"body":{"injectables/ConfigService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["postparams",{"_index":459,"title":{},"body":{"injectables/ConfigService.html":{}}}],["postpromise",{"_index":424,"title":{},"body":{"injectables/ConfigService.html":{}}}],["postpromise(url",{"_index":457,"title":{},"body":{"injectables/ConfigService.html":{}}}],["postrequest",{"_index":425,"title":{},"body":{"injectables/ConfigService.html":{}}}],["postrequest(url",{"_index":461,"title":{},"body":{"injectables/ConfigService.html":{}}}],["primeng",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["project",{"_index":780,"title":{},"body":{"index.html":{}}}],["promise((resolve",{"_index":528,"title":{},"body":{"injectables/ConfigService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"interfaces/User.html":{},"properties.html":{}}}],["prototypeextension",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["provide",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":29,"title":{},"body":{"injectables/ApiServiceService.html":{},"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"injectables/LoaderService.html":{}}}],["providers",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":414,"title":{},"body":{"injectables/ConfigService.html":{}}}],["put",{"_index":524,"title":{},"body":{"injectables/ConfigService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["putpromise",{"_index":426,"title":{},"body":{"injectables/ConfigService.html":{}}}],["putpromise(url",{"_index":463,"title":{},"body":{"injectables/ConfigService.html":{}}}],["putrequest",{"_index":427,"title":{},"body":{"injectables/ConfigService.html":{}}}],["putrequest(url",{"_index":465,"title":{},"body":{"injectables/ConfigService.html":{}}}],["readexternalrequest",{"_index":428,"title":{},"body":{"injectables/ConfigService.html":{}}}],["readexternalrequest(url",{"_index":467,"title":{},"body":{"injectables/ConfigService.html":{}}}],["readonly",{"_index":336,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["readrequest",{"_index":429,"title":{},"body":{"injectables/ConfigService.html":{}}}],["readrequest(url",{"_index":469,"title":{},"body":{"injectables/ConfigService.html":{}}}],["record",{"_index":255,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["reference",{"_index":826,"title":{},"body":{"index.html":{}}}],["register",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["registerwhenstable:30000",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["registrationstrategy",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["reload",{"_index":793,"title":{},"body":{"index.html":{}}}],["remove",{"_index":225,"title":{},"body":{"interfaces/Array.html":{}}}],["remove(item",{"_index":258,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["removebykeyvalue",{"_index":226,"title":{},"body":{"interfaces/Array.html":{}}}],["removebykeyvalue(key",{"_index":260,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["renderer",{"_index":394,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["renderer2",{"_index":395,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["request",{"_index":668,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["request.clone",{"_index":708,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["request.method",{"_index":689,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["res",{"_index":531,"title":{},"body":{"injectables/ConfigService.html":{}}}],["res.body.status",{"_index":536,"title":{},"body":{"injectables/ConfigService.html":{}}}],["res.body.statuscode",{"_index":532,"title":{},"body":{"injectables/ConfigService.html":{}}}],["res.status",{"_index":535,"title":{},"body":{"injectables/ConfigService.html":{}}}],["res.statuscode",{"_index":534,"title":{},"body":{"injectables/ConfigService.html":{}}}],["reset",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolve(res",{"_index":539,"title":{},"body":{"injectables/ConfigService.html":{}}}],["response",{"_index":364,"title":{},"body":{"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{}}}],["response(json.stringify(data",{"_index":365,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["response.json",{"_index":369,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["results",{"_index":34,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MainLayoutComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrievekey",{"_index":248,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["return",{"_index":277,"title":{},"body":{"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":507,"title":{},"body":{"injectables/ConfigService.html":{}}}],["returns",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{},"miscellaneous/functions.html":{}}}],["root",{"_index":30,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"injectables/LoaderService.html":{}}}],["root'},{'name",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["route",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":203,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":212,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":204,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":202,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":786,"title":{},"body":{"index.html":{}}}],["running",{"_index":805,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":484,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":28,"title":{},"body":{"injectables/ApiServiceService.html":{},"injectables/ConfigService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["sample",{"_index":626,"title":{},"body":{"components/HomeComponent.html":{}}}],["scaffolding",{"_index":796,"title":{},"body":{"index.html":{}}}],["seconds",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["selector",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["serializedparams",{"_index":489,"title":{},"body":{"injectables/ConfigService.html":{}}}],["serializeparams",{"_index":430,"title":{},"body":{"injectables/ConfigService.html":{}}}],["serializeparams(params",{"_index":471,"title":{},"body":{"injectables/ConfigService.html":{}}}],["serve",{"_index":788,"title":{},"body":{"index.html":{}}}],["server",{"_index":544,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{}}}],["services/cache",{"_index":685,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["services/loader.service",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["serviceworker",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":294,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["set(this",{"_index":291,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["setlang",{"_index":554,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["setlang(lang",{"_index":558,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["settimeout",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["show",{"_index":637,"title":{},"body":{"injectables/LoaderService.html":{}}}],["showloader",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["showloader:boolean",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["size",{"_index":236,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["size:large",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["size:xx",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["soon",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["sortby",{"_index":227,"title":{},"body":{"interfaces/Array.html":{}}}],["sortby(callback",{"_index":262,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["sortbykey",{"_index":228,"title":{},"body":{"interfaces/Array.html":{}}}],["sortbykey(key",{"_index":264,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MainLayoutComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{},"interfaces/User.html":{},"index.html":{}}}],["src/.../auth.guard.ts",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../helper.ts",{"_index":774,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":201,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:11",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/loader/loader.component.ts",{"_index":629,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["src/app/configs/config.services",{"_index":602,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/configs/config.services.ts",{"_index":412,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/app/configs/config.services.ts:105",{"_index":464,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:109",{"_index":443,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:115",{"_index":438,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:119",{"_index":446,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:145",{"_index":450,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:18",{"_index":474,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:19",{"_index":475,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:20",{"_index":481,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:24",{"_index":433,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:28",{"_index":476,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:31",{"_index":449,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:41",{"_index":472,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:48",{"_index":455,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:59",{"_index":470,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:65",{"_index":452,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:69",{"_index":468,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:78",{"_index":462,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:91",{"_index":460,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:95",{"_index":466,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.settings.ts",{"_index":550,"title":{},"body":{"injectables/ConfigSettings.html":{},"coverage.html":{}}}],["src/app/configs/config.settings.ts:14",{"_index":559,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["src/app/configs/config.settings.ts:21",{"_index":556,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["src/app/configs/config.settings.ts:26",{"_index":557,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["src/app/configs/config.settings.ts:7",{"_index":560,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["src/app/configs/config.settings.ts:8",{"_index":555,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["src/app/configs/helper.ts",{"_index":743,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/directives/change",{"_index":383,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":745,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/interceptors/my",{"_index":653,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{},"coverage.html":{}}}],["src/app/interfaces/user.ts",{"_index":731,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/layouts/default",{"_index":566,"title":{},"body":{"components/DefaultLayoutComponent.html":{},"coverage.html":{}}}],["src/app/layouts/main",{"_index":650,"title":{},"body":{"components/MainLayoutComponent.html":{},"coverage.html":{}}}],["src/app/pages/error/error.component.ts",{"_index":573,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.component.ts",{"_index":576,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.component.ts:11",{"_index":601,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:12",{"_index":600,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:18",{"_index":585,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:42",{"_index":587,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:45",{"_index":588,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:47",{"_index":586,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pipes/upper",{"_index":721,"title":{},"body":{"pipes/UpperCasePipe.html":{},"coverage.html":{}}}],["src/app/prototypeextension.ts",{"_index":216,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{},"coverage.html":{}}}],["src/app/prototypeextension.ts:10",{"_index":240,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:11",{"_index":263,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:12",{"_index":265,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:13",{"_index":267,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:14",{"_index":269,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:15",{"_index":235,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:16",{"_index":270,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:17",{"_index":272,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:18",{"_index":259,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:19",{"_index":261,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:20",{"_index":246,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:21",{"_index":243,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:22",{"_index":249,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:4",{"_index":718,"title":{},"body":{"interfaces/String.html":{}}}],["src/app/prototypeextension.ts:7",{"_index":252,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:8",{"_index":257,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:9",{"_index":237,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/services/api.service",{"_index":603,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/services/api.service.ts",{"_index":6,"title":{},"body":{"injectables/ApiServiceService.html":{},"coverage.html":{}}}],["src/app/services/api.service.ts:9",{"_index":14,"title":{},"body":{"injectables/ApiServiceService.html":{}}}],["src/app/services/cache",{"_index":334,"title":{},"body":{"injectables/CacheStorageService.html":{},"coverage.html":{}}}],["src/app/services/loader.service.ts",{"_index":633,"title":{},"body":{"injectables/LoaderService.html":{},"coverage.html":{}}}],["src/app/services/loader.service.ts:12",{"_index":641,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/services/loader.service.ts:17",{"_index":640,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/services/loader.service.ts:22",{"_index":639,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/services/loader.service.ts:8",{"_index":644,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/services/loader.service.ts:9",{"_index":638,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/environments/environment",{"_index":360,"title":{},"body":{"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["src/environments/environment.development.ts",{"_index":753,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":754,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stable",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["started",{"_index":778,"title":{"index.html":{}},"body":{}}],["startloader",{"_index":659,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["state",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["steal",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["stoploader",{"_index":660,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["storage.service",{"_index":686,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["storage.service.ts",{"_index":335,"title":{},"body":{"injectables/CacheStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:15",{"_index":347,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["storage.service.ts:22",{"_index":351,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["storage.service.ts:33",{"_index":349,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["storage.service.ts:37",{"_index":353,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["storage.service.ts:42",{"_index":348,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["storage.service.ts:8",{"_index":356,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["storage.service.ts:9",{"_index":345,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["stored",{"_index":802,"title":{},"body":{"index.html":{}}}],["storedlang",{"_index":564,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["string",{"_index":21,"title":{"interfaces/String.html":{}},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/HomeComponent.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["string(request.urlwithparams",{"_index":691,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["string.prototype.capitalizefirstletter",{"_index":276,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["styles",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{}}}],["styleurl",{"_index":569,"title":{},"body":{"components/DefaultLayoutComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["styleurls",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{}}}],["sum",{"_index":229,"title":{},"body":{"interfaces/Array.html":{}}}],["sum(callback",{"_index":266,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["sumbykey",{"_index":230,"title":{},"body":{"interfaces/Array.html":{}}}],["sumbykey(key",{"_index":268,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["support",{"_index":828,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":829,"title":{},"body":{"modules.html":{}}}],["t",{"_index":238,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["table",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":755,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":683,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["tap((event",{"_index":698,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["template",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["templateurl",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["test",{"_index":808,"title":{},"body":{"index.html":{}}}],["testing",{"_index":819,"title":{},"body":{"index.html":{}}}],["tests",{"_index":807,"title":{},"body":{"index.html":{}}}],["this._lang",{"_index":561,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["this.api_url",{"_index":491,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.baseroute",{"_index":492,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cache_timeout",{"_index":381,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["this.cachestorageservice.addtocache(cachename",{"_index":700,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.cachestorageservice.clearcache",{"_index":704,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.cdr.detectchanges",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["this.charat(0).touppercase",{"_index":278,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["this.checkcacheexpiration",{"_index":361,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["this.configservice.getpromise('facts",{"_index":625,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.configsettings._lang",{"_index":519,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.configsettings.getlang",{"_index":688,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.debouncehide",{"_index":717,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.deleterequest(url",{"_index":527,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.displayloader.asobservable",{"_index":649,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.displayloader.next(false",{"_index":648,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.displayloader.next(true",{"_index":647,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.entries",{"_index":624,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.filter((i",{"_index":326,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["this.filter((item",{"_index":295,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["this.find((item",{"_index":329,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["this.getapipromise",{"_index":514,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.getcompleteurl(url",{"_index":521,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.getheader",{"_index":705,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.getstoredlang",{"_index":562,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["this.gettestdata",{"_index":623,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.highlight",{"_index":409,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["this.highlight(this.appchangebgcoloronclick",{"_index":407,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["this.http",{"_index":510,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.http.get(this.getcompleteurl(url",{"_index":516,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.httpoptions",{"_index":522,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.lang",{"_index":687,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.loader",{"_index":646,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.loaderservice.getdata().subscribe((data",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loaderservice.hide",{"_index":674,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.loaderservice.show",{"_index":713,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.ongoingrequestscount.next",{"_index":715,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.ongoingrequestscount.next(this.ongoingrequestscount.value",{"_index":714,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.ongoingrequestscount.value",{"_index":673,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.postrequest(url",{"_index":523,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.putrequest(url",{"_index":525,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.readrequest(url",{"_index":515,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.reduce((acc",{"_index":281,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["this.renderer.setstyle(this.el.nativeelement",{"_index":410,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["this.serializeparams(params",{"_index":490,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.showloader",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["this.slice(1",{"_index":279,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["this.slice(index",{"_index":321,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["this.startloader",{"_index":706,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.stoploader",{"_index":710,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.title",{"_index":604,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.title.capitalizefirstletter",{"_index":605,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.updatecachetimestamp",{"_index":367,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["this].sort((a",{"_index":302,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["throwerror",{"_index":483,"title":{},"body":{"injectables/ConfigService.html":{}}}],["timeelapsed",{"_index":378,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["timeout:3600000",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timeoutid",{"_index":671,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["title",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["tokendfktgvf87gt63hg",{"_index":712,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["transform",{"_index":724,"title":{},"body":{"pipes/UpperCasePipe.html":{}}}],["transform(value",{"_index":725,"title":{},"body":{"pipes/UpperCasePipe.html":{}}}],["tree",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["true",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Array.html":{},"injectables/LoaderService.html":{},"interfaces/String.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":18,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"pipes/UpperCasePipe.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":244,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{},"miscellaneous/functions.html":{}}}],["understand",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["unique",{"_index":231,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["uniqueby",{"_index":232,"title":{},"body":{"interfaces/Array.html":{}}}],["uniqueby(key",{"_index":271,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["uniquekeys",{"_index":293,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["uniquekeys.add(itemkey",{"_index":299,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["uniquekeys.has(itemkey",{"_index":298,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["unit",{"_index":806,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":352,"title":{},"body":{"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{}}}],["updatecachetimestamp",{"_index":344,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["uppercase",{"_index":723,"title":{},"body":{"pipes/UpperCasePipe.html":{}}}],["uppercasepipe",{"_index":142,"title":{"pipes/UpperCasePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/UpperCasePipe.html":{},"coverage.html":{},"overview.html":{}}}],["url",{"_index":439,"title":{},"body":{"injectables/ConfigService.html":{}}}],["use",{"_index":798,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":730,"title":{"interfaces/User.html":{}},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["v17",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["value",{"_index":23,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{},"miscellaneous/variables.html":{}}}],["value.touppercase",{"_index":729,"title":{},"body":{"pipes/UpperCasePipe.html":{}}}],["var",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["variable",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":838,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":783,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":810,"title":{},"body":{"index.html":{}}}],["vishwakarma",{"_index":837,"title":{},"body":{"properties.html":{}}}],["void",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["weight:bold",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["whichever",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["worker",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["worker.js",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["xss",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["yellow",{"_index":408,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["yes",{"_index":440,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{}}}],["you.\\nsee",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["zone.js",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiServiceService.html":{"url":"injectables/ApiServiceService.html","title":"injectable - ApiServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configServices: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configServices\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ConfigService } from '../configs/config.services';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiServiceService {\n  baseRoute = '';\n  constructor(private configServices: ConfigService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showLoader\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loaderService: LoaderService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showLoader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'angular-boilerplate-v17'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ChangeDetectorRef, Component } from '@angular/core';\nimport { LoaderService } from './services/loader.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements AfterViewInit {\n  title = 'angular-boilerplate-v17';\n  showLoader:boolean = true;\n  constructor(\n    private loaderService:LoaderService,\n    private cdr: ChangeDetectorRef\n  ){}\n\n  ngAfterViewInit(): void {\n    this.loaderService.getData().subscribe((data) => {\n      setTimeout(() => {\n        this.showLoader = data;\n        this.cdr.detectChanges();\n      });\n    });\n    console.log(\"%cSTOP!\", \"color:red;font-size:xx-large;font-weight:bold;\")\n    console.log(\"%cThis is a browser feature intended for developers. Do not enter or paste code which you don't understand. It may allow attackers to steal your information or impersonate you.\\nSee https://en.wikipedia.org/wiki/Self-XSS for more details\", \"font-size:large;\")\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DefaultLayoutComponent', 'selector': 'app-default-layout'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'loader'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'}];\n    var DIRECTIVES = [{'name': 'ChangeBgColorOnClickDirective', 'selector': '[appChangeBgColorOnClick]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangeBgColorOnClickDirective\n\nChangeBgColorOnClickDirective\n\nAppModule -->\n\nChangeBgColorOnClickDirective->AppModule\n\n\n\n\n\nDefaultLayoutComponent\n\nDefaultLayoutComponent\n\nAppModule -->\n\nDefaultLayoutComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nMainLayoutComponent\n\nMainLayoutComponent\n\nAppModule -->\n\nMainLayoutComponent->AppModule\n\n\n\n\n\nUpperCasePipe\n\nUpperCasePipe\n\nAppModule -->\n\nUpperCasePipe->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMyHttpInterceptorInterceptor\n\nMyHttpInterceptorInterceptor\n\nAppModule -->\n\nMyHttpInterceptorInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ChangeBgColorOnClickDirective\n                        \n                        \n                            DefaultLayoutComponent\n                        \n                        \n                            ErrorComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoaderComponent\n                        \n                        \n                            MainLayoutComponent\n                        \n                        \n                            UpperCasePipe\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            MyHttpInterceptorInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, isDevMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { ChangeBgColorOnClickDirective } from './directives/change-bg-color-on-click.directive';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { MyHttpInterceptorInterceptor } from './interceptors/my-http.interceptor';\nimport { HomeComponent } from './pages/home/home.component';\nimport { ErrorComponent } from './pages/error/error.component';\nimport { UpperCasePipe } from './pipes/upper-case.pipe';\nimport './prototypeExtension';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoaderComponent } from './components/loader/loader.component';\nimport { MainLayoutComponent } from './layouts/main-layout/main-layout.component';\nimport { DefaultLayoutComponent } from './layouts/default-layout/default-layout.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChangeBgColorOnClickDirective,\n    HomeComponent,\n    ErrorComponent,\n    UpperCasePipe,\n    LoaderComponent,\n    MainLayoutComponent,\n    DefaultLayoutComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: !isDevMode(),\n      // Register the ServiceWorker as soon as the application is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000',\n    }),\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: MyHttpInterceptorInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\nimport { DefaultLayoutComponent } from './layouts/default-layout/default-layout.component';\nimport { MainLayoutComponent } from './layouts/main-layout/main-layout.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component:DefaultLayoutComponent,\n    children:[\n      {\n        path: '',\n        component:HomeComponent\n      }\n    ]\n  },\n  {\n    path: 'main',\n    component:MainLayoutComponent,\n    children:[\n      {\n        path: '',\n        component:HomeComponent\n      }\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Array.html":{"url":"interfaces/Array.html","title":"interface - Array","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Array\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/prototypeExtension.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        chunk\n                                    \n                                \n                                \n                                    \n                                        distinct\n                                    \n                                \n                                \n                                    \n                                        distinctByKey\n                                    \n                                \n                                \n                                    \n                                        findByKeyValue\n                                    \n                                \n                                \n                                    \n                                        findIndexByKeyValue\n                                    \n                                \n                                \n                                    \n                                        findValueByKeyValue\n                                    \n                                \n                                \n                                    \n                                        groupBy\n                                    \n                                \n                                \n                                    \n                                        groupByKey\n                                    \n                                \n                                \n                                    \n                                        remove\n                                    \n                                \n                                \n                                    \n                                        removeByKeyValue\n                                    \n                                \n                                \n                                    \n                                        sortBy\n                                    \n                                \n                                \n                                    \n                                        sortByKey\n                                    \n                                \n                                \n                                    \n                                        sum\n                                    \n                                \n                                \n                                    \n                                        sumByKey\n                                    \n                                \n                                \n                                    \n                                        unique\n                                    \n                                \n                                \n                                    \n                                        uniqueBy\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chunk\n                        \n                    \n                \n            \n            \n                \nchunk(size: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     [][]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        distinct\n                        \n                    \n                \n            \n            \n                \ndistinct()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        distinctByKey\n                        \n                    \n                \n            \n            \n                \ndistinctByKey(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByKeyValue\n                        \n                    \n                \n            \n            \n                \nfindByKeyValue(key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findIndexByKeyValue\n                        \n                    \n                \n            \n            \n                \nfindIndexByKeyValue(key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findValueByKeyValue\n                        \n                    \n                \n            \n            \n                \nfindValueByKeyValue(key: string, value: any, retrieveKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                retrieveKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupBy\n                        \n                    \n                \n            \n            \n                \ngroupBy(callback: (item: T) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupByKey\n                        \n                    \n                \n            \n            \n                \ngroupByKey(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(item: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeByKeyValue\n                        \n                    \n                \n            \n            \n                \nremoveByKeyValue(key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortBy\n                        \n                    \n                \n            \n            \n                \nsortBy(callback: (item: T) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortByKey\n                        \n                    \n                \n            \n            \n                \nsortByKey(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sum\n                        \n                    \n                \n            \n            \n                \nsum(callback: (item: T) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sumByKey\n                        \n                    \n                \n            \n            \n                \nsumByKey(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unique\n                        \n                    \n                \n            \n            \n                \nunique()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uniqueBy\n                        \n                    \n                \n            \n            \n                \nuniqueBy(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export {};\ndeclare global {\n  interface String {\n    capitalizeFirstLetter(): string;\n  }\n  interface Array {\n    groupBy(callback: (item: T) => string): Record;\n    groupByKey(key: string): Record;\n    distinct(): T[];\n    distinctByKey(key: string): T[];\n    sortBy(callback: (item: T) => any): T[];\n    sortByKey(key: string): T[];\n    sum(callback: (item: T) => number): number;\n    sumByKey(key: string): number;\n    chunk(size: number): T[][];\n    unique(): T[];\n    uniqueBy(key: string): T[];\n    remove(item: T): T[];\n    removeByKeyValue(key: string, value: any): T[];\n    findIndexByKeyValue(key: string, value: any): number;\n    findByKeyValue(key: string, value: any): T | undefined;\n    findValueByKeyValue(\n      key: string,\n      value: any,\n      retrieveKey: string,\n    ): any | undefined;\n  }\n}\n\nString.prototype.capitalizeFirstLetter = function () {\n  return this.charAt(0).toUpperCase() + this.slice(1);\n};\n\nArray.prototype.groupBy = function (\n  callback: (item: T) => string,\n): Record {\n  return this.reduce((acc, item) => {\n    const key = callback(item);\n    acc[key] = acc[key] || [];\n    acc[key].push(item);\n    return acc;\n  }, {});\n};\nArray.prototype.groupByKey = function (\n  keyName: string,\n): Record {\n  return this.reduce((acc, item) => {\n    const key = item[keyName];\n    acc[key] = acc[key] || [];\n    acc[key].push(item);\n    return acc;\n  }, {});\n};\nArray.prototype.distinct = function (): T[] {\n  return [...new Set(this)];\n};\nArray.prototype.distinctByKey = function (key: string): T[] {\n  const uniqueKeys = new Set();\n  return this.filter((item) => {\n    const itemKey = (item as any)[key];\n    if (!uniqueKeys.has(itemKey)) {\n      uniqueKeys.add(itemKey);\n      return true;\n    }\n    return false;\n  });\n};\nArray.prototype.sortBy = function (callback: (item: T) => any): T[] {\n  return [...this].sort((a, b) => {\n    const keyA = callback(a);\n    const keyB = callback(b);\n    return keyA  keyB ? 1 : 0;\n  });\n};\nArray.prototype.sortByKey = function (key: string): T[] {\n  return [...this].sort((a, b) => {\n    const keyA = a[key];\n    const keyB = b[key];\n    return keyA  keyB ? 1 : 0;\n  });\n};\nArray.prototype.sum = function (callback: (item: T) => number): number {\n  return this.reduce((acc, item) => acc + callback(item), 0);\n};\nArray.prototype.sumByKey = function (key: string): number {\n  return this.reduce((acc, item) => acc + item[key], 0);\n};\nArray.prototype.chunk = function (size: number): T[][] {\n  return Array.from({ length: Math.ceil(this.length / size) }, (__, index) =>\n    this.slice(index * size, index * size + size),\n  );\n};\nArray.prototype.unique = function (): T[] {\n  return Array.from(new Set(this));\n};\nArray.prototype.uniqueBy = function (key: string): T[] {\n  const uniqueKeys = new Set();\n  return this.filter((item) => {\n    const itemKey = (item as any)[key];\n    if (!uniqueKeys.has(itemKey)) {\n      uniqueKeys.add(itemKey);\n      return true;\n    }\n    return false;\n  });\n};\nArray.prototype.remove = function (item: T): T[] {\n  return this.filter((i) => i !== item);\n};\nArray.prototype.removeByKeyValue = function (key: string, value: any): T[] {\n  return this.filter((item) => (item as any)[key] !== value);\n};\nArray.prototype.findIndexByKeyValue = function (\n  key: string,\n  value: any,\n): number {\n  for (let i = 0; i (\n  key: string,\n  value: any,\n): T | undefined {\n  return this.find((item) => (item as any)[key] === value);\n};\nArray.prototype.findValueByKeyValue = function (\n  key: string,\n  value: any,\n  retrieveKey: string,\n): any | undefined {\n  const foundItem = this.find((item) => (item as any)[key] === value);\n  if (foundItem) {\n    return (foundItem as any)[retrieveKey];\n  }\n  return undefined;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CacheStorageService.html":{"url":"injectables/CacheStorageService.html","title":"injectable - CacheStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CacheStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/cache-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                CACHE_KEY\n                            \n                            \n                                    Private\n                                    Readonly\n                                CACHE_TIMEOUT\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addToCache\n                            \n                            \n                                    Private\n                                    Async\n                                checkCacheExpiration\n                            \n                            \n                                    Async\n                                clearCache\n                            \n                            \n                                    Async\n                                getFromCache\n                            \n                            \n                                    Private\n                                updateCacheTimestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/cache-storage.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addToCache\n                        \n                    \n                \n            \n            \n                \n                        \n                    addToCache(key: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cache-storage.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        checkCacheExpiration\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkCacheExpiration()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cache-storage.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearCache\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearCache()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cache-storage.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFromCache\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFromCache(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cache-storage.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateCacheTimestamp\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCacheTimestamp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cache-storage.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        CACHE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ab17-cache'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cache-storage.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        CACHE_TIMEOUT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.cache.timeOut || 3600000\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cache-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CacheStorageService {\n  private readonly CACHE_KEY = 'ab17-cache';\n  private readonly CACHE_TIMEOUT = environment.cache.timeOut || 3600000;\n\n  constructor() {\n    this.checkCacheExpiration();\n  }\n\n  async addToCache(key: string, data: any) {\n    const cache = await caches.open(this.CACHE_KEY);\n    const response = new Response(JSON.stringify(data));\n    await cache.put(key, response);\n    this.updateCacheTimestamp();\n  }\n\n  async getFromCache(key: string) {\n    const cache = await caches.open(this.CACHE_KEY);\n    const response = await cache.match(key);\n    if (response) {\n      const data = await response.json();\n      return data;\n    } else {\n      return null;\n    }\n  }\n\n  async clearCache(){\n    await caches.delete(this.CACHE_KEY);\n  }\n\n  private updateCacheTimestamp() {\n    const currentTime = new Date().getTime();\n    localStorage.setItem('cacheTimestamp', currentTime.toString());\n  }\n\n  private async checkCacheExpiration() {\n    const lastUpdate = localStorage.getItem('cacheTimestamp');\n    if (lastUpdate) {\n      const currentTime = new Date().getTime();\n      const timeElapsed = currentTime - parseInt(lastUpdate, 10);\n      if (timeElapsed >= this.CACHE_TIMEOUT) {\n        await caches.delete(this.CACHE_KEY);\n        localStorage.removeItem('cacheTimestamp');\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ChangeBgColorOnClickDirective.html":{"url":"directives/ChangeBgColorOnClickDirective.html","title":"directive - ChangeBgColorOnClickDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ChangeBgColorOnClickDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/change-bg-color-on-click.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appChangeBgColorOnClick]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                highlight\n                            \n                            \n                                    \n                                onMouseEnter\n                            \n                            \n                                    \n                                onMouseLeave\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appChangeBgColorOnClick\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                mouseenter\n                            \n                            \n                                mouseleave\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/change-bg-color-on-click.directive.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appChangeBgColorOnClick\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/change-bg-color-on-click.directive.ts:7\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            mouseenter\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/change-bg-color-on-click.directive.ts:11\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseleave\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/change-bg-color-on-click.directive.ts:15\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        highlight\n                        \n                    \n                \n            \n            \n                \n                        \n                    highlight(color: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/directives/change-bg-color-on-click.directive.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onMouseEnter\n                        \n                    \n                \n            \n            \n                \n                        \n                    onMouseEnter()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseenter')\n                \n            \n\n                    \n                        \n                            Defined in src/app/directives/change-bg-color-on-click.directive.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onMouseLeave\n                        \n                    \n                \n            \n            \n                \n                        \n                    onMouseLeave()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseleave')\n                \n            \n\n                    \n                        \n                            Defined in src/app/directives/change-bg-color-on-click.directive.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, HostListener, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appChangeBgColorOnClick]',\n})\nexport class ChangeBgColorOnClickDirective {\n  @Input() appChangeBgColorOnClick = '';\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener('mouseenter') onMouseEnter() {\n    this.highlight(this.appChangeBgColorOnClick || 'yellow');\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    this.highlight('');\n  }\n\n  private highlight(color: string) {\n    this.renderer.setStyle(this.el.nativeElement, 'backgroundColor', color);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/configs/config.services.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                API_URL\n                            \n                            \n                                    Public\n                                baseRoute\n                            \n                            \n                                    Public\n                                configSettings\n                            \n                            \n                                    Private\n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deletePromise\n                            \n                            \n                                deleteRequest\n                            \n                            \n                                    Async\n                                getApiPromise\n                            \n                            \n                                    Private\n                                getCompleteUrl\n                            \n                            \n                                getLang\n                            \n                            \n                                    Async\n                                getPromise\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Async\n                                postPromise\n                            \n                            \n                                postRequest\n                            \n                            \n                                    Async\n                                putPromise\n                            \n                            \n                                putRequest\n                            \n                            \n                                readExternalRequest\n                            \n                            \n                                readRequest\n                            \n                            \n                                    Private\n                                serializeParams\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, configSettings: ConfigSettings)\n                    \n                \n                        \n                            \n                                Defined in src/app/configs/config.services.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configSettings\n                                                  \n                                                        \n                                                                        ConfigSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deletePromise\n                        \n                    \n                \n            \n            \n                \n                        \n                    deletePromise(url: string, params?: any, keys?: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                keys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRequest\n                        \n                    \n                \n            \n            \n                \ndeleteRequest(url: string, params: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getApiPromise\n                        \n                    \n                \n            \n            \n                \n                        \n                    getApiPromise(apiCallMethod: () => void, keys?: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiCallMethod\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                keys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getCompleteUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCompleteUrl(url: string, params: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLang\n                        \n                    \n                \n            \n            \n                \ngetLang()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:145\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPromise\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPromise(url: string, params?: any, keys?: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                keys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        postPromise\n                        \n                    \n                \n            \n            \n                \n                        \n                    postPromise(url: string, getParams: any, postParams: any, keys?: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                getParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                postParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                keys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postRequest\n                        \n                    \n                \n            \n            \n                \npostRequest(url: string, getParams: any, postParams: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                getParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                postParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        putPromise\n                        \n                    \n                \n            \n            \n                \n                        \n                    putPromise(url: string, getParams: any, postParams: any, keys?: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                getParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                postParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                keys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putRequest\n                        \n                    \n                \n            \n            \n                \nputRequest(url: string, getParams: Object, postParams: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                getParams\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                postParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readExternalRequest\n                        \n                    \n                \n            \n            \n                \nreadExternalRequest(url: string, params: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readRequest\n                        \n                    \n                \n            \n            \n                \nreadRequest(url: string, params?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        serializeParams\n                        \n                    \n                \n            \n            \n                \n                        \n                    serializeParams(params: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiUrl || ''\n                    \n                \n                    \n                        \n                                Defined in src/app/configs/config.services.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        baseRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/configs/config.services.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configSettings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigSettings\n\n                    \n                \n                    \n                        \n                                Defined in src/app/configs/config.services.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/configs/config.services.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport {\n  HttpClient,\n  HttpErrorResponse,\n  HttpHeaders,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ConfigSettings } from './config.settings';\nimport { getValue } from './helper';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigService {\n  private API_URL = environment.apiUrl || '';\n  public baseRoute = '';\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  };\n\n  constructor(\n    private http: HttpClient,\n    public configSettings: ConfigSettings,\n  ) {}\n\n  private getCompleteUrl(url: string, params: any): string {\n    const serializedParams = this.serializeParams(params);\n    return (\n      this.API_URL +\n      this.baseRoute +\n      url +\n      (serializedParams ? '?' + serializedParams : '')\n    );\n  }\n\n  private serializeParams(params: any): string {\n    return Object.keys(params)\n      .filter((key) => params.hasOwnProperty(key))\n      .map((key) => `${key}=${encodeURIComponent(params[key])}`)\n      .join('&');\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      console.error('An error occurred:', error.error.message);\n    } else {\n      console.error(\n        `Backend returned code ${error.status}, body was: ${error.error}`,\n      );\n    }\n    return throwError(() => error);\n  }\n\n  readRequest(url: string, params?: any): Observable> {\n    return this.http\n      .get(this.getCompleteUrl(url, params), { observe: 'response' })\n      .pipe(catchError(this.handleError));\n  }\n\n  async getPromise(url: string, params?: any, keys?: string[]){\n    return this.getApiPromise(() => this.readRequest(url, params), keys);\n  }\n\n  readExternalRequest(\n    url: string,\n    params: Object,\n  ): Observable> {\n    return this.http.get(this.getCompleteUrl(url, params), {\n      observe: 'response',\n    });\n  }\n\n  postRequest(url: string, getParams: any, postParams: any): Observable {\n    if (!('lang' in getParams)) {\n      getParams.lang = this.configSettings._lang;\n    }\n    return this.http\n      .post(\n        this.getCompleteUrl(url, getParams),\n        postParams,\n        this.httpOptions,\n      )\n      .pipe(catchError(this.handleError));\n  }\n\n  async postPromise(url: string, getParams: any, postParams: any, keys?: string[]){\n    return this.getApiPromise(() => this.postRequest(url, getParams, postParams), keys);\n  }\n\n  putRequest(url: string, getParams: Object, postParams: any): Observable {\n    return this.http\n      .put(\n        this.getCompleteUrl(url, getParams),\n        postParams,\n        this.httpOptions,\n      )\n      .pipe(catchError(this.handleError));\n  }\n\n  async putPromise(url: string, getParams: any, postParams: any, keys?: string[]){\n    return this.getApiPromise(() => this.putRequest(url, getParams, postParams), keys);\n  }\n\n  deleteRequest(url: string, params: Object): Observable> {\n    return this.http\n      .delete(this.getCompleteUrl(url, params), { observe: 'response' })\n      .pipe(catchError(this.handleError));\n  }\n\n  async deletePromise(url: string, params?: any, keys?: string[]){\n    return this.getApiPromise(() => this.deleteRequest(url, params), keys);\n  }\n\n  async getApiPromise(apiCallMethod: () => any, keys?: string[]) {\n    return new Promise((resolve) => {\n      apiCallMethod().subscribe({\n        next: (res: any) => {\n          if (\n            res.body.statusCode == 200 ||\n            res.statusCode == 200 ||\n            res.status == 200 ||\n            res.body.status == 200\n          ) {\n            if (keys && keys.length > 0) {\n              res = getValue(res, keys);\n            }\n            resolve(res);\n          }\n        },\n        error: (err: any) => {\n          console.error('Failed to connect with API server with error:', err);\n        },\n        complete: () => {\n          // Handle completion if needed\n        },\n      });\n    });\n  }\n\n  getLang(): string {\n    return 'en';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigSettings.html":{"url":"injectables/ConfigSettings.html","title":"injectable - ConfigSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/configs/config.settings.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _lang\n                            \n                            \n                                    Private\n                                LANG_KEY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLang\n                            \n                            \n                                    Private\n                                getStoredLang\n                            \n                            \n                                setLang\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/configs/config.settings.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLang\n                        \n                    \n                \n            \n            \n                \ngetLang()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.settings.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getStoredLang\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStoredLang()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.settings.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.settings.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/configs/config.settings.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        LANG_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'lang'\n                    \n                \n                    \n                        \n                                Defined in src/app/configs/config.settings.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigSettings {\n  private LANG_KEY = 'lang';\n  _lang: string;\n\n  constructor() {\n    this._lang = this.getStoredLang() || 'en';\n  }\n\n  setLang(lang?: string) {\n    if (lang) {\n      localStorage.setItem(this.LANG_KEY, lang);\n      this._lang = lang;\n    }\n  }\n\n  getLang() {\n    const storedLang = this.getStoredLang();\n    return storedLang ? storedLang : 'en';\n  }\n\n  private getStoredLang(): string | null {\n    const storedLang = localStorage.getItem(this.LANG_KEY);\n    return storedLang ? (storedLang as string) : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultLayoutComponent.html":{"url":"components/DefaultLayoutComponent.html","title":"component - DefaultLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DefaultLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/default-layout/default-layout.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-default-layout\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./default-layout.component.html\n            \n\n\n\n            \n                styleUrl\n                ./default-layout.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-default-layout',\n  templateUrl: './default-layout.component.html',\n  styleUrl: './default-layout.component.scss'\n})\nexport class DefaultLayoutComponent {\n\n}\n\n    \n\n    \n        \n    Default\n    Home\n    About\n    Contact\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Default    Home    About    Contact'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DefaultLayoutComponent', 'selector': 'app-default-layout'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'loader'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'}];\n    var DIRECTIVES = [{'name': 'ChangeBgColorOnClickDirective', 'selector': '[appChangeBgColorOnClick]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/error/error.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n\n\n            \n                styleUrls\n                ./error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent {\n\n}\n\n    \n\n    \n        \n  Error\n  An Error Occurred\n\n\n    \n\n    \n                \n                    ./error.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Error  An Error Occurred'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DefaultLayoutComponent', 'selector': 'app-default-layout'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'loader'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'}];\n    var DIRECTIVES = [{'name': 'ChangeBgColorOnClickDirective', 'selector': '[appChangeBgColorOnClick]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                people\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getTestData\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, apiServiceService: ApiServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiServiceService\n                                                  \n                                                        \n                                                                        ApiServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTestData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTestData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        entries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        people\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : [\n    { id: 1, name: 'Alice', age: 25 },\n    { id: 2, name: 'Bob', age: 30 },\n    { id: 3, name: 'Charlie', age: 30 },\n    { id: 4, name: 'Charlie', age: 22 },\n    { id: 5, name: 'Charlie', age: 22 },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : 'home'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ConfigService } from 'src/app/configs/config.services';\nimport { ApiServiceService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  title: String = 'home';\n  people: any = [\n    { id: 1, name: 'Alice', age: 25 },\n    { id: 2, name: 'Bob', age: 30 },\n    { id: 3, name: 'Charlie', age: 30 },\n    { id: 4, name: 'Charlie', age: 22 },\n    { id: 5, name: 'Charlie', age: 22 },\n  ];\n\n  constructor(\n    private configService: ConfigService,\n    private apiServiceService: ApiServiceService,\n  ) {\n    this.title = this.title.capitalizeFirstLetter();\n    // console.log(this.people.groupBy((item: any) => item.age));\n    // console.log(this.people.groupByKey('age'));\n    // console.log(this.people.distinct());\n    // console.log(this.people.distinctByKey('age'));\n    // console.log(this.people.sortByKey((item: any) => item.age));\n    // console.log(this.people.sortByKey('age'));\n    // console.log(this.people.sum((item: any) => item.age));\n    // console.log(this.people.sumByKey('age'));\n    // console.log(this.people.chunk(2));\n    // console.log(this.people.unique());\n    // console.log(this.people.uniqueBy('age'));\n    // console.log(this.people.remove({ id: 5, name: 'Charlie', age: 22 }));--BUG\n    // console.log(this.people.removeByKeyValue('age', 22));\n    // console.log(this.people.findIndexByKeyValue('age', 22));\n    // console.log(this.people.findByKeyValue('age', 22));\n  }\n\n  ngOnInit(): void {\n    this.getTestData();\n  }\n  entries: any;\n\n  async getTestData() {\n    this.entries = await this.configService.getPromise('facts', {})\n  }\n}\n\n    \n\n    \n        \n    Sample data fetched from API\n    {{entries | json}}\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Sample data fetched from API    {{entries | json}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DefaultLayoutComponent', 'selector': 'app-default-layout'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'loader'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'}];\n    var DIRECTIVES = [{'name': 'ChangeBgColorOnClickDirective', 'selector': '[appChangeBgColorOnClick]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loader/loader.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                loader\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n            \n                styleUrl\n                ./loader.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'loader',\n  templateUrl: './loader.component.html',\n  styleUrl: './loader.component.scss'\n})\nexport class LoaderComponent {\n\n}\n\n    \n\n    \n        \n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DefaultLayoutComponent', 'selector': 'app-default-layout'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'loader'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'}];\n    var DIRECTIVES = [{'name': 'ChangeBgColorOnClickDirective', 'selector': '[appChangeBgColorOnClick]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                displayLoader\n                            \n                            \n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/loader.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/loader.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/loader.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/loader.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        displayLoader\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.loader)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/loader.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/loader.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  loader:boolean = false\n  private displayLoader: BehaviorSubject = new BehaviorSubject(this.loader);\n  constructor() { }\n\n  show(): void {\n    this.loader = true\n    this.displayLoader.next(true);\n  }\n\n  hide(): void {\n    this.loader = false\n    this.displayLoader.next(false);\n  }\n\n  getData(): Observable {\n    return this.displayLoader.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainLayoutComponent.html":{"url":"components/MainLayoutComponent.html","title":"component - MainLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/main-layout/main-layout.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-layout\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./main-layout.component.html\n            \n\n\n\n            \n                styleUrl\n                ./main-layout.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrl: './main-layout.component.scss'\n})\nexport class MainLayoutComponent {\n\n}\n\n    \n\n    \n        \n    Main\n    Home\n    About\n    Contact\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Main    Home    About    Contact'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DefaultLayoutComponent', 'selector': 'app-default-layout'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'loader'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'}];\n    var DIRECTIVES = [{'name': 'ChangeBgColorOnClickDirective', 'selector': '[appChangeBgColorOnClick]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/MyHttpInterceptorInterceptor.html":{"url":"interceptors/MyHttpInterceptorInterceptor.html","title":"interceptor - MyHttpInterceptorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  MyHttpInterceptorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interceptors/my-http.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                debounceHide\n                            \n                            \n                                lang\n                            \n                            \n                                    Private\n                                ongoingRequestsCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getHeader\n                            \n                            \n                                intercept\n                            \n                            \n                                    Private\n                                startLoader\n                            \n                            \n                                    Private\n                                stopLoader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configSettings: ConfigSettings, cacheStorageService: CacheStorageService, loaderService: LoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/interceptors/my-http.interceptor.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configSettings\n                                                  \n                                                        \n                                                                        ConfigSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheStorageService\n                                                  \n                                                        \n                                                                        CacheStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeader()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/interceptors/my-http.interceptor.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/interceptors/my-http.interceptor.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startLoader\n                        \n                    \n                \n            \n            \n                \n                        \n                    startLoader()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/interceptors/my-http.interceptor.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stopLoader\n                        \n                    \n                \n            \n            \n                \n                        \n                    stopLoader()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/interceptors/my-http.interceptor.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        debounceHide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (() => {\n    let timeoutId: any;    \n    return () => {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => {\n        if (this.ongoingRequestsCount.value === 0) {\n          this.loaderService.hide();\n        }\n      }, 1000);\n    };\n  })()\n                    \n                \n                    \n                        \n                                Defined in src/app/interceptors/my-http.interceptor.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : 'en'\n                    \n                \n                    \n                        \n                                Defined in src/app/interceptors/my-http.interceptor.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ongoingRequestsCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/interceptors/my-http.interceptor.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpHeaders,\n  HttpResponse,\n} from '@angular/common/http';\nimport { BehaviorSubject, Observable, from, of } from 'rxjs';\nimport { finalize, mergeMap, tap } from 'rxjs/operators';\nimport { ConfigSettings } from '../configs/config.settings';\nimport { LoaderService } from '../services/loader.service';\nimport { CacheStorageService } from '../services/cache-storage.service';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class MyHttpInterceptorInterceptor implements HttpInterceptor {\n  lang: any = 'en';\n  private ongoingRequestsCount = new BehaviorSubject(0);\n\n  constructor(\n    private configSettings: ConfigSettings,\n    private cacheStorageService: CacheStorageService,\n    private loaderService: LoaderService\n  ) {\n    this.lang = this.configSettings.getLang();\n  }\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler,\n  ): Observable> {\n    if (request.method === 'GET') {\n      let cacheName = String(request.urlWithParams);\n      return from(this.cacheStorageService.getFromCache(cacheName)).pipe(\n        mergeMap((cachedData: any) => {\n          if (cachedData && environment.cache.enable) {\n            return of(new HttpResponse({ body: cachedData }));\n          } else {\n            return next.handle(request).pipe(\n              tap((event) => {\n                if (event instanceof HttpResponse && environment.cache.enable) {\n                  this.cacheStorageService.addToCache(cacheName, event.body);\n                }\n              })\n            );\n          }\n        })\n      );\n    }\n    if((request.method === 'POST' || request.method === 'PUT') && environment.cache.clearOnPost){\n      this.cacheStorageService.clearCache();\n    }\n    let headers = this.getHeader();\n    this.startLoader();\n    const modifiedRequest = request.clone({ headers });\n    return next.handle(modifiedRequest).pipe(\n      finalize(() => {\n        this.stopLoader();\n      })\n    );\n  }\n\n  private getHeader(){\n    return new HttpHeaders({\n      authorization: 'tokenDfkTgVf87gT63Hg',\n      lang: this.lang,\n    });\n  }\n\n  private startLoader(){\n    this.loaderService.show();\n    this.ongoingRequestsCount.next(this.ongoingRequestsCount.value + 1);\n  }\n\n  private stopLoader(){\n    this.ongoingRequestsCount.next(\n      Math.max(0, this.ongoingRequestsCount.value - 1)\n    );\n    if (this.ongoingRequestsCount.value === 0) {\n      this.debounceHide();\n    }\n  }\n\n  private debounceHide = (() => {\n    let timeoutId: any;    \n    return () => {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => {\n        if (this.ongoingRequestsCount.value === 0) {\n          this.loaderService.hide();\n        }\n      }, 1000);\n    };\n  })();\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/String.html":{"url":"interfaces/String.html","title":"interface - String","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  String\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/prototypeExtension.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        capitalizeFirstLetter\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        capitalizeFirstLetter\n                        \n                    \n                \n            \n            \n                \ncapitalizeFirstLetter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export {};\ndeclare global {\n  interface String {\n    capitalizeFirstLetter(): string;\n  }\n  interface Array {\n    groupBy(callback: (item: T) => string): Record;\n    groupByKey(key: string): Record;\n    distinct(): T[];\n    distinctByKey(key: string): T[];\n    sortBy(callback: (item: T) => any): T[];\n    sortByKey(key: string): T[];\n    sum(callback: (item: T) => number): number;\n    sumByKey(key: string): number;\n    chunk(size: number): T[][];\n    unique(): T[];\n    uniqueBy(key: string): T[];\n    remove(item: T): T[];\n    removeByKeyValue(key: string, value: any): T[];\n    findIndexByKeyValue(key: string, value: any): number;\n    findByKeyValue(key: string, value: any): T | undefined;\n    findValueByKeyValue(\n      key: string,\n      value: any,\n      retrieveKey: string,\n    ): any | undefined;\n  }\n}\n\nString.prototype.capitalizeFirstLetter = function () {\n  return this.charAt(0).toUpperCase() + this.slice(1);\n};\n\nArray.prototype.groupBy = function (\n  callback: (item: T) => string,\n): Record {\n  return this.reduce((acc, item) => {\n    const key = callback(item);\n    acc[key] = acc[key] || [];\n    acc[key].push(item);\n    return acc;\n  }, {});\n};\nArray.prototype.groupByKey = function (\n  keyName: string,\n): Record {\n  return this.reduce((acc, item) => {\n    const key = item[keyName];\n    acc[key] = acc[key] || [];\n    acc[key].push(item);\n    return acc;\n  }, {});\n};\nArray.prototype.distinct = function (): T[] {\n  return [...new Set(this)];\n};\nArray.prototype.distinctByKey = function (key: string): T[] {\n  const uniqueKeys = new Set();\n  return this.filter((item) => {\n    const itemKey = (item as any)[key];\n    if (!uniqueKeys.has(itemKey)) {\n      uniqueKeys.add(itemKey);\n      return true;\n    }\n    return false;\n  });\n};\nArray.prototype.sortBy = function (callback: (item: T) => any): T[] {\n  return [...this].sort((a, b) => {\n    const keyA = callback(a);\n    const keyB = callback(b);\n    return keyA  keyB ? 1 : 0;\n  });\n};\nArray.prototype.sortByKey = function (key: string): T[] {\n  return [...this].sort((a, b) => {\n    const keyA = a[key];\n    const keyB = b[key];\n    return keyA  keyB ? 1 : 0;\n  });\n};\nArray.prototype.sum = function (callback: (item: T) => number): number {\n  return this.reduce((acc, item) => acc + callback(item), 0);\n};\nArray.prototype.sumByKey = function (key: string): number {\n  return this.reduce((acc, item) => acc + item[key], 0);\n};\nArray.prototype.chunk = function (size: number): T[][] {\n  return Array.from({ length: Math.ceil(this.length / size) }, (__, index) =>\n    this.slice(index * size, index * size + size),\n  );\n};\nArray.prototype.unique = function (): T[] {\n  return Array.from(new Set(this));\n};\nArray.prototype.uniqueBy = function (key: string): T[] {\n  const uniqueKeys = new Set();\n  return this.filter((item) => {\n    const itemKey = (item as any)[key];\n    if (!uniqueKeys.has(itemKey)) {\n      uniqueKeys.add(itemKey);\n      return true;\n    }\n    return false;\n  });\n};\nArray.prototype.remove = function (item: T): T[] {\n  return this.filter((i) => i !== item);\n};\nArray.prototype.removeByKeyValue = function (key: string, value: any): T[] {\n  return this.filter((item) => (item as any)[key] !== value);\n};\nArray.prototype.findIndexByKeyValue = function (\n  key: string,\n  value: any,\n): number {\n  for (let i = 0; i (\n  key: string,\n  value: any,\n): T | undefined {\n  return this.find((item) => (item as any)[key] === value);\n};\nArray.prototype.findValueByKeyValue = function (\n  key: string,\n  value: any,\n  retrieveKey: string,\n): any | undefined {\n  const foundItem = this.find((item) => (item as any)[key] === value);\n  if (foundItem) {\n    return (foundItem as any)[retrieveKey];\n  }\n  return undefined;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/UpperCasePipe.html":{"url":"pipes/UpperCasePipe.html","title":"pipe - UpperCasePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  UpperCasePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/upper-case.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        upperCase\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string, ...args: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pipes/upper-case.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'upperCase'\n})\nexport class UpperCasePipe implements PipeTransform {\n\n  transform(value: string, ...args: any[]): any {\n    return value.toUpperCase();;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    id: number;\n    name: string;\n    email?: string;\n    phone?: string;\n    password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/configs/config.services.ts\n            \n            injectable\n            ConfigService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/configs/config.settings.ts\n            \n            injectable\n            ConfigSettings\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/configs/helper.ts\n            \n            function\n            getValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/directives/change-bg-color-on-click.directive.ts\n            \n            directive\n            ChangeBgColorOnClickDirective\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interceptors/my-http.interceptor.ts\n            \n            interceptor\n            MyHttpInterceptorInterceptor\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/interfaces/user.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/layouts/default-layout/default-layout.component.ts\n            \n            component\n            DefaultLayoutComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layouts/main-layout/main-layout.component.ts\n            \n            component\n            MainLayoutComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/pipes/upper-case.pipe.ts\n            \n            pipe\n            UpperCasePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/prototypeExtension.ts\n            \n            interface\n            Array\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/prototypeExtension.ts\n            \n            interface\n            String\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            injectable\n            ApiServiceService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/cache-storage.service.ts\n            \n            injectable\n            CacheStorageService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/loader.service.ts\n            \n            injectable\n            LoaderService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.0.8\n        \n            @angular/common : ^17.0.8\n        \n            @angular/compiler : ^17.0.8\n        \n            @angular/core : ^17.0.8\n        \n            @angular/forms : ^17.0.8\n        \n            @angular/platform-browser : ^17.0.8\n        \n            @angular/platform-browser-dynamic : ^17.0.8\n        \n            @angular/router : ^17.0.8\n        \n            @angular/service-worker : ^17.0.8\n        \n            @compodoc/compodoc : ^1.1.23\n        \n            primeng : ^17.4.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getValue   (src/.../helper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/configs/helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue(obj: any, keys)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                keys\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngularBoilerplateV16\nThis project was generated with Angular CLI version 16.2.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangeBgColorOnClickDirective\n\nChangeBgColorOnClickDirective\n\nAppModule -->\n\nChangeBgColorOnClickDirective->AppModule\n\n\n\n\n\nDefaultLayoutComponent\n\nDefaultLayoutComponent\n\nAppModule -->\n\nDefaultLayoutComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nMainLayoutComponent\n\nMainLayoutComponent\n\nAppModule -->\n\nMainLayoutComponent->AppModule\n\n\n\n\n\nUpperCasePipe\n\nUpperCasePipe\n\nAppModule -->\n\nUpperCasePipe->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMyHttpInterceptorInterceptor\n\nMyHttpInterceptorInterceptor\n\nAppModule -->\n\nMyHttpInterceptorInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n        \n            Author : Abhishek Vishwakarma\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  return true;\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  apiUrl: 'https://cat-fact.herokuapp.com/',\n  cache:{\n    enable:true,\n    clearOnPost:true,\n    timeOut:3600000, //milliseconds\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  apiUrl: 'https://cat-fact.herokuapp.com/',\n  cache:{\n    enable:true,\n    clearOnPost:true,\n    timeOut:3600000, //milliseconds\n  }\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
