var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ApiServiceService.html",[0,0.938,1,1.993]],["body/injectables/ApiServiceService.html",[0,1.519,1,3.227,2,2.107,3,0.493,4,0.432,5,0.432,6,3.395,7,0.771,8,1.519,9,4.576,10,1.337,11,4.084,12,3.286,13,1.27,14,5.064,15,1.121,16,0.035,17,0.625,18,0.956,19,1.025,20,5.064,21,1.025,22,0.85,23,0.935,24,0.938,25,0.625,26,4.084,27,4.084,28,2.941,29,2.332,30,2.107,31,0.493,32,0.696,33,2.941,34,0.027,35,0.027]],["title/components/AppComponent.html",[36,0.59,37,1.024]],["body/components/AppComponent.html",[3,0.338,4,0.296,5,0.296,7,0.528,8,1.182,10,1.291,13,1.243,15,0.768,16,0.034,17,0.758,18,0.861,19,0.702,21,0.702,22,0.95,23,0.902,24,0.672,25,0.428,30,2.033,31,0.338,32,0.477,34,0.021,35,0.021,36,0.861,37,1.622,38,1.684,39,1.311,40,2.015,41,1.311,42,1.311,43,2.326,44,1.847,45,4.563,46,1,47,2.312,48,2.428,49,2.839,50,4.563,51,1.847,52,3.941,53,3.941,54,3.793,55,1.082,56,4.953,57,2.326,58,2.555,59,4.563,60,4.953,61,3.941,62,2.798,63,0.702,64,1.291,65,1.783,66,1.684,67,3.277,68,3.941,69,3.941,70,2.798,71,2.015,72,2.798,73,1.409,74,2.326,75,2.326,76,1.783,77,2.798,78,2.015,79,2.798,80,2.798,81,2.798,82,2.798,83,2.798,84,2.798,85,2.798,86,1.783,87,2.798,88,2.798,89,2.798,90,2.798,91,2.798,92,2.015,93,2.798,94,2.798,95,2.798,96,2.798,97,2.798,98,2.798,99,2.798,100,2.798,101,2.798,102,2.798,103,2.326,104,2.798,105,2.798,106,2.798,107,1.093,108,1.847,109,1.847,110,0.839,111,2.321,112,1.311,113,1.311,114,0.839,115,1.311,116,1,117,1.311,118,0.839,119,1.311,120,0.839,121,1.311,122,0.916,123,1.311,124,0.839,125,1.196,126,1.311,127,1,128,0.839,129,1.311,130,0.839,131,1.196,132,1.311]],["title/modules/AppModule.html",[133,1.993,134,1.993]],["body/modules/AppModule.html",[3,0.304,4,0.267,5,0.267,16,0.035,24,1.041,25,0.386,31,0.304,32,0.429,34,0.02,35,0.02,37,1.919,48,1.076,66,1.076,86,1.605,107,0.984,114,1.568,118,1.568,120,1.568,122,1.712,124,1.568,128,1.568,130,1.568,133,1.605,134,4.002,135,1.438,136,1.605,137,3.577,138,3.577,139,3.577,140,1.814,141,2.094,142,2.094,143,2.094,144,2.094,145,2.094,146,2.986,147,2.986,148,2.986,149,3.039,150,2.094,151,1.814,152,2.519,153,2.633,154,3.039,155,3.656,156,3.656,157,3.039,158,2.519,159,2.519,160,2.519,161,2.094,162,2.094,163,2.519,164,1.814,165,1.814,166,2.519,167,3.656,168,3.656,169,1.814,170,2.519,171,2.519,172,2.094,173,2.094,174,2.519,175,2.519,176,2.519,177,3.656,178,2.094,179,3.656,180,2.519,181,2.519,182,2.094,183,1.605,184,3.039,185,2.094,186,1.605,187,2.519,188,2.519,189,2.519,190,2.519,191,2.519,192,2.519,193,2.519,194,2.519,195,2.094,196,2.519,197,2.094,198,2.519,199,2.519,200,2.519,201,2.094,202,2.519,203,2.519,204,2.519,205,2.519,206,2.519]],["title/modules/AppRoutingModule.html",[133,1.993,147,1.785]],["body/modules/AppRoutingModule.html",[3,0.447,4,0.392,5,0.392,16,0.035,24,1.019,25,0.567,31,0.447,32,0.631,34,0.026,35,0.026,36,0.699,114,1.11,116,1.701,118,1.11,120,1.11,124,1.11,125,1.582,135,2.114,140,2.666,147,2.718,153,2.666,154,3.957,172,3.078,173,3.078,182,3.078,183,2.359,184,3.957,185,3.078,186,2.359,207,3.702,208,3.702,209,4.76,210,3.352,211,2.666,212,3.702,213,1.582,214,5.879,215,3.702,216,4.76,217,4.76,218,3.702,219,3.702,220,3.702,221,3.702]],["title/interfaces/Array.html",[222,1.465,223,1.993]],["body/interfaces/Array.html",[3,0.168,4,0.148,5,0.148,7,0.557,13,1.352,15,1.44,16,0.035,17,0.803,18,0.991,19,1.316,21,1.539,23,1.272,31,0.168,34,0.012,35,0.012,55,0.633,63,1.352,64,0.966,66,0.985,213,2.119,222,1.081,223,1.47,224,0.889,225,1.004,226,2.306,227,2.848,228,2.306,229,2.306,230,2.306,231,2.451,232,2.306,233,2.306,234,2.306,235,2.306,236,2.306,237,2.306,238,2.306,239,2.306,240,2.848,241,2.306,242,1.917,243,3.833,244,1.394,245,3.399,246,1.394,247,5.082,248,1.917,249,1.394,250,4.036,251,1.917,252,1.394,253,3.117,254,1.917,255,1.394,256,1.394,257,2.848,258,1.394,259,1.917,260,4.694,261,1.394,262,3.399,263,3.542,264,3.399,265,1.917,266,1.394,267,1.917,268,1.394,269,1.917,270,1.394,271,1.917,272,1.394,273,1.917,274,1.394,275,1.917,276,1.394,277,1.917,278,1.394,279,1.394,280,1.917,281,1.394,282,1.159,283,1.159,284,1.159,285,1.159,286,2.26,287,1.159,288,1.159,289,1.159,290,2.848,291,1.917,292,2.848,293,1.917,294,2.848,295,1.159,296,1.159,297,1.159,298,1.159,299,1.26,300,1.917,301,1.159,302,1.917,303,1.917,304,2.451,305,1.917,306,3.155,307,1.917,308,1.917,309,1.317,310,1.159,311,1.917,312,1.917,313,2.848,314,1.159,315,2.848,316,1.159,317,1.317,318,1.958,319,1.159,320,1.159,321,1.159,322,1.159,323,1.159,324,1.159,325,1.159,326,1.159,327,1.159,328,1.159,329,1.159,330,1.159,331,1.159,332,1.159,333,1.159,334,1.159,335,1.159,336,1.159,337,1.159,338,1.917,339,1.159,340,2.451,341,1.159]],["title/injectables/CacheStorageService.html",[0,0.938,342,1.993]],["body/injectables/CacheStorageService.html",[0,1.128,2,1.351,3,0.316,4,0.277,5,0.277,7,0.494,8,1.128,10,1.44,13,1.401,15,1.032,16,0.035,17,0.575,18,0.83,19,0.943,21,1.37,22,0.783,23,0.86,24,0.641,25,0.401,29,1.495,30,1.351,31,0.316,32,0.446,34,0.02,35,0.02,55,1.032,63,1.277,64,0.857,73,2.11,78,3.666,213,2.43,250,2.708,286,1.468,299,1.879,342,2.396,343,4.728,344,2.177,345,5.299,346,4.399,347,4.399,348,4.252,349,3.76,350,4.807,351,4.807,352,3.76,353,4.807,354,3.76,355,3.76,356,2.619,357,2.619,358,2.619,359,3.76,360,2.619,361,2.177,362,2.619,363,3.76,364,3.996,365,2.619,366,3.76,367,3.76,368,1.495,369,1.886,370,2.619,371,4.538,372,3.76,373,3.996,374,2.619,375,2.619,376,2.619,377,2.619,378,2.619,379,2.177,380,3.76,381,4.399,382,3.76,383,2.619,384,2.619,385,3.76,386,2.619,387,3.76,388,2.619,389,2.619,390,2.619,391,2.619]],["title/directives/ChangeBgColorOnClickDirective.html",[110,0.938,128,0.938]],["body/directives/ChangeBgColorOnClickDirective.html",[3,0.38,4,0.333,5,0.333,7,0.594,10,1.031,13,1.442,15,1.174,16,0.034,17,0.654,18,0.917,19,1.073,21,1.307,22,0.655,23,0.72,24,0.537,25,0.482,31,0.38,32,0.537,33,2.267,34,0.023,35,0.023,46,1.125,47,1.67,55,1.174,63,1.218,64,1.59,73,1.862,110,1.282,127,1.125,128,1.282,164,4.211,165,4.317,392,4.86,393,2.617,394,5.446,395,4.275,396,5.209,397,5.209,398,3.554,399,4.275,400,4.275,401,4.275,402,3.148,403,4.33,404,4.855,405,5.209,406,4.275,407,4.275,408,4.275,409,4.275,410,4.275,411,3.148,412,4.275,413,4.275,414,4.275,415,3.148,416,3.554,417,3.148,418,3.148,419,3.148,420,3.148,421,3.148]],["title/injectables/ConfigService.html",[0,0.938,12,1.785]],["body/injectables/ConfigService.html",[0,0.677,2,0.701,3,0.164,4,0.144,5,0.144,7,0.257,8,0.677,9,2.407,10,0.739,12,1.289,13,1.387,15,1.43,16,0.035,17,0.798,18,1.044,19,1.307,21,1.555,22,0.603,23,0.663,24,0.729,25,0.208,28,0.979,29,0.776,30,0.701,31,0.164,32,0.232,34,0.012,35,0.012,55,0.62,63,1.307,64,0.445,73,1.915,92,0.979,169,0.979,213,0.581,263,0.866,286,2.035,299,1.237,318,0.701,348,3.808,361,3.111,368,0.776,369,0.979,373,2.407,422,1.13,423,2.896,424,4.037,425,2.736,426,2.896,427,2.257,428,2.257,429,2.257,430,2.257,431,2.803,432,2.257,433,2.257,434,2.257,435,2.257,436,2.257,437,2.257,438,2.896,439,2.257,440,2.257,441,1.359,442,3.372,443,1.359,444,2.257,445,2.257,446,5.731,447,4.671,448,1.359,449,5.027,450,3.723,451,2.257,452,3.984,453,1.359,454,3.542,455,2.257,456,1.359,457,1.359,458,2.257,459,1.359,460,1.359,461,2.257,462,1.359,463,2.257,464,3.372,465,1.359,466,3.111,467,2.257,468,5.419,469,5.356,470,1.359,471,2.257,472,1.359,473,2.257,474,1.359,475,2.257,476,1.359,477,1.359,478,1.359,479,2.257,480,1.359,481,2.257,482,1.359,483,2.257,484,1.359,485,1.359,486,1.359,487,1.877,488,2.407,489,2.257,490,2.257,491,1.359,492,1.13,493,2.257,494,0.866,495,1.359,496,1.359,497,0.979,498,1.359,499,2.896,500,1.359,501,1.359,502,1.359,503,1.359,504,1.359,505,1.359,506,1.359,507,1.359,508,1.359,509,2.257,510,1.13,511,1.359,512,1.359,513,1.13,514,1.359,515,1.359,516,1.359,517,1.359,518,1.359,519,1.13,520,3.372,521,1.359,522,2.896,523,3.372,524,3.372,525,1.359,526,1.359,527,0.979,528,1.359,529,1.359,530,1.13,531,2.257,532,2.257,533,1.359,534,1.13,535,1.359,536,1.359,537,1.359,538,1.359,539,1.359,540,1.13,541,2.257,542,1.359,543,3.372,544,1.359,545,1.359,546,1.359,547,1.359,548,1.359,549,1.359,550,2.257,551,1.359,552,1.359,553,1.13,554,1.13,555,1.359,556,1.359,557,1.359,558,1.359,559,0.979]],["title/injectables/ConfigSettings.html",[0,0.938,425,1.785]],["body/injectables/ConfigSettings.html",[0,1.325,2,1.705,3,0.399,4,0.35,5,0.35,7,0.624,8,1.325,10,1.63,13,1.43,15,0.907,16,0.035,17,0.506,18,0.94,19,0.829,21,1.517,22,0.688,23,0.756,24,0.563,25,0.506,29,1.887,30,1.705,31,0.399,32,0.563,34,0.024,35,0.024,55,1.213,63,1.249,64,1.082,73,2.037,213,1.888,286,1.726,379,4.138,425,2.523,431,4.417,450,2.748,527,4.104,559,3.182,560,2.748,561,4.977,562,4.977,563,5.313,564,4.419,565,4.419,566,3.305,567,3.305,568,4.419,569,3.305,570,3.305,571,4.419,572,4.419,573,3.305,574,5.698,575,3.305]],["title/components/DefaultLayoutComponent.html",[36,0.59,114,0.938]],["body/components/DefaultLayoutComponent.html",[3,0.435,4,0.381,5,0.381,16,0.033,17,0.794,22,1.267,24,0.613,25,0.551,31,0.435,32,0.613,34,0.025,35,0.025,36,0.98,37,1.178,38,1.996,39,1.685,41,1.685,42,1.685,46,1.286,47,2.415,48,2.572,51,2.189,107,1.405,108,2.189,109,2.189,110,1.079,111,2.574,112,1.685,113,1.685,114,1.647,115,1.685,116,1.286,117,1.685,118,1.079,119,1.685,120,1.079,121,1.685,122,1.178,123,1.685,124,1.079,125,1.537,126,2.431,127,1.286,128,1.079,129,1.685,130,1.079,131,1.537,132,1.685,186,2.292,576,2.99,577,2.59,578,3.884,579,2.977,580,3.884,581,3.365,582,3.884]],["title/components/DocumentationComponent.html",[36,0.59,116,1.118]],["body/components/DocumentationComponent.html",[3,0.345,4,0.302,5,0.302,7,0.539,8,1.199,10,0.935,13,1.254,15,1.097,16,0.034,17,0.805,18,0.871,19,1.003,21,1.32,22,0.833,23,0.654,24,0.681,25,0.437,31,0.345,32,0.487,33,2.057,34,0.021,35,0.021,36,0.871,37,0.935,38,1.708,39,1.338,41,1.338,42,1.338,44,1.873,46,1.021,47,2.321,48,2.44,51,1.873,55,1.097,63,1.003,64,1.636,66,1.708,73,1.649,107,1.115,108,2.465,109,1.873,110,0.857,111,2.342,112,1.338,113,1.338,114,0.857,115,1.338,116,1.786,117,1.338,118,0.857,119,1.338,120,0.857,121,1.338,122,0.935,123,1.338,124,0.857,125,1.22,126,1.338,127,1.021,128,0.857,129,1.338,130,0.857,131,1.22,132,1.338,153,2.057,211,2.057,213,1.708,579,2.548,583,2.374,584,3.322,585,3.324,586,3.998,587,3.998,588,3.998,589,4.613,590,3.998,591,3.599,592,2.856,593,4.997,594,3.998,595,3.324,596,3.998,597,2.856,598,2.856,599,2.856,600,2.856,601,2.856,602,2.856,603,2.856,604,3.324,605,2.856,606,2.856,607,2.856,608,2.856,609,2.856,610,2.856,611,2.856,612,2.856,613,2.856]],["title/components/ErrorComponent.html",[36,0.59,118,0.938]],["body/components/ErrorComponent.html",[3,0.441,4,0.387,5,0.387,16,0.033,17,0.8,22,0.761,24,0.623,25,0.559,31,0.441,32,0.623,34,0.025,35,0.025,36,0.987,37,1.196,38,2.016,39,1.712,40,2.631,41,1.712,42,1.712,46,1.306,47,2.421,48,2.581,49,3.399,51,2.211,107,1.427,108,2.211,109,2.211,110,1.096,111,2.589,112,1.712,113,1.712,114,1.096,115,1.712,116,1.306,117,1.712,118,1.657,119,1.712,120,1.096,121,1.712,122,1.196,123,1.712,124,1.096,125,1.561,126,1.712,127,1.306,128,1.096,129,1.712,130,1.096,131,1.561,132,1.712,466,4.87,513,3.923,614,3.037,615,5.228,616,4.719]],["title/components/HomeComponent.html",[36,0.59,120,0.938]],["body/components/HomeComponent.html",[1,3.248,3,0.256,4,0.224,5,0.224,7,0.399,8,0.963,10,1.051,12,2.801,13,1.279,15,0.581,16,0.035,17,0.892,18,0.88,19,0.531,21,0.806,22,0.902,23,0.888,24,0.662,25,0.324,31,0.256,32,0.361,34,0.017,35,0.017,36,0.733,37,0.693,38,1.372,39,0.991,40,1.524,41,0.991,42,0.991,44,1.505,46,0.756,47,2.177,48,2.244,49,2.313,51,1.505,54,3.227,55,0.881,63,0.806,64,1.051,65,1.348,66,1.372,73,1.148,76,1.348,78,2.313,107,0.826,108,1.505,109,1.505,110,0.634,111,2.031,112,0.991,113,0.991,114,0.634,115,0.991,116,0.756,117,0.991,118,0.634,119,0.991,120,1.3,121,0.991,122,0.693,123,0.991,124,0.634,125,0.904,126,0.991,127,0.756,128,0.634,129,0.991,130,0.634,131,0.904,132,0.991,197,3.603,309,1.208,317,1.834,318,1.091,348,2.796,371,1.759,553,2.67,581,3.121,584,2.796,591,3.121,617,1.759,618,3.881,619,3.211,620,4.659,621,3.881,622,3.211,623,4.334,624,2.115,625,3.211,626,2.115,627,2.115,628,2.115,629,4.633,630,3.211,631,5.574,632,3.211,633,2.67,634,3.211,635,2.67,636,5.097,637,3.211,638,5.252,639,3.227,640,2.115,641,2.115,642,2.115,643,2.115,644,2.115,645,2.115,646,2.115,647,2.115,648,3.881,649,2.115,650,2.115,651,2.115,652,2.115,653,2.115,654,2.115,655,2.115,656,2.115,657,2.115,658,2.115,659,2.115,660,2.115,661,2.115,662,2.115,663,2.115,664,2.115,665,2.115,666,2.115,667,2.115,668,3.211,669,3.211,670,3.211,671,3.211]],["title/components/LoaderComponent.html",[36,0.59,122,1.024]],["body/components/LoaderComponent.html",[3,0.452,4,0.396,5,0.396,16,0.034,17,0.809,22,0.779,24,0.638,25,0.573,31,0.452,32,0.638,34,0.026,35,0.026,36,0.998,37,1.225,38,2.048,39,1.754,41,1.754,42,1.754,46,1.338,47,2.43,48,2.519,51,2.246,107,1.461,108,2.246,109,2.246,110,1.122,111,2.612,112,1.754,113,1.754,114,1.122,115,1.754,116,1.338,117,1.754,118,1.122,119,1.754,120,1.122,121,1.754,122,1.825,123,1.754,124,1.122,125,1.599,126,1.754,127,1.338,128,1.122,129,1.754,130,1.122,131,1.599,132,1.754,579,3.054,672,3.111,673,3.984,674,4.793,675,4.793]],["title/injectables/LoaderService.html",[0,0.938,58,1.613]],["body/injectables/LoaderService.html",[0,1.38,2,1.813,3,0.425,4,0.372,5,0.372,7,0.664,8,1.38,10,1.68,13,1.455,16,0.035,18,0.869,22,0.958,23,1.053,24,0.784,25,0.538,29,2.007,30,1.813,31,0.425,32,0.599,34,0.025,35,0.025,55,1.263,58,2.374,63,1.287,64,1.782,65,2.24,66,1.502,73,1.834,286,1.373,299,1.966,309,2.93,454,3.695,494,2.24,673,3.826,676,2.922,677,5.131,678,5.444,679,5.444,680,5.444,681,4.602,682,3.515,683,3.515,684,3.515,685,4.265,686,4.602,687,3.515,688,3.515,689,4.602,690,3.515,691,3.515,692,3.515]],["title/components/MainLayoutComponent.html",[36,0.59,124,0.938]],["body/components/MainLayoutComponent.html",[3,0.435,4,0.381,5,0.381,16,0.033,17,0.794,22,0.749,24,0.613,25,0.551,31,0.435,32,0.613,34,0.025,35,0.025,36,0.98,37,1.178,38,1.996,39,1.685,41,1.685,42,1.685,46,1.286,47,2.415,48,2.572,51,2.189,107,1.405,108,2.189,109,2.189,110,1.079,111,2.574,112,1.685,113,1.685,114,1.079,115,1.685,116,1.286,117,1.685,118,1.079,119,1.685,120,1.079,121,1.685,122,1.178,123,1.685,124,1.647,125,2.6,126,2.431,127,1.286,128,1.079,129,1.685,130,1.079,131,1.537,132,1.685,183,2.292,577,2.59,578,3.884,579,2.977,580,3.884,581,3.365,582,3.884,693,2.99]],["title/interceptors/MyHttpInterceptorInterceptor.html",[148,1.785,694,2.599]],["body/interceptors/MyHttpInterceptorInterceptor.html",[0,0.977,3,0.26,4,0.228,5,0.228,7,0.407,8,0.977,10,1.066,13,1.325,15,0.894,16,0.035,17,0.498,18,0.741,19,0.817,22,0.817,23,0.898,24,0.9,25,0.33,28,1.552,31,0.26,32,0.367,34,0.017,35,0.017,44,1.01,55,0.894,58,2.646,63,1.098,64,1.066,71,1.552,73,2.134,76,2.075,148,1.859,169,1.552,213,0.921,286,2.063,299,1.677,317,1.859,318,2.025,342,3.269,368,1.23,369,1.552,425,2.821,454,2.827,487,2.707,488,2.707,492,3.263,494,1.373,510,1.791,519,1.791,527,3.151,530,1.791,534,1.791,540,3.263,559,2.345,685,1.791,695,2.155,696,4.494,697,1.791,698,3.925,699,3.925,700,4.375,701,3.925,702,4.375,703,4.375,704,2.155,705,3.256,706,2.155,707,2.155,708,4.375,709,4.375,710,2.155,711,3.256,712,2.155,713,2.155,714,4.375,715,3.256,716,4.375,717,3.256,718,3.256,719,2.155,720,2.155,721,3.256,722,2.155,723,3.256,724,3.256,725,2.155,726,2.155,727,2.155,728,2.155,729,2.155,730,3.256,731,2.155,732,3.256,733,2.155,734,2.155,735,2.155,736,2.155,737,2.155,738,3.256,739,2.155,740,2.155,741,2.155,742,2.155,743,2.155,744,2.155,745,2.155,746,2.155,747,2.155,748,2.155,749,2.155,750,2.155,751,2.155,752,2.155,753,2.155,754,2.155,755,2.155,756,2.155,757,2.155,758,2.155,759,2.155,760,2.155,761,2.155]],["title/directives/PulseEffectDirective.html",[110,0.938,130,0.938]],["body/directives/PulseEffectDirective.html",[3,0.364,4,0.319,5,0.319,7,0.568,10,1.358,13,1.345,15,1.302,16,0.035,17,0.726,18,0.965,19,1.19,22,0.627,23,0.689,24,0.707,25,0.461,31,0.364,32,0.513,34,0.022,35,0.022,44,1.943,46,1.076,47,1.62,55,1.138,57,2.503,58,2.637,63,1.19,64,1.815,65,3.417,71,2.169,73,1.917,74,2.503,75,2.503,76,1.919,110,1.244,127,1.076,130,1.244,131,2.184,309,2.368,398,3.448,403,4.721,416,2.503,584,3.417,591,3.682,762,4.608,763,2.503,764,4.148,765,4.148,766,4.148,767,4.148,768,5.113,769,3.011,770,3.011,771,3.011,772,4.148,773,3.011,774,4.745,775,3.011,776,4.148,777,4.148,778,3.011,779,3.011,780,3.011,781,3.011,782,4.148,783,3.011,784,4.148,785,4.148,786,3.011,787,4.148,788,3.011,789,3.011,790,3.011]],["title/interfaces/String.html",[21,0.785,222,1.465]],["body/interfaces/String.html",[3,0.227,4,0.199,5,0.199,7,0.68,13,0.471,16,0.035,21,1.522,23,1.238,31,0.227,34,0.016,35,0.016,55,0.804,63,0.471,66,1.252,213,2.311,222,1.373,223,1.197,224,1.197,225,1.352,227,1.561,231,1.561,240,1.561,242,1.561,243,3.824,245,3.669,247,5.077,248,1.561,250,3.896,251,1.561,253,3.179,254,1.561,257,2.436,259,1.561,260,4.817,262,2.995,263,3.662,264,3.383,265,1.561,267,1.561,269,1.561,271,1.561,273,1.561,275,1.561,277,1.561,280,1.561,282,1.561,283,1.561,284,3.383,285,1.561,286,2.361,287,1.561,288,1.561,289,1.561,290,3.383,291,2.436,292,3.383,293,2.436,294,3.383,295,1.561,296,1.561,297,1.561,298,1.561,299,1.539,300,2.436,301,1.561,302,2.436,303,2.436,304,2.995,305,2.436,306,3.669,307,2.436,308,2.436,309,1.673,310,1.561,311,2.436,312,2.436,313,3.383,314,1.561,315,3.383,316,1.561,317,1.673,318,2.277,319,1.561,320,1.561,321,1.561,322,1.561,323,1.561,324,1.561,325,1.561,326,1.561,327,1.561,328,1.561,329,1.561,330,1.561,331,1.561,332,1.561,333,1.561,334,1.561,335,1.561,336,1.561,337,1.561,338,2.436,339,1.561,340,2.995,341,1.561,791,1.878]],["title/pipes/UpperCasePipe.html",[146,1.785,792,1.993]],["body/pipes/UpperCasePipe.html",[3,0.51,4,0.447,5,0.447,13,1.059,15,1.158,16,0.034,17,0.855,18,0.797,19,1.059,21,1.401,23,0.966,24,0.719,25,0.646,31,0.51,32,0.719,34,0.028,35,0.028,44,1.978,46,1.509,55,1.158,63,1.059,146,2.951,286,1.648,792,3.293,793,4.221,794,4.296,795,3.509,796,5.168,797,4.221,798,5.168,799,5.585,800,4.221,801,5.168,802,4.221]],["title/interfaces/User.html",[222,1.465,803,2.252]],["body/interfaces/User.html",[3,0.491,4,0.43,5,0.43,7,0.767,8,1.513,16,0.033,17,0.879,18,1.115,19,1.51,21,1.587,31,0.491,34,0.027,35,0.027,222,1.902,224,2.587,243,3.954,629,4.774,803,3.634,804,3.375,805,5.742,806,5.742,807,5.742]],["title/coverage.html",[808,3.538]],["body/coverage.html",[0,1.641,1,2.034,5,0.338,6,2.653,12,1.822,16,0.034,18,0.602,21,0.801,34,0.023,35,0.023,36,1.089,37,1.045,43,2.653,58,1.646,110,1.294,114,0.957,116,1.141,118,0.957,120,0.957,122,1.045,124,0.957,128,0.957,130,0.957,146,1.822,148,1.822,164,2.298,165,2.298,183,2.034,186,2.034,222,2.291,223,2.034,225,3.108,263,2.034,299,1.363,318,3.282,342,2.034,343,2.653,344,2.653,368,2.464,392,2.653,393,2.653,422,2.653,425,1.822,497,2.298,560,2.653,576,2.653,577,3.108,583,2.653,585,2.653,614,2.653,617,2.653,672,2.653,676,2.653,693,2.653,694,2.653,696,2.653,697,2.653,762,2.653,763,2.653,792,2.034,794,2.653,795,2.653,803,2.298,804,2.653,808,2.653,809,3.191,810,3.191,811,4.315,812,5.944,813,3.191,814,4.315,815,2.653,816,4.315,817,4.315,818,2.653,819,4.89,820,2.653,821,4.315,822,3.191,823,3.191,824,3.191,825,2.653,826,2.653,827,3.191,828,3.191]],["title/dependencies.html",[136,2.395,829,1.885]],["body/dependencies.html",[16,0.035,25,0.656,34,0.028,35,0.028,86,3.324,136,2.731,157,4.336,161,3.563,162,3.563,178,3.563,211,3.087,494,2.731,830,4.286,831,6.276,832,4.286,833,4.286,834,4.286,835,4.286,836,4.286,837,4.286,838,4.286,839,4.286,840,4.286,841,4.286,842,4.286,843,4.286]],["title/miscellaneous/functions.html",[844,1.668,845,3.124]],["body/miscellaneous/functions.html",[7,0.883,15,1.283,16,0.033,17,0.716,18,0.883,19,1.173,34,0.03,35,0.03,63,1.173,253,3.368,447,4.568,497,3.958,815,3.887,844,2.98,845,3.887,846,4.676,847,4.676,848,4.676]],["title/index.html",[7,0.494,849,2.617,850,2.617]],["body/index.html",[4,0.388,16,0.025,17,0.561,34,0.025,35,0.025,36,0.988,44,1.716,67,4.351,92,2.638,103,3.045,151,2.638,195,3.045,201,3.045,299,1.565,554,3.93,604,3.045,829,2.638,851,3.663,852,4.727,853,3.663,854,5.234,855,3.045,856,3.663,857,3.663,858,5.725,859,5.965,860,3.663,861,3.663,862,3.663,863,3.663,864,3.663,865,3.663,866,3.663,867,3.663,868,5.234,869,5.234,870,3.663,871,5.531,872,3.663,873,3.663,874,3.663,875,3.663,876,4.727,877,4.727,878,5.531,879,3.663,880,4.727,881,4.727,882,3.663,883,5.863,884,3.663,885,3.663,886,3.663,887,4.727,888,3.663,889,3.663,890,3.663,891,3.663,892,3.663,893,5.234,894,3.663,895,3.663,896,2.638,897,3.663,898,3.663]],["title/modules.html",[135,2.43]],["body/modules.html",[16,0.03,34,0.03,35,0.03,86,3.084,134,3.084,135,2.763,147,2.763,899,4.839,900,4.839,901,5.606,902,4.839,903,4.839]],["title/overview.html",[896,3.066]],["body/overview.html",[2,1.875,16,0.034,34,0.025,35,0.025,37,1.95,38,1.553,107,1.419,114,1.564,118,1.564,120,1.564,122,1.707,124,1.564,127,1.299,128,1.564,130,1.564,133,2.316,134,4.109,135,2.075,136,2.316,137,3.021,138,3.021,139,3.021,140,2.618,141,3.021,142,3.021,143,3.021,144,3.021,145,3.021,146,2.977,147,2.977,148,2.977,149,3.91,150,3.021,151,2.618,210,2.316,224,2.316,317,2.075,633,3.91,635,3.021,639,3.021,792,2.316,896,2.618,904,3.634,905,3.634]],["title/properties.html",[8,1.127,829,1.885]],["body/properties.html",[8,1.461,16,0.033,34,0.03,35,0.03,855,4.051,906,4.873,907,4.873,908,4.873,909,4.873]],["title/routes.html",[210,2.712]],["body/routes.html",[16,0.031,34,0.031,35,0.031,210,3.184]],["title/miscellaneous/variables.html",[844,1.668,910,3.124]],["body/miscellaneous/variables.html",[7,0.773,16,0.035,18,1.041,22,1.148,23,1.261,34,0.027,35,0.027,66,1.75,286,1.6,364,4.217,368,3.289,452,4.217,595,3.405,818,3.405,820,4.217,825,3.405,826,3.405,844,2.61,910,3.405,911,4.096,912,4.096,913,4.096,914,4.096,915,4.096,916,5.073,917,5.073,918,5.073,919,5.073,920,5.073,921,5.073,922,5.073]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MainLayoutComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":318,"title":{},"body":{"interfaces/Array.html":{},"injectables/ConfigService.html":{},"components/HomeComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"interfaces/String.html":{},"coverage.html":{}}}],["0.0.0",{"_index":906,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":812,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":822,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":823,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":813,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":811,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":817,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":814,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":816,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":821,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":317,"title":{},"body":{"interfaces/Array.html":{},"components/HomeComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"interfaces/String.html":{},"overview.html":{}}}],["1.1.23",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":389,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["1000",{"_index":718,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["16.2.4",{"_index":856,"title":{},"body":{"index.html":{}}}],["17.0.8",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["17.4.0",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":633,"title":{},"body":{"components/HomeComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":543,"title":{},"body":{"injectables/ConfigService.html":{}}}],["22",{"_index":638,"title":{},"body":{"components/HomeComponent.html":{}}}],["25",{"_index":632,"title":{},"body":{"components/HomeComponent.html":{}}}],["3",{"_index":635,"title":{},"body":{"components/HomeComponent.html":{},"overview.html":{}}}],["30",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{}}}],["3600000",{"_index":367,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["4",{"_index":637,"title":{},"body":{"components/HomeComponent.html":{}}}],["5",{"_index":639,"title":{},"body":{"components/HomeComponent.html":{},"overview.html":{}}}],["6",{"_index":905,"title":{},"body":{"overview.html":{}}}],["7",{"_index":904,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["__",{"_index":329,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["_lang",{"_index":561,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["a[key",{"_index":320,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["ab17",{"_index":363,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["abhishek",{"_index":908,"title":{},"body":{"properties.html":{}}}],["acc",{"_index":294,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["acc[key",{"_index":292,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["acc[key].push(item",{"_index":293,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["activatedroute",{"_index":593,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["actual_component",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["add",{"_index":889,"title":{},"body":{"index.html":{}}}],["addtocache",{"_index":349,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["addtocache(key",{"_index":355,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["afterviewinit",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["age",{"_index":631,"title":{},"body":{"components/HomeComponent.html":{}}}],["alice",{"_index":630,"title":{},"body":{"components/HomeComponent.html":{}}}],["allow",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["angular",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["angular/compiler",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":25,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MainLayoutComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{},"pipes/UpperCasePipe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":211,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DocumentationComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angularboilerplatev16",{"_index":851,"title":{},"body":{"index.html":{}}}],["any)[key",{"_index":306,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["any)[retrievekey",{"_index":341,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["api",{"_index":553,"title":{},"body":{"injectables/ConfigService.html":{},"components/HomeComponent.html":{}}}],["api_url",{"_index":423,"title":{},"body":{"injectables/ConfigService.html":{}}}],["apicallmethod",{"_index":457,"title":{},"body":{"injectables/ConfigService.html":{}}}],["apicallmethod().subscribe",{"_index":539,"title":{},"body":{"injectables/ConfigService.html":{}}}],["apiserviceservice",{"_index":1,"title":{"injectables/ApiServiceService.html":{}},"body":{"injectables/ApiServiceService.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["apiurl",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["app.component",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["appchangebgcoloronclick",{"_index":394,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["appchangebgcoloronclick]'},{'name",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["appcomponent",{"_index":37,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["application/json",{"_index":490,"title":{},"body":{"injectables/ConfigService.html":{}}}],["appmodule",{"_index":134,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":147,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":799,"title":{},"body":{"pipes/UpperCasePipe.html":{}}}],["array",{"_index":223,"title":{"interfaces/Array.html":{}},"body":{"interfaces/Array.html":{},"interfaces/String.html":{},"coverage.html":{}}}],["array.from",{"_index":326,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.from(new",{"_index":332,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.chunk",{"_index":325,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.distinct",{"_index":298,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.distinctbykey",{"_index":301,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.findindexbykeyvalue",{"_index":337,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.findvaluebykeyvalue",{"_index":339,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.groupby",{"_index":289,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.groupbykey",{"_index":295,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.remove",{"_index":334,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.removebykeyvalue",{"_index":336,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.sortby",{"_index":310,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.sortbykey",{"_index":319,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.sum",{"_index":322,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.sumbykey",{"_index":323,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.unique",{"_index":331,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["array.prototype.uniqueby",{"_index":333,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["artifacts",{"_index":872,"title":{},"body":{"index.html":{}}}],["assets/html",{"_index":607,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["assuming",{"_index":603,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["async",{"_index":348,"title":{},"body":{"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{},"components/HomeComponent.html":{}}}],["attackers",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["authguard",{"_index":820,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":907,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":755,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["automatically",{"_index":864,"title":{},"body":{"index.html":{}}}],["available",{"_index":903,"title":{},"body":{"modules.html":{}}}],["await",{"_index":371,"title":{},"body":{"injectables/CacheStorageService.html":{},"components/HomeComponent.html":{}}}],["b",{"_index":312,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["b[key",{"_index":321,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["backend",{"_index":516,"title":{},"body":{"injectables/ConfigService.html":{}}}],["backgroundcolor",{"_index":421,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["baseroute",{"_index":9,"title":{},"body":{"injectables/ApiServiceService.html":{},"injectables/ConfigService.html":{}}}],["behaviorsubject",{"_index":685,"title":{},"body":{"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["behaviorsubject(0",{"_index":721,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["behaviorsubject(this.loader",{"_index":686,"title":{},"body":{"injectables/LoaderService.html":{}}}],["bg",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"coverage.html":{}}}],["bob",{"_index":634,"title":{},"body":{"components/HomeComponent.html":{}}}],["body",{"_index":519,"title":{},"body":{"injectables/ConfigService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["boilerplate",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["boolean",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"directives/PulseEffectDirective.html":{}}}],["bootstrap",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["browse",{"_index":901,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["bug",{"_index":660,"title":{},"body":{"components/HomeComponent.html":{}}}],["build",{"_index":871,"title":{},"body":{"index.html":{}}}],["cache",{"_index":364,"title":{},"body":{"injectables/CacheStorageService.html":{},"miscellaneous/variables.html":{}}}],["cache.match(key",{"_index":377,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["cache.put(key",{"_index":375,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["cache_key",{"_index":346,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["cache_timeout",{"_index":347,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["cacheddata",{"_index":738,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["cachename",{"_index":733,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["caches.delete(this.cache_key",{"_index":380,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["caches.open(this.cache_key",{"_index":372,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["cachestorageservice",{"_index":342,"title":{"injectables/CacheStorageService.html":{}},"body":{"injectables/CacheStorageService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"coverage.html":{}}}],["callback",{"_index":262,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["callback(a",{"_index":314,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["callback(b",{"_index":316,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["callback(item",{"_index":291,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["canactivatefn",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capabilities",{"_index":891,"title":{},"body":{"index.html":{}}}],["capitalizefirstletter",{"_index":284,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["case.pipe",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["case.pipe.ts",{"_index":795,"title":{},"body":{"pipes/UpperCasePipe.html":{},"coverage.html":{}}}],["case.pipe.ts:8",{"_index":800,"title":{},"body":{"pipes/UpperCasePipe.html":{}}}],["catcherror",{"_index":495,"title":{},"body":{"injectables/ConfigService.html":{}}}],["cdr",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["change",{"_index":866,"title":{},"body":{"index.html":{}}}],["changebgcoloronclickdirective",{"_index":128,"title":{"directives/ChangeBgColorOnClickDirective.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"coverage.html":{},"overview.html":{}}}],["changedetectorref",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["changes",{"_index":770,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["changes['isactive",{"_index":778,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["charlie",{"_index":636,"title":{},"body":{"components/HomeComponent.html":{}}}],["check",{"_index":895,"title":{},"body":{"index.html":{}}}],["checkcacheexpiration",{"_index":350,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["children",{"_index":216,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["choice",{"_index":886,"title":{},"body":{"index.html":{}}}],["chunk",{"_index":226,"title":{},"body":{"interfaces/Array.html":{}}}],["chunk(size",{"_index":242,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["class",{"_index":32,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MainLayoutComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{},"pipes/UpperCasePipe.html":{}}}],["clearcache",{"_index":351,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["clearonpost:true",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cleartimeout(timeoutid",{"_index":715,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["cli",{"_index":854,"title":{},"body":{"index.html":{}}}],["click.directive",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["click.directive.ts",{"_index":393,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{},"coverage.html":{}}}],["click.directive.ts:11",{"_index":408,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["click.directive.ts:15",{"_index":409,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["click.directive.ts:19",{"_index":411,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["click.directive.ts:7",{"_index":406,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["cluster_appmodule",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"index.html":{}}}],["color",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"coverage.html":{}}}],["color:red;font",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["comes",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["command",{"_index":887,"title":{},"body":{"index.html":{}}}],["complete",{"_index":555,"title":{},"body":{"injectables/ConfigService.html":{}}}],["completion",{"_index":557,"title":{},"body":{"injectables/ConfigService.html":{}}}],["compodoc/compodoc",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":36,"title":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"coverage.html":{},"index.html":{}}}],["component:defaultlayoutcomponent",{"_index":215,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:errorcomponent",{"_index":220,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:homecomponent",{"_index":217,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component:mainlayoutcomponent",{"_index":218,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component_template",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["components",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"overview.html":{}}}],["components/loader/loader.component",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["config.settings",{"_index":496,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configs/config.services",{"_index":26,"title":{},"body":{"injectables/ApiServiceService.html":{}}}],["configs/config.settings",{"_index":727,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["configservice",{"_index":12,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ApiServiceService.html":{},"injectables/ConfigService.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["configservices",{"_index":20,"title":{},"body":{"injectables/ApiServiceService.html":{}}}],["configsettings",{"_index":425,"title":{"injectables/ConfigSettings.html":{}},"body":{"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"coverage.html":{}}}],["connect",{"_index":552,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.error",{"_index":515,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.error('an",{"_index":512,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.error('failed",{"_index":551,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(\"%cstop",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(\"%cthis",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(this.people.chunk(2",{"_index":656,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.distinct",{"_index":650,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.distinctbykey('age",{"_index":651,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.findbykeyvalue('age",{"_index":663,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.findindexbykeyvalue('age",{"_index":662,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.groupby((item",{"_index":647,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.groupbykey('age",{"_index":649,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.remove",{"_index":659,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.removebykeyvalue('age",{"_index":661,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.sortbykey('age",{"_index":653,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.sortbykey((item",{"_index":652,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.sum((item",{"_index":654,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.sumbykey('age",{"_index":655,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.unique",{"_index":657,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(this.people.uniqueby('age",{"_index":658,"title":{},"body":{"components/HomeComponent.html":{}}}],["const",{"_index":213,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DocumentationComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"interfaces/String.html":{}}}],["constructor",{"_index":10,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{}}}],["constructor(configservice",{"_index":624,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(configservices",{"_index":11,"title":{},"body":{"injectables/ApiServiceService.html":{}}}],["constructor(configsettings",{"_index":704,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["constructor(el",{"_index":402,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["constructor(http",{"_index":441,"title":{},"body":{"injectables/ConfigService.html":{}}}],["constructor(loaderservice",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"directives/PulseEffectDirective.html":{}}}],["constructor(private",{"_index":33,"title":{},"body":{"injectables/ApiServiceService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"components/DocumentationComponent.html":{}}}],["constructor(route",{"_index":592,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["contact",{"_index":582,"title":{},"body":{"components/DefaultLayoutComponent.html":{},"components/MainLayoutComponent.html":{}}}],["content",{"_index":489,"title":{},"body":{"injectables/ConfigService.html":{}}}],["coverage",{"_index":808,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["currenttime",{"_index":381,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["currenttime.tostring",{"_index":384,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["d",{"_index":670,"title":{},"body":{"components/HomeComponent.html":{}}}],["data",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheStorageService.html":{},"components/HomeComponent.html":{}}}],["date().gettime",{"_index":382,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["debouncehide",{"_index":698,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["declarations",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declare",{"_index":282,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["decorators",{"_index":412,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["default",{"_index":22,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MainLayoutComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{},"miscellaneous/variables.html":{}}}],["defaultlayoutcomponent",{"_index":114,"title":{"components/DefaultLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defined",{"_index":13,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{}}}],["delete(this.getcompleteurl(url",{"_index":536,"title":{},"body":{"injectables/ConfigService.html":{}}}],["deletepromise",{"_index":427,"title":{},"body":{"injectables/ConfigService.html":{}}}],["deletepromise(url",{"_index":445,"title":{},"body":{"injectables/ConfigService.html":{}}}],["deleterequest",{"_index":428,"title":{},"body":{"injectables/ConfigService.html":{}}}],["deleterequest(url",{"_index":451,"title":{},"body":{"injectables/ConfigService.html":{}}}],["dependencies",{"_index":136,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["details",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["dev",{"_index":861,"title":{},"body":{"index.html":{}}}],["developers",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["development",{"_index":857,"title":{},"body":{"index.html":{}}}],["directive",{"_index":110,"title":{"directives/ChangeBgColorOnClickDirective.html":{},"directives/PulseEffectDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"directives/PulseEffectDirective.html":{},"coverage.html":{}}}],["directives",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"directives/PulseEffectDirective.html":{},"overview.html":{}}}],["directives/change",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["directives/pulse",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":870,"title":{},"body":{"index.html":{}}}],["directory",{"_index":875,"title":{},"body":{"index.html":{}}}],["displayloader",{"_index":677,"title":{},"body":{"injectables/LoaderService.html":{}}}],["dist",{"_index":874,"title":{},"body":{"index.html":{}}}],["distinct",{"_index":227,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["distinctbykey",{"_index":228,"title":{},"body":{"interfaces/Array.html":{}}}],["distinctbykey(key",{"_index":248,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["documentation",{"_index":585,"title":{},"body":{"components/DocumentationComponent.html":{},"coverage.html":{}}}],["documentation'},{'name",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["documentation.component.html",{"_index":587,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation.component.scss",{"_index":588,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation/:filename",{"_index":219,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["documentationcomponent",{"_index":116,"title":{"components/DocumentationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"coverage.html":{}}}],["dom",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["don't",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["dynamic",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":884,"title":{},"body":{"index.html":{}}}],["e4e4e4",{"_index":787,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["effect.directive",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["effect.directive.ts",{"_index":763,"title":{},"body":{"directives/PulseEffectDirective.html":{},"coverage.html":{}}}],["effect.directive.ts:16",{"_index":769,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["effect.directive.ts:22",{"_index":771,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["effect.directive.ts:32",{"_index":773,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["effect.directive.ts:9",{"_index":766,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["el",{"_index":407,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["element",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["elementref",{"_index":403,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{},"directives/PulseEffectDirective.html":{}}}],["email",{"_index":805,"title":{},"body":{"interfaces/User.html":{}}}],["en",{"_index":559,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["enable:true",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enabled",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":883,"title":{},"body":{"index.html":{}}}],["enter",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["entries",{"_index":620,"title":{},"body":{"components/HomeComponent.html":{}}}],["environment",{"_index":368,"title":{},"body":{"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":483,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.cache.clearonpost",{"_index":747,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["environment.cache.enable",{"_index":735,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["environment.cache.timeout",{"_index":366,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["err",{"_index":550,"title":{},"body":{"injectables/ConfigService.html":{}}}],["error",{"_index":466,"title":{},"body":{"injectables/ConfigService.html":{},"components/ErrorComponent.html":{}}}],["error'},{'name",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["error.component.html",{"_index":616,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.scss",{"_index":615,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.error",{"_index":509,"title":{},"body":{"injectables/ConfigService.html":{}}}],["error.error.message",{"_index":514,"title":{},"body":{"injectables/ConfigService.html":{}}}],["error.status",{"_index":518,"title":{},"body":{"injectables/ConfigService.html":{}}}],["errorcomponent",{"_index":118,"title":{"components/ErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errorevent",{"_index":511,"title":{},"body":{"injectables/ConfigService.html":{}}}],["event",{"_index":742,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["event.body",{"_index":744,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["events",{"_index":784,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["execute",{"_index":880,"title":{},"body":{"index.html":{}}}],["export",{"_index":31,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MainLayoutComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{},"interfaces/User.html":{}}}],["exports",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["fact.herokuapp.com",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":309,"title":{},"body":{"interfaces/Array.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"directives/PulseEffectDirective.html":{},"interfaces/String.html":{}}}],["feature",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["fetch(filepath",{"_index":609,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["fetched",{"_index":669,"title":{},"body":{"components/HomeComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MainLayoutComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["filename",{"_index":598,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["filepath",{"_index":606,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["files",{"_index":604,"title":{},"body":{"components/DocumentationComponent.html":{},"index.html":{}}}],["files/${filename",{"_index":608,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["filter((key",{"_index":504,"title":{},"body":{"injectables/ConfigService.html":{}}}],["finalize",{"_index":724,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["findbykeyvalue",{"_index":229,"title":{},"body":{"interfaces/Array.html":{}}}],["findbykeyvalue(key",{"_index":251,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["findindexbykeyvalue",{"_index":230,"title":{},"body":{"interfaces/Array.html":{}}}],["findindexbykeyvalue(key",{"_index":254,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["findvaluebykeyvalue",{"_index":231,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["findvaluebykeyvalue(key",{"_index":256,"title":{},"body":{"interfaces/Array.html":{}}}],["first",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["folder",{"_index":605,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["font",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["formsmodule",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["founditem",{"_index":340,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["from(this.cachestorageservice.getfromcache(cachename)).pipe",{"_index":736,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["function",{"_index":263,"title":{},"body":{"interfaces/Array.html":{},"injectables/ConfigService.html":{},"interfaces/String.html":{},"coverage.html":{}}}],["functions",{"_index":845,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":892,"title":{},"body":{"index.html":{}}}],["generate",{"_index":868,"title":{},"body":{"index.html":{}}}],["generated",{"_index":853,"title":{},"body":{"index.html":{}}}],["get(this.getcompleteurl(url",{"_index":521,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getapipromise",{"_index":429,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getapipromise(apicallmethod",{"_index":455,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getcompleteurl",{"_index":430,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getcompleteurl(url",{"_index":458,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getdata",{"_index":678,"title":{},"body":{"injectables/LoaderService.html":{}}}],["getfromcache",{"_index":352,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["getfromcache(key",{"_index":359,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["getheader",{"_index":700,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["getlang",{"_index":431,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{}}}],["getparams",{"_index":468,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getparams.lang",{"_index":528,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getpromise",{"_index":432,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getpromise(url",{"_index":461,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getstoredlang",{"_index":563,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["gettestdata",{"_index":623,"title":{},"body":{"components/HomeComponent.html":{}}}],["getting",{"_index":849,"title":{"index.html":{}},"body":{}}],["getvalue",{"_index":497,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getvalue(obj",{"_index":847,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getvalue(res",{"_index":548,"title":{},"body":{"injectables/ConfigService.html":{}}}],["global",{"_index":283,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["go",{"_index":894,"title":{},"body":{"index.html":{}}}],["graph",{"_index":902,"title":{},"body":{"modules.html":{}}}],["groupby",{"_index":232,"title":{},"body":{"interfaces/Array.html":{}}}],["groupby(callback",{"_index":259,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["groupbykey",{"_index":233,"title":{},"body":{"interfaces/Array.html":{}}}],["groupbykey(key",{"_index":265,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["handle",{"_index":556,"title":{},"body":{"injectables/ConfigService.html":{}}}],["handleerror",{"_index":433,"title":{},"body":{"injectables/ConfigService.html":{}}}],["handleerror(error",{"_index":463,"title":{},"body":{"injectables/ConfigService.html":{}}}],["headers",{"_index":487,"title":{},"body":{"injectables/ConfigService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["help",{"_index":893,"title":{},"body":{"index.html":{}}}],["helper",{"_index":498,"title":{},"body":{"injectables/ConfigService.html":{}}}],["hide",{"_index":679,"title":{},"body":{"injectables/LoaderService.html":{}}}],["highlight",{"_index":395,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["highlight(color",{"_index":410,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["home",{"_index":581,"title":{},"body":{"components/DefaultLayoutComponent.html":{},"components/HomeComponent.html":{},"components/MainLayoutComponent.html":{}}}],["home'},{'name",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["home.component.html",{"_index":619,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":618,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":120,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hostlistener",{"_index":415,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["hostlistener('mouseenter",{"_index":413,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["hostlistener('mouseleave",{"_index":414,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["hostlisteners",{"_index":399,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["html",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["htmlcontent",{"_index":589,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["htmlfilename:any",{"_index":600,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["http",{"_index":444,"title":{},"body":{"injectables/ConfigService.html":{}}}],["http.interceptor",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["http.interceptor.ts",{"_index":697,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{},"coverage.html":{}}}],["http.interceptor.ts:19",{"_index":720,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["http.interceptor.ts:20",{"_index":705,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["http.interceptor.ts:30",{"_index":710,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["http.interceptor.ts:69",{"_index":706,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["http.interceptor.ts:76",{"_index":712,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["http.interceptor.ts:81",{"_index":713,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["http.interceptor.ts:90",{"_index":719,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["http://localhost:4200",{"_index":863,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":442,"title":{},"body":{"injectables/ConfigService.html":{}}}],["httpclientmodule",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":464,"title":{},"body":{"injectables/ConfigService.html":{}}}],["httpevent",{"_index":722,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["httphandler",{"_index":709,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["httpheaders",{"_index":488,"title":{},"body":{"injectables/ConfigService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["httpinterceptor",{"_index":723,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["httpoptions",{"_index":426,"title":{},"body":{"injectables/ConfigService.html":{}}}],["httprequest",{"_index":708,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["httpresponse",{"_index":492,"title":{},"body":{"injectables/ConfigService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["https://cat",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://en.wikipedia.org/wiki/self",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["id",{"_index":629,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/User.html":{}}}],["identifier",{"_index":809,"title":{},"body":{"coverage.html":{}}}],["if((request.method",{"_index":746,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["if(typeof",{"_index":776,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["impersonate",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["implements",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{},"pipes/UpperCasePipe.html":{},"index.html":{}}}],["import",{"_index":24,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MainLayoutComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{},"pipes/UpperCasePipe.html":{}}}],["imports",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DocumentationComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{},"interfaces/String.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MainLayoutComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{},"interfaces/User.html":{}}}],["information",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiServiceService.html":{},"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"injectables/LoaderService.html":{}},"body":{"injectables/ApiServiceService.html":{},"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiServiceService.html":{},"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"injectables/LoaderService.html":{},"overview.html":{}}}],["input",{"_index":416,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{},"directives/PulseEffectDirective.html":{}}}],["input('pulseeffect",{"_index":775,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["inputs",{"_index":398,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{},"directives/PulseEffectDirective.html":{}}}],["instanceof",{"_index":510,"title":{},"body":{"injectables/ConfigService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["intended",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["intercept",{"_index":701,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["intercept(request",{"_index":707,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["interceptor",{"_index":694,"title":{"interceptors/MyHttpInterceptorInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":695,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["interceptors/my",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["interface",{"_index":222,"title":{"interfaces/Array.html":{},"interfaces/String.html":{},"interfaces/User.html":{}},"body":{"interfaces/Array.html":{},"interfaces/String.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":224,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{},"interfaces/User.html":{},"overview.html":{}}}],["isactive",{"_index":774,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["isdevmode",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["item",{"_index":260,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["item.age",{"_index":648,"title":{},"body":{"components/HomeComponent.html":{}}}],["item[key",{"_index":324,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["item[keyname",{"_index":297,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["itemkey",{"_index":305,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["join",{"_index":508,"title":{},"body":{"injectables/ConfigService.html":{}}}],["json",{"_index":671,"title":{},"body":{"components/HomeComponent.html":{}}}],["karma",{"_index":882,"title":{},"body":{"index.html":{}}}],["key",{"_index":250,"title":{},"body":{"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"interfaces/String.html":{}}}],["keya",{"_index":313,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["keyb",{"_index":315,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["keyname",{"_index":296,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["keys",{"_index":447,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/functions.html":{}}}],["keys.length",{"_index":547,"title":{},"body":{"injectables/ConfigService.html":{}}}],["key}=${encodeuricomponent(params[key",{"_index":507,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lang",{"_index":527,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["lang_key",{"_index":562,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["large;font",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["lastupdate",{"_index":385,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["layout",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["layout'},{'name",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["layout.component",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layout.component.html",{"_index":578,"title":{},"body":{"components/DefaultLayoutComponent.html":{},"components/MainLayoutComponent.html":{}}}],["layout.component.scss",{"_index":580,"title":{},"body":{"components/DefaultLayoutComponent.html":{},"components/MainLayoutComponent.html":{}}}],["layout.component.ts",{"_index":577,"title":{},"body":{"components/DefaultLayoutComponent.html":{},"components/MainLayoutComponent.html":{},"coverage.html":{}}}],["layout/default",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DefaultLayoutComponent.html":{},"coverage.html":{}}}],["layout/main",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MainLayoutComponent.html":{},"coverage.html":{}}}],["layouts/default",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layouts/main",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["legend",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"overview.html":{}}}],["length",{"_index":327,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["loader",{"_index":673,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["loader'},{'name",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["loader.component.html",{"_index":674,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":675,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader:boolean",{"_index":688,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loadercomponent",{"_index":122,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loaderservice",{"_index":58,"title":{"injectables/LoaderService.html":{}},"body":{"components/AppComponent.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{},"coverage.html":{}}}],["loaderservice:loaderservice",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"directives/PulseEffectDirective.html":{}}}],["loadhtmlcontent",{"_index":590,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["loadhtmlcontent(filename",{"_index":596,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["localstorage.getitem('cachetimestamp",{"_index":386,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["localstorage.getitem(this.lang_key",{"_index":575,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["localstorage.removeitem('cachetimestamp",{"_index":391,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["localstorage.setitem('cachetimestamp",{"_index":383,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["localstorage.setitem(this.lang_key",{"_index":573,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["main",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["mainlayoutcomponent",{"_index":124,"title":{"components/MainLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"coverage.html":{},"overview.html":{}}}],["map",{"_index":27,"title":{},"body":{"injectables/ApiServiceService.html":{}}}],["map((key",{"_index":506,"title":{},"body":{"injectables/ConfigService.html":{}}}],["matching",{"_index":35,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MainLayoutComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.length",{"_index":328,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["math.max(0",{"_index":760,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["mergemap",{"_index":725,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["mergemap((cacheddata",{"_index":737,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["metadata",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"directives/PulseEffectDirective.html":{},"pipes/UpperCasePipe.html":{}}}],["methods",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{}}}],["milliseconds",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":844,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modifiedrequest",{"_index":751,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["module",{"_index":133,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":135,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["mouseenter",{"_index":400,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["mouseleave",{"_index":401,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["multi",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["myhttpinterceptorinterceptor",{"_index":148,"title":{"interceptors/MyHttpInterceptorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["name",{"_index":17,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{},"pipes/UpperCasePipe.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":862,"title":{},"body":{"index.html":{}}}],["need",{"_index":888,"title":{},"body":{"index.html":{}}}],["needed",{"_index":558,"title":{},"body":{"injectables/ConfigService.html":{}}}],["new",{"_index":299,"title":{},"body":{"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"interfaces/String.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":540,"title":{},"body":{"injectables/ConfigService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["next.handle(modifiedrequest).pipe",{"_index":753,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["next.handle(request",{"_index":745,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":740,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["ng",{"_index":859,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["ngmodule",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngonchanges",{"_index":764,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["ngonchanges(changes",{"_index":767,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["ngoninit",{"_index":591,"title":{},"body":{"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"directives/PulseEffectDirective.html":{}}}],["none",{"_index":785,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["null",{"_index":379,"title":{},"body":{"injectables/CacheStorageService.html":{},"injectables/ConfigSettings.html":{}}}],["number",{"_index":243,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{},"interfaces/User.html":{}}}],["obj",{"_index":848,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":452,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(params",{"_index":503,"title":{},"body":{"injectables/ConfigService.html":{}}}],["observable",{"_index":454,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["observe",{"_index":522,"title":{},"body":{"injectables/ConfigService.html":{}}}],["occurred",{"_index":513,"title":{},"body":{"injectables/ConfigService.html":{},"components/ErrorComponent.html":{}}}],["of(new",{"_index":739,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["ongoingrequestscount",{"_index":699,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["oninit",{"_index":584,"title":{},"body":{"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"directives/PulseEffectDirective.html":{}}}],["onmouseenter",{"_index":396,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["onmouseleave",{"_index":397,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["optional",{"_index":19,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{},"pipes/UpperCasePipe.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":896,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":829,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":898,"title":{},"body":{"index.html":{}}}],["pages/documentation/documentation.component",{"_index":212,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/error/error.component",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/home/home.component",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["parameters",{"_index":15,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{},"pipes/UpperCasePipe.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":446,"title":{},"body":{"injectables/ConfigService.html":{}}}],["params.hasownproperty(key",{"_index":505,"title":{},"body":{"injectables/ConfigService.html":{}}}],["parseint(lastupdate",{"_index":388,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["password",{"_index":806,"title":{},"body":{"interfaces/User.html":{}}}],["paste",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["path",{"_index":214,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["people",{"_index":621,"title":{},"body":{"components/HomeComponent.html":{}}}],["phone",{"_index":807,"title":{},"body":{"interfaces/User.html":{}}}],["pipe",{"_index":792,"title":{"pipes/UpperCasePipe.html":{}},"body":{"pipes/UpperCasePipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(catcherror(this.handleerror",{"_index":523,"title":{},"body":{"injectables/ConfigService.html":{}}}],["pipes",{"_index":793,"title":{},"body":{"pipes/UpperCasePipe.html":{}}}],["pipes/upper",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":801,"title":{},"body":{"pipes/UpperCasePipe.html":{}}}],["platform",{"_index":885,"title":{},"body":{"index.html":{}}}],["post",{"_index":530,"title":{},"body":{"injectables/ConfigService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["postparams",{"_index":469,"title":{},"body":{"injectables/ConfigService.html":{}}}],["postpromise",{"_index":434,"title":{},"body":{"injectables/ConfigService.html":{}}}],["postpromise(url",{"_index":467,"title":{},"body":{"injectables/ConfigService.html":{}}}],["postrequest",{"_index":435,"title":{},"body":{"injectables/ConfigService.html":{}}}],["postrequest(url",{"_index":471,"title":{},"body":{"injectables/ConfigService.html":{}}}],["primeng",{"_index":837,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{}}}],["project",{"_index":852,"title":{},"body":{"index.html":{}}}],["promise((resolve",{"_index":538,"title":{},"body":{"injectables/ConfigService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"interfaces/User.html":{},"properties.html":{}}}],["prototypeextension",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["provide",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":29,"title":{},"body":{"injectables/ApiServiceService.html":{},"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"injectables/LoaderService.html":{}}}],["providers",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":424,"title":{},"body":{"injectables/ConfigService.html":{}}}],["pulse",{"_index":782,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["pulseeffect",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"directives/PulseEffectDirective.html":{}}}],["pulseeffectdirective",{"_index":130,"title":{"directives/PulseEffectDirective.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"directives/PulseEffectDirective.html":{},"coverage.html":{},"overview.html":{}}}],["put",{"_index":534,"title":{},"body":{"injectables/ConfigService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["putpromise",{"_index":436,"title":{},"body":{"injectables/ConfigService.html":{}}}],["putpromise(url",{"_index":473,"title":{},"body":{"injectables/ConfigService.html":{}}}],["putrequest",{"_index":437,"title":{},"body":{"injectables/ConfigService.html":{}}}],["putrequest(url",{"_index":475,"title":{},"body":{"injectables/ConfigService.html":{}}}],["readexternalrequest",{"_index":438,"title":{},"body":{"injectables/ConfigService.html":{}}}],["readexternalrequest(url",{"_index":477,"title":{},"body":{"injectables/ConfigService.html":{}}}],["readonly",{"_index":345,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["readrequest",{"_index":439,"title":{},"body":{"injectables/ConfigService.html":{}}}],["readrequest(url",{"_index":479,"title":{},"body":{"injectables/ConfigService.html":{}}}],["record",{"_index":264,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["reference",{"_index":897,"title":{},"body":{"index.html":{}}}],["register",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["registerwhenstable:30000",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["registrationstrategy",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["reload",{"_index":865,"title":{},"body":{"index.html":{}}}],["remove",{"_index":234,"title":{},"body":{"interfaces/Array.html":{}}}],["remove(item",{"_index":267,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["removebykeyvalue",{"_index":235,"title":{},"body":{"interfaces/Array.html":{}}}],["removebykeyvalue(key",{"_index":269,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["renderer",{"_index":404,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["renderer2",{"_index":405,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["request",{"_index":711,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["request.clone",{"_index":752,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["request.method",{"_index":732,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["res",{"_index":541,"title":{},"body":{"injectables/ConfigService.html":{}}}],["res.body.status",{"_index":546,"title":{},"body":{"injectables/ConfigService.html":{}}}],["res.body.statuscode",{"_index":542,"title":{},"body":{"injectables/ConfigService.html":{}}}],["res.status",{"_index":545,"title":{},"body":{"injectables/ConfigService.html":{}}}],["res.statuscode",{"_index":544,"title":{},"body":{"injectables/ConfigService.html":{}}}],["reset",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolve(res",{"_index":549,"title":{},"body":{"injectables/ConfigService.html":{}}}],["response",{"_index":373,"title":{},"body":{"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{}}}],["response(json.stringify(data",{"_index":374,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["response.json",{"_index":378,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["response.text",{"_index":611,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["results",{"_index":34,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MainLayoutComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrievekey",{"_index":257,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["return",{"_index":286,"title":{},"body":{"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":517,"title":{},"body":{"injectables/ConfigService.html":{}}}],["returns",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{},"miscellaneous/functions.html":{}}}],["root",{"_index":30,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"injectables/LoaderService.html":{}}}],["root'},{'name",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["route",{"_index":595,"title":{},"body":{"components/DocumentationComponent.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":209,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":221,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":210,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":208,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":858,"title":{},"body":{"index.html":{}}}],["running",{"_index":876,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":494,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":28,"title":{},"body":{"injectables/ApiServiceService.html":{},"injectables/ConfigService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["sample",{"_index":668,"title":{},"body":{"components/HomeComponent.html":{}}}],["scaffolding",{"_index":867,"title":{},"body":{"index.html":{}}}],["seconds",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["selector",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{},"directives/PulseEffectDirective.html":{}}}],["serializedparams",{"_index":499,"title":{},"body":{"injectables/ConfigService.html":{}}}],["serializeparams",{"_index":440,"title":{},"body":{"injectables/ConfigService.html":{}}}],["serializeparams(params",{"_index":481,"title":{},"body":{"injectables/ConfigService.html":{}}}],["serve",{"_index":860,"title":{},"body":{"index.html":{}}}],["server",{"_index":554,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{}}}],["services/cache",{"_index":728,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["services/loader.service",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{}}}],["serviceworker",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":303,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["set(this",{"_index":300,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["setlang",{"_index":564,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["setlang(lang",{"_index":568,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["settimeout",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{}}}],["show",{"_index":680,"title":{},"body":{"injectables/LoaderService.html":{}}}],["showloader",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["showloader:boolean",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["simplechanges",{"_index":768,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["size",{"_index":245,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["size:large",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["size:xx",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["soon",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["sortby",{"_index":236,"title":{},"body":{"interfaces/Array.html":{}}}],["sortby(callback",{"_index":271,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["sortbykey",{"_index":237,"title":{},"body":{"interfaces/Array.html":{}}}],["sortbykey(key",{"_index":273,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MainLayoutComponent.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{},"interfaces/User.html":{},"index.html":{}}}],["src/.../auth.guard.ts",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../helper.ts",{"_index":846,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":207,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:11",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/loader/loader.component.ts",{"_index":672,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["src/app/configs/config.services",{"_index":642,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/configs/config.services.ts",{"_index":422,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/app/configs/config.services.ts:105",{"_index":474,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:109",{"_index":453,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:115",{"_index":448,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:119",{"_index":456,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:145",{"_index":460,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:18",{"_index":484,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:19",{"_index":485,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:20",{"_index":491,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:24",{"_index":443,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:28",{"_index":486,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:31",{"_index":459,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:41",{"_index":482,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:48",{"_index":465,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:59",{"_index":480,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:65",{"_index":462,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:69",{"_index":478,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:78",{"_index":472,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:91",{"_index":470,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.services.ts:95",{"_index":476,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/configs/config.settings.ts",{"_index":560,"title":{},"body":{"injectables/ConfigSettings.html":{},"coverage.html":{}}}],["src/app/configs/config.settings.ts:14",{"_index":569,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["src/app/configs/config.settings.ts:21",{"_index":566,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["src/app/configs/config.settings.ts:26",{"_index":567,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["src/app/configs/config.settings.ts:7",{"_index":570,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["src/app/configs/config.settings.ts:8",{"_index":565,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["src/app/configs/helper.ts",{"_index":815,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/directives/change",{"_index":392,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{},"coverage.html":{}}}],["src/app/directives/pulse",{"_index":762,"title":{},"body":{"directives/PulseEffectDirective.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":818,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/interceptors/my",{"_index":696,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{},"coverage.html":{}}}],["src/app/interfaces/user.ts",{"_index":804,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/layouts/default",{"_index":576,"title":{},"body":{"components/DefaultLayoutComponent.html":{},"coverage.html":{}}}],["src/app/layouts/main",{"_index":693,"title":{},"body":{"components/MainLayoutComponent.html":{},"coverage.html":{}}}],["src/app/pages/documentation/documentation.component.ts",{"_index":583,"title":{},"body":{"components/DocumentationComponent.html":{},"coverage.html":{}}}],["src/app/pages/documentation/documentation.component.ts:12",{"_index":594,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["src/app/pages/documentation/documentation.component.ts:16",{"_index":599,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["src/app/pages/documentation/documentation.component.ts:21",{"_index":597,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["src/app/pages/error/error.component.ts",{"_index":614,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.component.ts",{"_index":617,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.component.ts:11",{"_index":641,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:12",{"_index":640,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:19",{"_index":625,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:43",{"_index":627,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:49",{"_index":628,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:51",{"_index":626,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pipes/upper",{"_index":794,"title":{},"body":{"pipes/UpperCasePipe.html":{},"coverage.html":{}}}],["src/app/prototypeextension.ts",{"_index":225,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{},"coverage.html":{}}}],["src/app/prototypeextension.ts:10",{"_index":249,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:11",{"_index":272,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:12",{"_index":274,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:13",{"_index":276,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:14",{"_index":278,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:15",{"_index":244,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:16",{"_index":279,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:17",{"_index":281,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:18",{"_index":268,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:19",{"_index":270,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:20",{"_index":255,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:21",{"_index":252,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:22",{"_index":258,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:4",{"_index":791,"title":{},"body":{"interfaces/String.html":{}}}],["src/app/prototypeextension.ts:7",{"_index":261,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:8",{"_index":266,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/prototypeextension.ts:9",{"_index":246,"title":{},"body":{"interfaces/Array.html":{}}}],["src/app/services/api.service",{"_index":643,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/services/api.service.ts",{"_index":6,"title":{},"body":{"injectables/ApiServiceService.html":{},"coverage.html":{}}}],["src/app/services/api.service.ts:9",{"_index":14,"title":{},"body":{"injectables/ApiServiceService.html":{}}}],["src/app/services/cache",{"_index":343,"title":{},"body":{"injectables/CacheStorageService.html":{},"coverage.html":{}}}],["src/app/services/loader.service.ts",{"_index":676,"title":{},"body":{"injectables/LoaderService.html":{},"coverage.html":{}}}],["src/app/services/loader.service.ts:12",{"_index":684,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/services/loader.service.ts:17",{"_index":683,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/services/loader.service.ts:22",{"_index":682,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/services/loader.service.ts:8",{"_index":687,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/services/loader.service.ts:9",{"_index":681,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/environments/environment",{"_index":369,"title":{},"body":{"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["src/environments/environment.development.ts",{"_index":825,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":826,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stable",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["standalone",{"_index":586,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["started",{"_index":850,"title":{"index.html":{}},"body":{}}],["startloader",{"_index":702,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["state",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":810,"title":{},"body":{"coverage.html":{}}}],["steal",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["stoploader",{"_index":703,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["storage.service",{"_index":729,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["storage.service.ts",{"_index":344,"title":{},"body":{"injectables/CacheStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:15",{"_index":356,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["storage.service.ts:22",{"_index":360,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["storage.service.ts:33",{"_index":358,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["storage.service.ts:37",{"_index":362,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["storage.service.ts:42",{"_index":357,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["storage.service.ts:8",{"_index":365,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["storage.service.ts:9",{"_index":354,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["stored",{"_index":873,"title":{},"body":{"index.html":{}}}],["storedlang",{"_index":574,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["string",{"_index":21,"title":{"interfaces/String.html":{}},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["string(request.urlwithparams",{"_index":734,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["string.prototype.capitalizefirstletter",{"_index":285,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["styles",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{}}}],["styleurl",{"_index":579,"title":{},"body":{"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["styleurls",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{}}}],["sum",{"_index":238,"title":{},"body":{"interfaces/Array.html":{}}}],["sum(callback",{"_index":275,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["sumbykey",{"_index":239,"title":{},"body":{"interfaces/Array.html":{}}}],["sumbykey(key",{"_index":277,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["support",{"_index":899,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":900,"title":{},"body":{"modules.html":{}}}],["t",{"_index":247,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["table",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":726,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["tap((event",{"_index":741,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["template",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["templateurl",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["test",{"_index":879,"title":{},"body":{"index.html":{}}}],["testing",{"_index":890,"title":{},"body":{"index.html":{}}}],["tests",{"_index":878,"title":{},"body":{"index.html":{}}}],["then(html",{"_index":612,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["then(response",{"_index":610,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this._lang",{"_index":571,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["this.api_url",{"_index":501,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.baseroute",{"_index":502,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cache_timeout",{"_index":390,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["this.cachestorageservice.addtocache(cachename",{"_index":743,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.cachestorageservice.clearcache",{"_index":748,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.cdr.detectchanges",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["this.charat(0).touppercase",{"_index":287,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["this.checkcacheexpiration",{"_index":370,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["this.configservice.getpromise('facts",{"_index":667,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.configsettings._lang",{"_index":529,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.configsettings.getlang",{"_index":731,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.debouncehide",{"_index":761,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.deleterequest(url",{"_index":537,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.displayloader.asobservable",{"_index":692,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.displayloader.next(false",{"_index":691,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.displayloader.next(true",{"_index":690,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.elementref.nativeelement.classlist.add('animate",{"_index":781,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["this.elementref.nativeelement.classlist.add('bg",{"_index":786,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["this.elementref.nativeelement.classlist.add('pointer",{"_index":783,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["this.elementref.nativeelement.classlist.remove('animate",{"_index":788,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["this.elementref.nativeelement.classlist.remove('bg",{"_index":790,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["this.elementref.nativeelement.classlist.remove('pointer",{"_index":789,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["this.entries",{"_index":666,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.filter((i",{"_index":335,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["this.filter((item",{"_index":304,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["this.find((item",{"_index":338,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["this.getapipromise",{"_index":524,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.getcompleteurl(url",{"_index":531,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.getheader",{"_index":749,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.getstoredlang",{"_index":572,"title":{},"body":{"injectables/ConfigSettings.html":{}}}],["this.gettestdata",{"_index":664,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.highlight",{"_index":419,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["this.highlight(this.appchangebgcoloronclick",{"_index":417,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["this.htmlcontent",{"_index":613,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.http",{"_index":520,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.http.get(this.getcompleteurl(url",{"_index":526,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.httpoptions",{"_index":532,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.isactive",{"_index":777,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["this.lang",{"_index":730,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.loader",{"_index":689,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.loaderservice.getdata().subscribe((data",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"directives/PulseEffectDirective.html":{}}}],["this.loaderservice.hide",{"_index":717,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.loaderservice.show",{"_index":757,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.loadhtmlcontent(htmlfilename",{"_index":602,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.ongoingrequestscount.next",{"_index":759,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.ongoingrequestscount.next(this.ongoingrequestscount.value",{"_index":758,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.ongoingrequestscount.value",{"_index":716,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.postrequest(url",{"_index":533,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.putrequest(url",{"_index":535,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.readrequest(url",{"_index":525,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.reduce((acc",{"_index":290,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["this.renderer.setstyle(this.el.nativeelement",{"_index":420,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["this.route.snapshot.parammap.get('filename",{"_index":601,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.serializeparams(params",{"_index":500,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.showloader",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["this.slice(1",{"_index":288,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["this.slice(index",{"_index":330,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["this.startloader",{"_index":750,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.stoploader",{"_index":754,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["this.title",{"_index":645,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.title.capitalizefirstletter",{"_index":646,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.triggerv",{"_index":665,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.updatecachetimestamp",{"_index":376,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["this.updateclass(!!data",{"_index":780,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["this.updateclass(changes['isactive'].currentvalue",{"_index":779,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["this].sort((a",{"_index":311,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["throwerror",{"_index":493,"title":{},"body":{"injectables/ConfigService.html":{}}}],["timeelapsed",{"_index":387,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["timeout:3600000",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timeoutid",{"_index":714,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["title",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["tokendfktgvf87gt63hg",{"_index":756,"title":{},"body":{"interceptors/MyHttpInterceptorInterceptor.html":{}}}],["transform",{"_index":797,"title":{},"body":{"pipes/UpperCasePipe.html":{}}}],["transform(value",{"_index":798,"title":{},"body":{"pipes/UpperCasePipe.html":{}}}],["tree",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["triggerv",{"_index":622,"title":{},"body":{"components/HomeComponent.html":{}}}],["triggerv:boolean",{"_index":644,"title":{},"body":{"components/HomeComponent.html":{}}}],["true",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Array.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"interfaces/String.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":18,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{},"pipes/UpperCasePipe.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":253,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{},"miscellaneous/functions.html":{}}}],["understand",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["unique",{"_index":240,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["uniqueby",{"_index":241,"title":{},"body":{"interfaces/Array.html":{}}}],["uniqueby(key",{"_index":280,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["uniquekeys",{"_index":302,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["uniquekeys.add(itemkey",{"_index":308,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["uniquekeys.has(itemkey",{"_index":307,"title":{},"body":{"interfaces/Array.html":{},"interfaces/String.html":{}}}],["unit",{"_index":877,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":361,"title":{},"body":{"injectables/CacheStorageService.html":{},"injectables/ConfigService.html":{}}}],["updatecachetimestamp",{"_index":353,"title":{},"body":{"injectables/CacheStorageService.html":{}}}],["updateclass",{"_index":765,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["updateclass(isactive",{"_index":772,"title":{},"body":{"directives/PulseEffectDirective.html":{}}}],["uppercase",{"_index":796,"title":{},"body":{"pipes/UpperCasePipe.html":{}}}],["uppercasepipe",{"_index":146,"title":{"pipes/UpperCasePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/UpperCasePipe.html":{},"coverage.html":{},"overview.html":{}}}],["url",{"_index":449,"title":{},"body":{"injectables/ConfigService.html":{}}}],["use",{"_index":869,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":803,"title":{"interfaces/User.html":{}},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["v17",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["value",{"_index":23,"title":{},"body":{"injectables/ApiServiceService.html":{},"components/AppComponent.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{},"interfaces/String.html":{},"pipes/UpperCasePipe.html":{},"miscellaneous/variables.html":{}}}],["value.touppercase",{"_index":802,"title":{},"body":{"pipes/UpperCasePipe.html":{}}}],["var",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultLayoutComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/MainLayoutComponent.html":{}}}],["variable",{"_index":819,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":910,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":855,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":881,"title":{},"body":{"index.html":{}}}],["vishwakarma",{"_index":909,"title":{},"body":{"properties.html":{}}}],["void",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Array.html":{},"injectables/CacheStorageService.html":{},"directives/ChangeBgColorOnClickDirective.html":{},"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"interceptors/MyHttpInterceptorInterceptor.html":{},"directives/PulseEffectDirective.html":{}}}],["weight:bold",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["whichever",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["worker",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["worker.js",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["xss",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["yellow",{"_index":418,"title":{},"body":{"directives/ChangeBgColorOnClickDirective.html":{}}}],["yes",{"_index":450,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ConfigSettings.html":{}}}],["you.\\nsee",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["zone.js",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiServiceService.html":{"url":"injectables/ApiServiceService.html","title":"injectable - ApiServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configServices: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configServices\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ConfigService } from '../configs/config.services';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiServiceService {\n  baseRoute = '';\n  constructor(private configServices: ConfigService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showLoader\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loaderService: LoaderService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showLoader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'angular-boilerplate-v17'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ChangeDetectorRef, Component } from '@angular/core';\nimport { LoaderService } from './services/loader.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements AfterViewInit {\n  title = 'angular-boilerplate-v17';\n  showLoader:boolean = true;\n  constructor(\n    private loaderService:LoaderService,\n    private cdr: ChangeDetectorRef\n  ){}\n\n  ngAfterViewInit(): void {\n    this.loaderService.getData().subscribe((data) => {\n      setTimeout(() => {\n        this.showLoader = data;\n        this.cdr.detectChanges();\n      });\n    });\n    console.log(\"%cSTOP!\", \"color:red;font-size:xx-large;font-weight:bold;\")\n    console.log(\"%cThis is a browser feature intended for developers. Do not enter or paste code which you don't understand. It may allow attackers to steal your information or impersonate you.\\nSee https://en.wikipedia.org/wiki/Self-XSS for more details\", \"font-size:large;\")\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DefaultLayoutComponent', 'selector': 'app-default-layout'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'loader'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'}];\n    var DIRECTIVES = [{'name': 'ChangeBgColorOnClickDirective', 'selector': '[appChangeBgColorOnClick]'},{'name': 'PulseEffectDirective', 'selector': '[pulseEffect]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangeBgColorOnClickDirective\n\nChangeBgColorOnClickDirective\n\nAppModule -->\n\nChangeBgColorOnClickDirective->AppModule\n\n\n\n\n\nDefaultLayoutComponent\n\nDefaultLayoutComponent\n\nAppModule -->\n\nDefaultLayoutComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nMainLayoutComponent\n\nMainLayoutComponent\n\nAppModule -->\n\nMainLayoutComponent->AppModule\n\n\n\n\n\nPulseEffectDirective\n\nPulseEffectDirective\n\nAppModule -->\n\nPulseEffectDirective->AppModule\n\n\n\n\n\nUpperCasePipe\n\nUpperCasePipe\n\nAppModule -->\n\nUpperCasePipe->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMyHttpInterceptorInterceptor\n\nMyHttpInterceptorInterceptor\n\nAppModule -->\n\nMyHttpInterceptorInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ChangeBgColorOnClickDirective\n                        \n                        \n                            DefaultLayoutComponent\n                        \n                        \n                            ErrorComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoaderComponent\n                        \n                        \n                            MainLayoutComponent\n                        \n                        \n                            PulseEffectDirective\n                        \n                        \n                            UpperCasePipe\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            MyHttpInterceptorInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, isDevMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { ChangeBgColorOnClickDirective } from './directives/change-bg-color-on-click.directive';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { MyHttpInterceptorInterceptor } from './interceptors/my-http.interceptor';\nimport { HomeComponent } from './pages/home/home.component';\nimport { ErrorComponent } from './pages/error/error.component';\nimport { UpperCasePipe } from './pipes/upper-case.pipe';\nimport './prototypeExtension';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoaderComponent } from './components/loader/loader.component';\nimport { MainLayoutComponent } from './layouts/main-layout/main-layout.component';\nimport { DefaultLayoutComponent } from './layouts/default-layout/default-layout.component';\nimport { PulseEffectDirective } from './directives/pulse-effect.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChangeBgColorOnClickDirective,\n    HomeComponent,\n    ErrorComponent,\n    UpperCasePipe,\n    LoaderComponent,\n    MainLayoutComponent,\n    DefaultLayoutComponent,\n    PulseEffectDirective\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: !isDevMode(),\n      // Register the ServiceWorker as soon as the application is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000',\n    }),\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: MyHttpInterceptorInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\nimport { DefaultLayoutComponent } from './layouts/default-layout/default-layout.component';\nimport { MainLayoutComponent } from './layouts/main-layout/main-layout.component';\nimport { DocumentationComponent } from './pages/documentation/documentation.component';\nimport { ErrorComponent } from './pages/error/error.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component:DefaultLayoutComponent,\n    children:[\n      {\n        path: '',\n        component:HomeComponent\n      }\n    ]\n  },\n  {\n    path: 'main',\n    component:MainLayoutComponent,\n    children:[\n      {\n        path: '',\n        component:HomeComponent\n      }\n    ]\n  },\n  { \n    path: 'documentation/:fileName', \n    component: DocumentationComponent\n  },\n  {\n    path:\"**\",\n    component:ErrorComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Array.html":{"url":"interfaces/Array.html","title":"interface - Array","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Array\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/prototypeExtension.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        chunk\n                                    \n                                \n                                \n                                    \n                                        distinct\n                                    \n                                \n                                \n                                    \n                                        distinctByKey\n                                    \n                                \n                                \n                                    \n                                        findByKeyValue\n                                    \n                                \n                                \n                                    \n                                        findIndexByKeyValue\n                                    \n                                \n                                \n                                    \n                                        findValueByKeyValue\n                                    \n                                \n                                \n                                    \n                                        groupBy\n                                    \n                                \n                                \n                                    \n                                        groupByKey\n                                    \n                                \n                                \n                                    \n                                        remove\n                                    \n                                \n                                \n                                    \n                                        removeByKeyValue\n                                    \n                                \n                                \n                                    \n                                        sortBy\n                                    \n                                \n                                \n                                    \n                                        sortByKey\n                                    \n                                \n                                \n                                    \n                                        sum\n                                    \n                                \n                                \n                                    \n                                        sumByKey\n                                    \n                                \n                                \n                                    \n                                        unique\n                                    \n                                \n                                \n                                    \n                                        uniqueBy\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chunk\n                        \n                    \n                \n            \n            \n                \nchunk(size: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     [][]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        distinct\n                        \n                    \n                \n            \n            \n                \ndistinct()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        distinctByKey\n                        \n                    \n                \n            \n            \n                \ndistinctByKey(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByKeyValue\n                        \n                    \n                \n            \n            \n                \nfindByKeyValue(key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findIndexByKeyValue\n                        \n                    \n                \n            \n            \n                \nfindIndexByKeyValue(key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findValueByKeyValue\n                        \n                    \n                \n            \n            \n                \nfindValueByKeyValue(key: string, value: any, retrieveKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                retrieveKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupBy\n                        \n                    \n                \n            \n            \n                \ngroupBy(callback: (item: T) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupByKey\n                        \n                    \n                \n            \n            \n                \ngroupByKey(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(item: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeByKeyValue\n                        \n                    \n                \n            \n            \n                \nremoveByKeyValue(key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortBy\n                        \n                    \n                \n            \n            \n                \nsortBy(callback: (item: T) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortByKey\n                        \n                    \n                \n            \n            \n                \nsortByKey(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sum\n                        \n                    \n                \n            \n            \n                \nsum(callback: (item: T) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sumByKey\n                        \n                    \n                \n            \n            \n                \nsumByKey(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unique\n                        \n                    \n                \n            \n            \n                \nunique()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uniqueBy\n                        \n                    \n                \n            \n            \n                \nuniqueBy(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export {};\ndeclare global {\n  interface String {\n    capitalizeFirstLetter(): string;\n  }\n  interface Array {\n    groupBy(callback: (item: T) => string): Record;\n    groupByKey(key: string): Record;\n    distinct(): T[];\n    distinctByKey(key: string): T[];\n    sortBy(callback: (item: T) => any): T[];\n    sortByKey(key: string): T[];\n    sum(callback: (item: T) => number): number;\n    sumByKey(key: string): number;\n    chunk(size: number): T[][];\n    unique(): T[];\n    uniqueBy(key: string): T[];\n    remove(item: T): T[];\n    removeByKeyValue(key: string, value: any): T[];\n    findIndexByKeyValue(key: string, value: any): number;\n    findByKeyValue(key: string, value: any): T | undefined;\n    findValueByKeyValue(\n      key: string,\n      value: any,\n      retrieveKey: string,\n    ): any | undefined;\n  }\n}\n\nString.prototype.capitalizeFirstLetter = function () {\n  return this.charAt(0).toUpperCase() + this.slice(1);\n};\n\nArray.prototype.groupBy = function (\n  callback: (item: T) => string,\n): Record {\n  return this.reduce((acc, item) => {\n    const key = callback(item);\n    acc[key] = acc[key] || [];\n    acc[key].push(item);\n    return acc;\n  }, {});\n};\nArray.prototype.groupByKey = function (\n  keyName: string,\n): Record {\n  return this.reduce((acc, item) => {\n    const key = item[keyName];\n    acc[key] = acc[key] || [];\n    acc[key].push(item);\n    return acc;\n  }, {});\n};\nArray.prototype.distinct = function (): T[] {\n  return [...new Set(this)];\n};\nArray.prototype.distinctByKey = function (key: string): T[] {\n  const uniqueKeys = new Set();\n  return this.filter((item) => {\n    const itemKey = (item as any)[key];\n    if (!uniqueKeys.has(itemKey)) {\n      uniqueKeys.add(itemKey);\n      return true;\n    }\n    return false;\n  });\n};\nArray.prototype.sortBy = function (callback: (item: T) => any): T[] {\n  return [...this].sort((a, b) => {\n    const keyA = callback(a);\n    const keyB = callback(b);\n    return keyA  keyB ? 1 : 0;\n  });\n};\nArray.prototype.sortByKey = function (key: string): T[] {\n  return [...this].sort((a, b) => {\n    const keyA = a[key];\n    const keyB = b[key];\n    return keyA  keyB ? 1 : 0;\n  });\n};\nArray.prototype.sum = function (callback: (item: T) => number): number {\n  return this.reduce((acc, item) => acc + callback(item), 0);\n};\nArray.prototype.sumByKey = function (key: string): number {\n  return this.reduce((acc, item) => acc + item[key], 0);\n};\nArray.prototype.chunk = function (size: number): T[][] {\n  return Array.from({ length: Math.ceil(this.length / size) }, (__, index) =>\n    this.slice(index * size, index * size + size),\n  );\n};\nArray.prototype.unique = function (): T[] {\n  return Array.from(new Set(this));\n};\nArray.prototype.uniqueBy = function (key: string): T[] {\n  const uniqueKeys = new Set();\n  return this.filter((item) => {\n    const itemKey = (item as any)[key];\n    if (!uniqueKeys.has(itemKey)) {\n      uniqueKeys.add(itemKey);\n      return true;\n    }\n    return false;\n  });\n};\nArray.prototype.remove = function (item: T): T[] {\n  return this.filter((i) => i !== item);\n};\nArray.prototype.removeByKeyValue = function (key: string, value: any): T[] {\n  return this.filter((item) => (item as any)[key] !== value);\n};\nArray.prototype.findIndexByKeyValue = function (\n  key: string,\n  value: any,\n): number {\n  for (let i = 0; i (\n  key: string,\n  value: any,\n): T | undefined {\n  return this.find((item) => (item as any)[key] === value);\n};\nArray.prototype.findValueByKeyValue = function (\n  key: string,\n  value: any,\n  retrieveKey: string,\n): any | undefined {\n  const foundItem = this.find((item) => (item as any)[key] === value);\n  if (foundItem) {\n    return (foundItem as any)[retrieveKey];\n  }\n  return undefined;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CacheStorageService.html":{"url":"injectables/CacheStorageService.html","title":"injectable - CacheStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CacheStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/cache-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                CACHE_KEY\n                            \n                            \n                                    Private\n                                    Readonly\n                                CACHE_TIMEOUT\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addToCache\n                            \n                            \n                                    Private\n                                    Async\n                                checkCacheExpiration\n                            \n                            \n                                    Async\n                                clearCache\n                            \n                            \n                                    Async\n                                getFromCache\n                            \n                            \n                                    Private\n                                updateCacheTimestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/cache-storage.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addToCache\n                        \n                    \n                \n            \n            \n                \n                        \n                    addToCache(key: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cache-storage.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        checkCacheExpiration\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkCacheExpiration()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cache-storage.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearCache\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearCache()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cache-storage.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFromCache\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFromCache(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cache-storage.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateCacheTimestamp\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCacheTimestamp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cache-storage.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        CACHE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ab17-cache'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cache-storage.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        CACHE_TIMEOUT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.cache.timeOut || 3600000\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cache-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CacheStorageService {\n  private readonly CACHE_KEY = 'ab17-cache';\n  private readonly CACHE_TIMEOUT = environment.cache.timeOut || 3600000;\n\n  constructor() {\n    this.checkCacheExpiration();\n  }\n\n  async addToCache(key: string, data: any) {\n    const cache = await caches.open(this.CACHE_KEY);\n    const response = new Response(JSON.stringify(data));\n    await cache.put(key, response);\n    this.updateCacheTimestamp();\n  }\n\n  async getFromCache(key: string) {\n    const cache = await caches.open(this.CACHE_KEY);\n    const response = await cache.match(key);\n    if (response) {\n      const data = await response.json();\n      return data;\n    } else {\n      return null;\n    }\n  }\n\n  async clearCache(){\n    await caches.delete(this.CACHE_KEY);\n  }\n\n  private updateCacheTimestamp() {\n    const currentTime = new Date().getTime();\n    localStorage.setItem('cacheTimestamp', currentTime.toString());\n  }\n\n  private async checkCacheExpiration() {\n    const lastUpdate = localStorage.getItem('cacheTimestamp');\n    if (lastUpdate) {\n      const currentTime = new Date().getTime();\n      const timeElapsed = currentTime - parseInt(lastUpdate, 10);\n      if (timeElapsed >= this.CACHE_TIMEOUT) {\n        await caches.delete(this.CACHE_KEY);\n        localStorage.removeItem('cacheTimestamp');\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ChangeBgColorOnClickDirective.html":{"url":"directives/ChangeBgColorOnClickDirective.html","title":"directive - ChangeBgColorOnClickDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ChangeBgColorOnClickDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/change-bg-color-on-click.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appChangeBgColorOnClick]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                highlight\n                            \n                            \n                                    \n                                onMouseEnter\n                            \n                            \n                                    \n                                onMouseLeave\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appChangeBgColorOnClick\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                mouseenter\n                            \n                            \n                                mouseleave\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/change-bg-color-on-click.directive.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appChangeBgColorOnClick\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/change-bg-color-on-click.directive.ts:7\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            mouseenter\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/change-bg-color-on-click.directive.ts:11\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseleave\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/change-bg-color-on-click.directive.ts:15\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        highlight\n                        \n                    \n                \n            \n            \n                \n                        \n                    highlight(color: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/directives/change-bg-color-on-click.directive.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onMouseEnter\n                        \n                    \n                \n            \n            \n                \n                        \n                    onMouseEnter()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseenter')\n                \n            \n\n                    \n                        \n                            Defined in src/app/directives/change-bg-color-on-click.directive.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onMouseLeave\n                        \n                    \n                \n            \n            \n                \n                        \n                    onMouseLeave()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseleave')\n                \n            \n\n                    \n                        \n                            Defined in src/app/directives/change-bg-color-on-click.directive.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, HostListener, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appChangeBgColorOnClick]',\n})\nexport class ChangeBgColorOnClickDirective {\n  @Input() appChangeBgColorOnClick = '';\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener('mouseenter') onMouseEnter() {\n    this.highlight(this.appChangeBgColorOnClick || 'yellow');\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    this.highlight('');\n  }\n\n  private highlight(color: string) {\n    this.renderer.setStyle(this.el.nativeElement, 'backgroundColor', color);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/configs/config.services.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                API_URL\n                            \n                            \n                                    Public\n                                baseRoute\n                            \n                            \n                                    Public\n                                configSettings\n                            \n                            \n                                    Private\n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deletePromise\n                            \n                            \n                                deleteRequest\n                            \n                            \n                                    Async\n                                getApiPromise\n                            \n                            \n                                    Private\n                                getCompleteUrl\n                            \n                            \n                                getLang\n                            \n                            \n                                    Async\n                                getPromise\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Async\n                                postPromise\n                            \n                            \n                                postRequest\n                            \n                            \n                                    Async\n                                putPromise\n                            \n                            \n                                putRequest\n                            \n                            \n                                readExternalRequest\n                            \n                            \n                                readRequest\n                            \n                            \n                                    Private\n                                serializeParams\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, configSettings: ConfigSettings)\n                    \n                \n                        \n                            \n                                Defined in src/app/configs/config.services.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configSettings\n                                                  \n                                                        \n                                                                        ConfigSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deletePromise\n                        \n                    \n                \n            \n            \n                \n                        \n                    deletePromise(url: string, params?: any, keys?: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                keys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRequest\n                        \n                    \n                \n            \n            \n                \ndeleteRequest(url: string, params: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getApiPromise\n                        \n                    \n                \n            \n            \n                \n                        \n                    getApiPromise(apiCallMethod: () => void, keys?: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiCallMethod\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                keys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getCompleteUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCompleteUrl(url: string, params: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLang\n                        \n                    \n                \n            \n            \n                \ngetLang()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:145\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPromise\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPromise(url: string, params?: any, keys?: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                keys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        postPromise\n                        \n                    \n                \n            \n            \n                \n                        \n                    postPromise(url: string, getParams: any, postParams: any, keys?: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                getParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                postParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                keys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postRequest\n                        \n                    \n                \n            \n            \n                \npostRequest(url: string, getParams: any, postParams: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                getParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                postParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        putPromise\n                        \n                    \n                \n            \n            \n                \n                        \n                    putPromise(url: string, getParams: any, postParams: any, keys?: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                getParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                postParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                keys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putRequest\n                        \n                    \n                \n            \n            \n                \nputRequest(url: string, getParams: Object, postParams: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                getParams\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                postParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readExternalRequest\n                        \n                    \n                \n            \n            \n                \nreadExternalRequest(url: string, params: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readRequest\n                        \n                    \n                \n            \n            \n                \nreadRequest(url: string, params?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        serializeParams\n                        \n                    \n                \n            \n            \n                \n                        \n                    serializeParams(params: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.services.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiUrl || ''\n                    \n                \n                    \n                        \n                                Defined in src/app/configs/config.services.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        baseRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/configs/config.services.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configSettings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigSettings\n\n                    \n                \n                    \n                        \n                                Defined in src/app/configs/config.services.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/configs/config.services.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport {\n  HttpClient,\n  HttpErrorResponse,\n  HttpHeaders,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ConfigSettings } from './config.settings';\nimport { getValue } from './helper';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigService {\n  private API_URL = environment.apiUrl || '';\n  public baseRoute = '';\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n    }),\n  };\n\n  constructor(\n    private http: HttpClient,\n    public configSettings: ConfigSettings,\n  ) {}\n\n  private getCompleteUrl(url: string, params: any): string {\n    const serializedParams = this.serializeParams(params);\n    return (\n      this.API_URL +\n      this.baseRoute +\n      url +\n      (serializedParams ? '?' + serializedParams : '')\n    );\n  }\n\n  private serializeParams(params: any): string {\n    return Object.keys(params)\n      .filter((key) => params.hasOwnProperty(key))\n      .map((key) => `${key}=${encodeURIComponent(params[key])}`)\n      .join('&');\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      console.error('An error occurred:', error.error.message);\n    } else {\n      console.error(\n        `Backend returned code ${error.status}, body was: ${error.error}`,\n      );\n    }\n    return throwError(() => error);\n  }\n\n  readRequest(url: string, params?: any): Observable> {\n    return this.http\n      .get(this.getCompleteUrl(url, params), { observe: 'response' })\n      .pipe(catchError(this.handleError));\n  }\n\n  async getPromise(url: string, params?: any, keys?: string[]){\n    return this.getApiPromise(() => this.readRequest(url, params), keys);\n  }\n\n  readExternalRequest(\n    url: string,\n    params: Object,\n  ): Observable> {\n    return this.http.get(this.getCompleteUrl(url, params), {\n      observe: 'response',\n    });\n  }\n\n  postRequest(url: string, getParams: any, postParams: any): Observable {\n    if (!('lang' in getParams)) {\n      getParams.lang = this.configSettings._lang;\n    }\n    return this.http\n      .post(\n        this.getCompleteUrl(url, getParams),\n        postParams,\n        this.httpOptions,\n      )\n      .pipe(catchError(this.handleError));\n  }\n\n  async postPromise(url: string, getParams: any, postParams: any, keys?: string[]){\n    return this.getApiPromise(() => this.postRequest(url, getParams, postParams), keys);\n  }\n\n  putRequest(url: string, getParams: Object, postParams: any): Observable {\n    return this.http\n      .put(\n        this.getCompleteUrl(url, getParams),\n        postParams,\n        this.httpOptions,\n      )\n      .pipe(catchError(this.handleError));\n  }\n\n  async putPromise(url: string, getParams: any, postParams: any, keys?: string[]){\n    return this.getApiPromise(() => this.putRequest(url, getParams, postParams), keys);\n  }\n\n  deleteRequest(url: string, params: Object): Observable> {\n    return this.http\n      .delete(this.getCompleteUrl(url, params), { observe: 'response' })\n      .pipe(catchError(this.handleError));\n  }\n\n  async deletePromise(url: string, params?: any, keys?: string[]){\n    return this.getApiPromise(() => this.deleteRequest(url, params), keys);\n  }\n\n  async getApiPromise(apiCallMethod: () => any, keys?: string[]) {\n    return new Promise((resolve) => {\n      apiCallMethod().subscribe({\n        next: (res: any) => {\n          if (\n            res.body.statusCode == 200 ||\n            res.statusCode == 200 ||\n            res.status == 200 ||\n            res.body.status == 200\n          ) {\n            if (keys && keys.length > 0) {\n              res = getValue(res, keys);\n            }\n            resolve(res);\n          }\n        },\n        error: (err: any) => {\n          console.error('Failed to connect with API server with error:', err);\n        },\n        complete: () => {\n          // Handle completion if needed\n        },\n      });\n    });\n  }\n\n  getLang(): string {\n    return 'en';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigSettings.html":{"url":"injectables/ConfigSettings.html","title":"injectable - ConfigSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/configs/config.settings.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _lang\n                            \n                            \n                                    Private\n                                LANG_KEY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLang\n                            \n                            \n                                    Private\n                                getStoredLang\n                            \n                            \n                                setLang\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/configs/config.settings.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLang\n                        \n                    \n                \n            \n            \n                \ngetLang()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.settings.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getStoredLang\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStoredLang()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.settings.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLang\n                        \n                    \n                \n            \n            \n                \nsetLang(lang?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/configs/config.settings.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/configs/config.settings.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        LANG_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'lang'\n                    \n                \n                    \n                        \n                                Defined in src/app/configs/config.settings.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigSettings {\n  private LANG_KEY = 'lang';\n  _lang: string;\n\n  constructor() {\n    this._lang = this.getStoredLang() || 'en';\n  }\n\n  setLang(lang?: string) {\n    if (lang) {\n      localStorage.setItem(this.LANG_KEY, lang);\n      this._lang = lang;\n    }\n  }\n\n  getLang() {\n    const storedLang = this.getStoredLang();\n    return storedLang ? storedLang : 'en';\n  }\n\n  private getStoredLang(): string | null {\n    const storedLang = localStorage.getItem(this.LANG_KEY);\n    return storedLang ? (storedLang as string) : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultLayoutComponent.html":{"url":"components/DefaultLayoutComponent.html","title":"component - DefaultLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DefaultLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/default-layout/default-layout.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-default-layout\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./default-layout.component.html\n            \n\n\n\n            \n                styleUrl\n                ./default-layout.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-default-layout',\n  templateUrl: './default-layout.component.html',\n  styleUrl: './default-layout.component.scss'\n})\nexport class DefaultLayoutComponent {\n\n}\n\n    \n\n    \n        \n    Default\n    Home\n    About\n    Contact\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Default    Home    About    Contact'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DefaultLayoutComponent', 'selector': 'app-default-layout'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'loader'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'}];\n    var DIRECTIVES = [{'name': 'ChangeBgColorOnClickDirective', 'selector': '[appChangeBgColorOnClick]'},{'name': 'PulseEffectDirective', 'selector': '[pulseEffect]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentationComponent.html":{"url":"components/DocumentationComponent.html","title":"component - DocumentationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DocumentationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/documentation/documentation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-documentation\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./documentation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./documentation.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                htmlContent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadHtmlContent\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/documentation/documentation.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadHtmlContent\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadHtmlContent(fileName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/documentation/documentation.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/documentation/documentation.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        htmlContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/documentation/documentation.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-documentation',\n  standalone: true,\n  imports: [],\n  templateUrl: './documentation.component.html',\n  styleUrl: './documentation.component.scss'\n})\nexport class DocumentationComponent implements OnInit {\n  htmlContent: string = '';\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    const htmlFileName:any = this.route.snapshot.paramMap.get('fileName');\n    this.loadHtmlContent(htmlFileName);\n  }\n\n  private loadHtmlContent(fileName: string): void {\n    // Assuming your HTML files are in the \"html-files\" folder\n    const filePath = `./assets/html-files/${fileName}`;\n    fetch(filePath)\n      .then(response => response.text())\n      .then(html => this.htmlContent = html);\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DefaultLayoutComponent', 'selector': 'app-default-layout'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'loader'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'}];\n    var DIRECTIVES = [{'name': 'ChangeBgColorOnClickDirective', 'selector': '[appChangeBgColorOnClick]'},{'name': 'PulseEffectDirective', 'selector': '[pulseEffect]'}];\n    var ACTUAL_COMPONENT = {'name': 'DocumentationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/error/error.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n\n\n            \n                styleUrls\n                ./error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent {\n\n}\n\n    \n\n    \n        \n  Error\n  An Error Occurred\n\n\n    \n\n    \n                \n                    ./error.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Error  An Error Occurred'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DefaultLayoutComponent', 'selector': 'app-default-layout'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'loader'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'}];\n    var DIRECTIVES = [{'name': 'ChangeBgColorOnClickDirective', 'selector': '[appChangeBgColorOnClick]'},{'name': 'PulseEffectDirective', 'selector': '[pulseEffect]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                people\n                            \n                            \n                                title\n                            \n                            \n                                triggerV\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getTestData\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, apiServiceService: ApiServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiServiceService\n                                                  \n                                                        \n                                                                        ApiServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTestData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTestData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        entries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        people\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : [\n    { id: 1, name: 'Alice', age: 25 },\n    { id: 2, name: 'Bob', age: 30 },\n    { id: 3, name: 'Charlie', age: 30 },\n    { id: 4, name: 'Charlie', age: 22 },\n    { id: 5, name: 'Charlie', age: 22 },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : 'home'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerV\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ConfigService } from 'src/app/configs/config.services';\nimport { ApiServiceService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  title: String = 'home';\n  people: any = [\n    { id: 1, name: 'Alice', age: 25 },\n    { id: 2, name: 'Bob', age: 30 },\n    { id: 3, name: 'Charlie', age: 30 },\n    { id: 4, name: 'Charlie', age: 22 },\n    { id: 5, name: 'Charlie', age: 22 },\n  ];\n  triggerV:boolean = true;\n\n  constructor(\n    private configService: ConfigService,\n    private apiServiceService: ApiServiceService,\n  ) {\n    this.title = this.title.capitalizeFirstLetter();\n    // console.log(this.people.groupBy((item: any) => item.age));\n    // console.log(this.people.groupByKey('age'));\n    // console.log(this.people.distinct());\n    // console.log(this.people.distinctByKey('age'));\n    // console.log(this.people.sortByKey((item: any) => item.age));\n    // console.log(this.people.sortByKey('age'));\n    // console.log(this.people.sum((item: any) => item.age));\n    // console.log(this.people.sumByKey('age'));\n    // console.log(this.people.chunk(2));\n    // console.log(this.people.unique());\n    // console.log(this.people.uniqueBy('age'));\n    // console.log(this.people.remove({ id: 5, name: 'Charlie', age: 22 }));--BUG\n    // console.log(this.people.removeByKeyValue('age', 22));\n    // console.log(this.people.findIndexByKeyValue('age', 22));\n    // console.log(this.people.findByKeyValue('age', 22));\n  }\n\n  ngOnInit(): void {\n    this.getTestData();\n    setTimeout(() => {\n      this.triggerV = false\n    }, 0);\n  }\n  entries: any;\n\n  async getTestData() {\n    this.entries = await this.configService.getPromise('facts', {})\n  }\n}\n\n    \n\n    \n        \n    Sample data fetched from API\n    d\n    {{entries | json}}\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Sample data fetched from API    d    {{entries | json}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DefaultLayoutComponent', 'selector': 'app-default-layout'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'loader'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'}];\n    var DIRECTIVES = [{'name': 'ChangeBgColorOnClickDirective', 'selector': '[appChangeBgColorOnClick]'},{'name': 'PulseEffectDirective', 'selector': '[pulseEffect]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loader/loader.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                loader\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n            \n                styleUrl\n                ./loader.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'loader',\n  templateUrl: './loader.component.html',\n  styleUrl: './loader.component.scss'\n})\nexport class LoaderComponent {\n\n}\n\n    \n\n    \n        \n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DefaultLayoutComponent', 'selector': 'app-default-layout'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'loader'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'}];\n    var DIRECTIVES = [{'name': 'ChangeBgColorOnClickDirective', 'selector': '[appChangeBgColorOnClick]'},{'name': 'PulseEffectDirective', 'selector': '[pulseEffect]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                displayLoader\n                            \n                            \n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/loader.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/loader.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/loader.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/loader.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        displayLoader\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.loader)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/loader.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/loader.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  loader:boolean = false\n  private displayLoader: BehaviorSubject = new BehaviorSubject(this.loader);\n  constructor() { }\n\n  show(): void {\n    this.loader = true\n    this.displayLoader.next(true);\n  }\n\n  hide(): void {\n    this.loader = false\n    this.displayLoader.next(false);\n  }\n\n  getData(): Observable {\n    return this.displayLoader.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainLayoutComponent.html":{"url":"components/MainLayoutComponent.html","title":"component - MainLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/main-layout/main-layout.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-layout\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./main-layout.component.html\n            \n\n\n\n            \n                styleUrl\n                ./main-layout.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrl: './main-layout.component.scss'\n})\nexport class MainLayoutComponent {\n\n}\n\n    \n\n    \n        \n    Main\n    Home\n    About\n    Contact\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Main    Home    About    Contact'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DefaultLayoutComponent', 'selector': 'app-default-layout'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'loader'},{'name': 'MainLayoutComponent', 'selector': 'app-main-layout'}];\n    var DIRECTIVES = [{'name': 'ChangeBgColorOnClickDirective', 'selector': '[appChangeBgColorOnClick]'},{'name': 'PulseEffectDirective', 'selector': '[pulseEffect]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/MyHttpInterceptorInterceptor.html":{"url":"interceptors/MyHttpInterceptorInterceptor.html","title":"interceptor - MyHttpInterceptorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  MyHttpInterceptorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interceptors/my-http.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                debounceHide\n                            \n                            \n                                lang\n                            \n                            \n                                    Private\n                                ongoingRequestsCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getHeader\n                            \n                            \n                                intercept\n                            \n                            \n                                    Private\n                                startLoader\n                            \n                            \n                                    Private\n                                stopLoader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configSettings: ConfigSettings, cacheStorageService: CacheStorageService, loaderService: LoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/interceptors/my-http.interceptor.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configSettings\n                                                  \n                                                        \n                                                                        ConfigSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheStorageService\n                                                  \n                                                        \n                                                                        CacheStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeader()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/interceptors/my-http.interceptor.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/interceptors/my-http.interceptor.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startLoader\n                        \n                    \n                \n            \n            \n                \n                        \n                    startLoader()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/interceptors/my-http.interceptor.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stopLoader\n                        \n                    \n                \n            \n            \n                \n                        \n                    stopLoader()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/interceptors/my-http.interceptor.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        debounceHide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (() => {\n    let timeoutId: any;    \n    return () => {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => {\n        if (this.ongoingRequestsCount.value === 0) {\n          this.loaderService.hide();\n        }\n      }, 1000);\n    };\n  })()\n                    \n                \n                    \n                        \n                                Defined in src/app/interceptors/my-http.interceptor.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : 'en'\n                    \n                \n                    \n                        \n                                Defined in src/app/interceptors/my-http.interceptor.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ongoingRequestsCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/interceptors/my-http.interceptor.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpHeaders,\n  HttpResponse,\n} from '@angular/common/http';\nimport { BehaviorSubject, Observable, from, of } from 'rxjs';\nimport { finalize, mergeMap, tap } from 'rxjs/operators';\nimport { ConfigSettings } from '../configs/config.settings';\nimport { LoaderService } from '../services/loader.service';\nimport { CacheStorageService } from '../services/cache-storage.service';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class MyHttpInterceptorInterceptor implements HttpInterceptor {\n  lang: any = 'en';\n  private ongoingRequestsCount = new BehaviorSubject(0);\n\n  constructor(\n    private configSettings: ConfigSettings,\n    private cacheStorageService: CacheStorageService,\n    private loaderService: LoaderService\n  ) {\n    this.lang = this.configSettings.getLang();\n  }\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler,\n  ): Observable> {\n    if (request.method === 'GET') {\n      let cacheName = String(request.urlWithParams);\n      if (environment.cache.enable) {\n        return from(this.cacheStorageService.getFromCache(cacheName)).pipe(\n          mergeMap((cachedData: any) => {\n            if (cachedData) {\n              return of(new HttpResponse({ body: cachedData }));\n            } else {\n              return next.handle(request).pipe(\n                tap((event) => {\n                  if (event instanceof HttpResponse) {\n                    this.cacheStorageService.addToCache(cacheName, event.body);\n                  }\n                })\n              );\n            }\n          })\n        );\n      } else {\n        return next.handle(request);\n      }\n    }\n    if((request.method === 'POST' || request.method === 'PUT') && environment.cache.clearOnPost){\n      this.cacheStorageService.clearCache();\n    }\n    let headers = this.getHeader();\n    this.startLoader();\n    const modifiedRequest = request.clone({ headers });\n    return next.handle(modifiedRequest).pipe(\n      finalize(() => {\n        this.stopLoader();\n      })\n    );\n  }\n\n  private getHeader(){\n    return new HttpHeaders({\n      authorization: 'tokenDfkTgVf87gT63Hg',\n      lang: this.lang,\n    });\n  }\n\n  private startLoader(){\n    this.loaderService.show();\n    this.ongoingRequestsCount.next(this.ongoingRequestsCount.value + 1);\n  }\n\n  private stopLoader(){\n    this.ongoingRequestsCount.next(\n      Math.max(0, this.ongoingRequestsCount.value - 1)\n    );\n    if (this.ongoingRequestsCount.value === 0) {\n      this.debounceHide();\n    }\n  }\n\n  private debounceHide = (() => {\n    let timeoutId: any;    \n    return () => {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => {\n        if (this.ongoingRequestsCount.value === 0) {\n          this.loaderService.hide();\n        }\n      }, 1000);\n    };\n  })();\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PulseEffectDirective.html":{"url":"directives/PulseEffectDirective.html","title":"directive - PulseEffectDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  PulseEffectDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/pulse-effect.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [pulseEffect]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                updateClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                pulseEffect\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loaderService: LoaderService, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/pulse-effect.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        pulseEffect\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/pulse-effect.directive.ts:9\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/directives/pulse-effect.directive.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/directives/pulse-effect.directive.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateClass(isActive: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/directives/pulse-effect.directive.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isActive\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, Input, OnInit, SimpleChanges } from '@angular/core';\nimport { LoaderService } from '../services/loader.service';\n\n@Directive({\n  selector: '[pulseEffect]',\n})\nexport class PulseEffectDirective implements OnInit {\n\n  @Input('pulseEffect') isActive: any = false;\n\n  constructor(\n    private loaderService:LoaderService,\n    private elementRef: ElementRef\n  ) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if(typeof this.isActive == 'boolean' && changes['isActive']){\n      this.updateClass(changes['isActive'].currentValue);\n    }\n  }\n\n  ngOnInit(): void {\n    if(typeof this.isActive != 'boolean'){\n      this.loaderService.getData().subscribe((data) => {\n        setTimeout(() => {\n          this.updateClass(!!data)\n        });\n      });\n    }\n  }\n\n  private updateClass(isActive: boolean): void {\n    if (isActive) {\n      this.elementRef.nativeElement.classList.add('animate-pulse');\n      this.elementRef.nativeElement.classList.add('pointer-events-none');\n      this.elementRef.nativeElement.classList.add('bg-[#e4e4e4]');\n    } else {\n      this.elementRef.nativeElement.classList.remove('animate-pulse');\n      this.elementRef.nativeElement.classList.remove('pointer-events-none');\n      this.elementRef.nativeElement.classList.remove('bg-[#e4e4e4]');\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/String.html":{"url":"interfaces/String.html","title":"interface - String","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  String\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/prototypeExtension.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        capitalizeFirstLetter\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        capitalizeFirstLetter\n                        \n                    \n                \n            \n            \n                \ncapitalizeFirstLetter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/prototypeExtension.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export {};\ndeclare global {\n  interface String {\n    capitalizeFirstLetter(): string;\n  }\n  interface Array {\n    groupBy(callback: (item: T) => string): Record;\n    groupByKey(key: string): Record;\n    distinct(): T[];\n    distinctByKey(key: string): T[];\n    sortBy(callback: (item: T) => any): T[];\n    sortByKey(key: string): T[];\n    sum(callback: (item: T) => number): number;\n    sumByKey(key: string): number;\n    chunk(size: number): T[][];\n    unique(): T[];\n    uniqueBy(key: string): T[];\n    remove(item: T): T[];\n    removeByKeyValue(key: string, value: any): T[];\n    findIndexByKeyValue(key: string, value: any): number;\n    findByKeyValue(key: string, value: any): T | undefined;\n    findValueByKeyValue(\n      key: string,\n      value: any,\n      retrieveKey: string,\n    ): any | undefined;\n  }\n}\n\nString.prototype.capitalizeFirstLetter = function () {\n  return this.charAt(0).toUpperCase() + this.slice(1);\n};\n\nArray.prototype.groupBy = function (\n  callback: (item: T) => string,\n): Record {\n  return this.reduce((acc, item) => {\n    const key = callback(item);\n    acc[key] = acc[key] || [];\n    acc[key].push(item);\n    return acc;\n  }, {});\n};\nArray.prototype.groupByKey = function (\n  keyName: string,\n): Record {\n  return this.reduce((acc, item) => {\n    const key = item[keyName];\n    acc[key] = acc[key] || [];\n    acc[key].push(item);\n    return acc;\n  }, {});\n};\nArray.prototype.distinct = function (): T[] {\n  return [...new Set(this)];\n};\nArray.prototype.distinctByKey = function (key: string): T[] {\n  const uniqueKeys = new Set();\n  return this.filter((item) => {\n    const itemKey = (item as any)[key];\n    if (!uniqueKeys.has(itemKey)) {\n      uniqueKeys.add(itemKey);\n      return true;\n    }\n    return false;\n  });\n};\nArray.prototype.sortBy = function (callback: (item: T) => any): T[] {\n  return [...this].sort((a, b) => {\n    const keyA = callback(a);\n    const keyB = callback(b);\n    return keyA  keyB ? 1 : 0;\n  });\n};\nArray.prototype.sortByKey = function (key: string): T[] {\n  return [...this].sort((a, b) => {\n    const keyA = a[key];\n    const keyB = b[key];\n    return keyA  keyB ? 1 : 0;\n  });\n};\nArray.prototype.sum = function (callback: (item: T) => number): number {\n  return this.reduce((acc, item) => acc + callback(item), 0);\n};\nArray.prototype.sumByKey = function (key: string): number {\n  return this.reduce((acc, item) => acc + item[key], 0);\n};\nArray.prototype.chunk = function (size: number): T[][] {\n  return Array.from({ length: Math.ceil(this.length / size) }, (__, index) =>\n    this.slice(index * size, index * size + size),\n  );\n};\nArray.prototype.unique = function (): T[] {\n  return Array.from(new Set(this));\n};\nArray.prototype.uniqueBy = function (key: string): T[] {\n  const uniqueKeys = new Set();\n  return this.filter((item) => {\n    const itemKey = (item as any)[key];\n    if (!uniqueKeys.has(itemKey)) {\n      uniqueKeys.add(itemKey);\n      return true;\n    }\n    return false;\n  });\n};\nArray.prototype.remove = function (item: T): T[] {\n  return this.filter((i) => i !== item);\n};\nArray.prototype.removeByKeyValue = function (key: string, value: any): T[] {\n  return this.filter((item) => (item as any)[key] !== value);\n};\nArray.prototype.findIndexByKeyValue = function (\n  key: string,\n  value: any,\n): number {\n  for (let i = 0; i (\n  key: string,\n  value: any,\n): T | undefined {\n  return this.find((item) => (item as any)[key] === value);\n};\nArray.prototype.findValueByKeyValue = function (\n  key: string,\n  value: any,\n  retrieveKey: string,\n): any | undefined {\n  const foundItem = this.find((item) => (item as any)[key] === value);\n  if (foundItem) {\n    return (foundItem as any)[retrieveKey];\n  }\n  return undefined;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/UpperCasePipe.html":{"url":"pipes/UpperCasePipe.html","title":"pipe - UpperCasePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  UpperCasePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/upper-case.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        upperCase\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string, ...args: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pipes/upper-case.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'upperCase'\n})\nexport class UpperCasePipe implements PipeTransform {\n\n  transform(value: string, ...args: any[]): any {\n    return value.toUpperCase();;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    id: number;\n    name: string;\n    email?: string;\n    phone?: string;\n    password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/configs/config.services.ts\n            \n            injectable\n            ConfigService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/configs/config.settings.ts\n            \n            injectable\n            ConfigSettings\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/configs/helper.ts\n            \n            function\n            getValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/directives/change-bg-color-on-click.directive.ts\n            \n            directive\n            ChangeBgColorOnClickDirective\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/directives/pulse-effect.directive.ts\n            \n            directive\n            PulseEffectDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/interceptors/my-http.interceptor.ts\n            \n            interceptor\n            MyHttpInterceptorInterceptor\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/interfaces/user.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/layouts/default-layout/default-layout.component.ts\n            \n            component\n            DefaultLayoutComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layouts/main-layout/main-layout.component.ts\n            \n            component\n            MainLayoutComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/documentation/documentation.component.ts\n            \n            component\n            DocumentationComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/pages/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pipes/upper-case.pipe.ts\n            \n            pipe\n            UpperCasePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/prototypeExtension.ts\n            \n            interface\n            Array\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/prototypeExtension.ts\n            \n            interface\n            String\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            injectable\n            ApiServiceService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/cache-storage.service.ts\n            \n            injectable\n            CacheStorageService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/loader.service.ts\n            \n            injectable\n            LoaderService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.0.8\n        \n            @angular/common : ^17.0.8\n        \n            @angular/compiler : ^17.0.8\n        \n            @angular/core : ^17.0.8\n        \n            @angular/forms : ^17.0.8\n        \n            @angular/platform-browser : ^17.0.8\n        \n            @angular/platform-browser-dynamic : ^17.0.8\n        \n            @angular/router : ^17.0.8\n        \n            @angular/service-worker : ^17.0.8\n        \n            @compodoc/compodoc : ^1.1.23\n        \n            primeng : ^17.4.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getValue   (src/.../helper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/configs/helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue(obj: any, keys)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                keys\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngularBoilerplateV16\nThis project was generated with Angular CLI version 16.2.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangeBgColorOnClickDirective\n\nChangeBgColorOnClickDirective\n\nAppModule -->\n\nChangeBgColorOnClickDirective->AppModule\n\n\n\n\n\nDefaultLayoutComponent\n\nDefaultLayoutComponent\n\nAppModule -->\n\nDefaultLayoutComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nMainLayoutComponent\n\nMainLayoutComponent\n\nAppModule -->\n\nMainLayoutComponent->AppModule\n\n\n\n\n\nPulseEffectDirective\n\nPulseEffectDirective\n\nAppModule -->\n\nPulseEffectDirective->AppModule\n\n\n\n\n\nUpperCasePipe\n\nUpperCasePipe\n\nAppModule -->\n\nUpperCasePipe->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMyHttpInterceptorInterceptor\n\nMyHttpInterceptorInterceptor\n\nAppModule -->\n\nMyHttpInterceptorInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        6 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n        \n            Author : Abhishek Vishwakarma\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  return true;\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  apiUrl: 'https://cat-fact.herokuapp.com/',\n  cache:{\n    enable:true,\n    clearOnPost:true,\n    timeOut:3600000, //milliseconds\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  apiUrl: 'https://cat-fact.herokuapp.com/',\n  cache:{\n    enable:true,\n    clearOnPost:true,\n    timeOut:3600000, //milliseconds\n  }\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
